{"version":3,"file":"xterm.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,wHCJT,gBAGA,UACA,UACA,UACA,SACA,UAEA,UASA,MAAaC,UAA6B,EAAAC,WA0BxCC,YACmBC,EACAC,GAEjBC,QAHiB,KAAAF,UAAAA,EACA,KAAAC,eAAAA,EAvBX,KAAAE,qBAA+B,EAiB/B,KAAAC,gBAA4B,GAE5B,KAAAC,iBAA2B,GAOjCC,KAAKC,uBAAyBC,SAASC,cAAc,OACrDH,KAAKC,uBAAuBG,UAAUC,IAAI,uBAC1CL,KAAKC,uBAAuBK,SAAW,EAEvCN,KAAKO,cAAgBL,SAASC,cAAc,OAC5CH,KAAKO,cAAcC,aAAa,OAAQ,QACxCR,KAAKO,cAAcH,UAAUC,IAAI,4BACjCL,KAAKS,aAAe,GACpB,IAAK,IAAIpB,EAAI,EAAGA,EAAIW,KAAKN,UAAUgB,KAAMrB,IACvCW,KAAKS,aAAapB,GAAKW,KAAKW,+BAC5BX,KAAKO,cAAcK,YAAYZ,KAAKS,aAAapB,IAmBnD,GAhBAW,KAAKa,0BAA4BC,GAAKd,KAAKe,qBAAqBD,EAAG,GACnEd,KAAKgB,6BAA+BF,GAAKd,KAAKe,qBAAqBD,EAAG,GACtEd,KAAKS,aAAa,GAAGQ,iBAAiB,QAASjB,KAAKa,2BACpDb,KAAKS,aAAaT,KAAKS,aAAaS,OAAS,GAAGD,iBAAiB,QAASjB,KAAKgB,8BAE/EhB,KAAKmB,yBACLnB,KAAKC,uBAAuBW,YAAYZ,KAAKO,eAE7CP,KAAKoB,qBAAuB,IAAI,EAAAC,mBAAmBrB,KAAKsB,YAAYC,KAAKvB,OACzEA,KAAKwB,eAELxB,KAAKyB,YAAcvB,SAASC,cAAc,OAC1CH,KAAKyB,YAAYrB,UAAUC,IAAI,eAC/BL,KAAKyB,YAAYjB,aAAa,YAAa,aAC3CR,KAAKC,uBAAuBW,YAAYZ,KAAKyB,cAExCzB,KAAKN,UAAUgC,QAClB,MAAM,IAAIC,MAAM,oDAElB3B,KAAKN,UAAUgC,QAAQE,sBAAsB,aAAc5B,KAAKC,wBAEhED,KAAK6B,SAAS7B,KAAKoB,sBACnBpB,KAAK6B,SAAS7B,KAAKN,UAAUoC,UAAShB,GAAKd,KAAK+B,cAAcjB,EAAEJ,SAChEV,KAAK6B,SAAS7B,KAAKN,UAAUsC,UAASlB,GAAKd,KAAKwB,aAAaV,EAAEmB,MAAOnB,EAAEoB,QACxElC,KAAK6B,SAAS7B,KAAKN,UAAUyC,UAAS,IAAMnC,KAAKwB,kBAEjDxB,KAAK6B,SAAS7B,KAAKN,UAAU0C,YAAWC,GAAQrC,KAAKsC,YAAYD,MACjErC,KAAK6B,SAAS7B,KAAKN,UAAU6C,YAAW,IAAMvC,KAAKsC,YAAY,SAC/DtC,KAAK6B,SAAS7B,KAAKN,UAAU8C,WAAUC,GAAczC,KAAK0C,WAAWD,MACrEzC,KAAK6B,SAAS7B,KAAKN,UAAUiD,OAAM7B,GAAKd,KAAK4C,WAAW9B,EAAE+B,QAC1D7C,KAAK6B,SAAS7B,KAAKN,UAAUoD,QAAO,IAAM9C,KAAK+C,sBAC/C/C,KAAK6B,SAAS7B,KAAKL,eAAeqD,oBAAmB,IAAMhD,KAAKmB,4BAEhEnB,KAAKiD,kBAAoB,IAAI,EAAAC,iBAAiBC,QAC9CnD,KAAK6B,SAAS7B,KAAKiD,mBACnBjD,KAAKiD,kBAAkBG,aAAY,IAAMpD,KAAKmB,2BAG9CnB,KAAK6B,UAAS,IAAAwB,0BAAyBF,OAAQ,UAAU,IAAMnD,KAAKmB,4BACpEnB,KAAK6B,UAAS,IAAAyB,eAAa,MACzB,IAAAC,yBAAwBvD,KAAKC,wBAC7BD,KAAKS,aAAaS,OAAS,CAAC,IAEhC,CAEQH,qBAAqBD,EAAe0C,GAC1C,MAAMC,EAAkB3C,EAAE4C,OACpBC,EAAwB3D,KAAKS,aAA0B,IAAb+C,EAAoC,EAAIxD,KAAKS,aAAaS,OAAS,GAKnH,GAFiBuC,EAAgBG,aAAa,oBACd,IAAbJ,EAAoC,IAAM,GAAGxD,KAAKN,UAAUmE,OAAOC,MAAM5C,UAE1F,OAKF,GAAIJ,EAAEiD,gBAAkBJ,EACtB,OAIF,IAAIK,EACAC,EAgBJ,GAfiB,IAAbT,GACFQ,EAAqBP,EACrBQ,EAAwBjE,KAAKS,aAAayD,MAC1ClE,KAAKO,cAAc4D,YAAYF,KAE/BD,EAAqBhE,KAAKS,aAAa2D,QACvCH,EAAwBR,EACxBzD,KAAKO,cAAc4D,YAAYH,IAIjCA,EAAmBK,oBAAoB,QAASrE,KAAKa,2BACrDoD,EAAsBI,oBAAoB,QAASrE,KAAKgB,8BAGvC,IAAbwC,EAAmC,CACrC,MAAMc,EAAatE,KAAKW,+BACxBX,KAAKS,aAAa8D,QAAQD,GAC1BtE,KAAKO,cAAcqB,sBAAsB,aAAc0C,E,KAClD,CACL,MAAMA,EAAatE,KAAKW,+BACxBX,KAAKS,aAAa+D,KAAKF,GACvBtE,KAAKO,cAAcK,YAAY0D,E,CAIjCtE,KAAKS,aAAa,GAAGQ,iBAAiB,QAASjB,KAAKa,2BACpDb,KAAKS,aAAaT,KAAKS,aAAaS,OAAS,GAAGD,iBAAiB,QAASjB,KAAKgB,8BAG/EhB,KAAKN,UAAU+E,YAAyB,IAAbjB,GAAqC,EAAI,GAGpExD,KAAKS,aAA0B,IAAb+C,EAAoC,EAAIxD,KAAKS,aAAaS,OAAS,GAAGwD,QAGxF5D,EAAE6D,iBACF7D,EAAE8D,0BACJ,CAEQ7C,cAAcrB,GAEpBV,KAAKS,aAAaT,KAAKS,aAAaS,OAAS,GAAGmD,oBAAoB,QAASrE,KAAKgB,8BAGlF,IAAK,IAAI3B,EAAIW,KAAKO,cAAcsE,SAAS3D,OAAQ7B,EAAIW,KAAKN,UAAUgB,KAAMrB,IACxEW,KAAKS,aAAapB,GAAKW,KAAKW,+BAC5BX,KAAKO,cAAcK,YAAYZ,KAAKS,aAAapB,IAGnD,KAAOW,KAAKS,aAAaS,OAASR,GAChCV,KAAKO,cAAc4D,YAAYnE,KAAKS,aAAayD,OAInDlE,KAAKS,aAAaT,KAAKS,aAAaS,OAAS,GAAGD,iBAAiB,QAASjB,KAAKgB,8BAE/EhB,KAAKmB,wBACP,CAEQR,+BACN,MAAMe,EAAUxB,SAASC,cAAc,OAIvC,OAHAuB,EAAQlB,aAAa,OAAQ,YAC7BkB,EAAQpB,UAAY,EACpBN,KAAK8E,sBAAsBpD,GACpBA,CACT,CAEQgB,WAAWD,GACjB,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAYpD,IAC9BW,KAAKsC,YAAY,IAErB,CAEQA,YAAYD,GACdrC,KAAKH,qBAAuBkF,KAC1B/E,KAAKF,gBAAgBoB,OAAS,EAEZlB,KAAKF,gBAAgBsE,UACrB/B,IAClBrC,KAAKD,kBAAoBsC,GAG3BrC,KAAKD,kBAAoBsC,EAGd,OAATA,IACFrC,KAAKH,uBAC6BkF,KAA9B/E,KAAKH,uBACPG,KAAKyB,YAAYuD,aAAeC,EAAQC,gBAKxC,EAAAC,OACEnF,KAAKyB,YAAYuD,aAAehF,KAAKyB,YAAYuD,YAAY9D,OAAS,IAAMlB,KAAKyB,YAAY2D,YAC/FC,YAAW,KACTrF,KAAKC,uBAAuBW,YAAYZ,KAAKyB,YAAY,GACxD,GAIX,CAEQsB,mBACN/C,KAAKyB,YAAYuD,YAAc,GAC/BhF,KAAKH,qBAAuB,EAGxB,EAAAsF,QACF,IAAA5B,yBAAwBvD,KAAKyB,YAEjC,CAEQmB,WAAW0C,GACjBtF,KAAK+C,mBACL/C,KAAKF,gBAAgB0E,KAAKc,EAC5B,CAEQ9D,aAAaS,EAAgBC,GACnClC,KAAKoB,qBAAqBmE,QAAQtD,EAAOC,EAAKlC,KAAKN,UAAUgB,KAC/D,CAEQY,YAAYW,EAAeC,GACjC,MAAM2B,EAAkB7D,KAAKN,UAAUmE,OACjC2B,EAAU3B,EAAOC,MAAM5C,OAAOuE,WACpC,IAAK,IAAIpG,EAAI4C,EAAO5C,GAAK6C,EAAK7C,IAAK,CACjC,MAAMqG,EAAW7B,EAAO8B,4BAA4B9B,EAAO+B,MAAQvG,GAAG,GAChEwG,GAAYhC,EAAO+B,MAAQvG,EAAI,GAAGoG,WAClC/D,EAAU1B,KAAKS,aAAapB,GAC9BqC,IACsB,IAApBgE,EAASxE,OACXQ,EAAQoE,UAAY,IAEpBpE,EAAQsD,YAAcU,EAExBhE,EAAQlB,aAAa,gBAAiBqF,GACtCnE,EAAQlB,aAAa,eAAgBgF,G,CAGzCxF,KAAK+F,qBACP,CAEQ5E,yBACN,GAAKnB,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OAA7C,CAGInG,KAAKS,aAAaS,SAAWlB,KAAKN,UAAUgB,MAC9CV,KAAK+B,cAAc/B,KAAKN,UAAUgB,MAEpC,IAAK,IAAIrB,EAAI,EAAGA,EAAIW,KAAKN,UAAUgB,KAAMrB,IACvCW,KAAK8E,sBAAsB9E,KAAKS,aAAapB,G,CAEjD,CAEQyF,sBAAsBpD,GAC5BA,EAAQ0E,MAAMD,OAAS,GAAGnG,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,UACpE,CAEQJ,sBAC+B,IAAjC/F,KAAKD,iBAAiBmB,SAG1BlB,KAAKyB,YAAYuD,aAAehF,KAAKD,iBACrCC,KAAKD,iBAAmB,GAC1B,EAlRF,wB,eCXA,SAAgBsG,EAAuBC,GACrC,OAAOA,EAAKC,QAAQ,SAAU,KAChC,CAMA,SAAgBC,EAAoBF,EAAcG,GAChD,OAAIA,EACK,SAAcH,EAAO,SAEvBA,CACT,CAyBA,SAAgBI,EAAMJ,EAAcK,EAA+BC,GAEjEN,EAAOE,EADPF,EAAOD,EAAuBC,GACGM,EAAYC,gBAAgBJ,oBAC7DG,EAAYE,iBAAiBR,GAAM,GACnCK,EAASI,MAAQ,EACnB,CAOA,SAAgBC,EAA6BC,EAAgBN,EAA+BO,GAG1F,MAAMC,EAAMD,EAAcE,wBACpBC,EAAOJ,EAAGK,QAAUH,EAAIE,KAAO,GAC/BE,EAAMN,EAAGO,QAAUL,EAAII,IAAM,GAGnCZ,EAASP,MAAMqB,MAAQ,OACvBd,EAASP,MAAMD,OAAS,OACxBQ,EAASP,MAAMiB,KAAO,GAAGA,MACzBV,EAASP,MAAMmB,IAAM,GAAGA,MACxBZ,EAASP,MAAMsB,OAAS,OAExBf,EAASjC,OACX,C,mMAjEA,2BAQA,wBAWA,uBAA4BuC,EAAoBU,GAC1CV,EAAGW,eACLX,EAAGW,cAAcC,QAAQ,aAAcF,EAAiBG,eAG1Db,EAAGtC,gBACL,EAKA,4BAAiCsC,EAAoBN,EAA+BC,GAClFK,EAAGc,kBACCd,EAAGW,eAELlB,EADaO,EAAGW,cAAcI,QAAQ,cAC1BrB,EAAUC,EAE1B,EAEA,UAYA,iCAoBA,6BAAkCK,EAAgBN,EAA+BO,EAA4BS,EAAqCM,GAChJjB,EAA6BC,EAAIN,EAAUO,GAEvCe,GACFN,EAAiBO,iBAAiBjB,GAIpCN,EAASI,MAAQY,EAAiBG,cAClCnB,EAASwB,QACX,C,8FCrFA,gBAEA,yCACU,KAAAC,OAAmE,IAAI,EAAAC,UACvE,KAAAC,KAAiE,IAAI,EAAAD,SAsB/E,CApBSE,OAAOC,EAAYC,EAAY1B,GACpC/G,KAAKsI,KAAKI,IAAIF,EAAIC,EAAI1B,EACxB,CAEO4B,OAAOH,EAAYC,GACxB,OAAOzI,KAAKsI,KAAKM,IAAIJ,EAAIC,EAC3B,CAEOI,SAASL,EAAYC,EAAY1B,GACtC/G,KAAKoI,OAAOM,IAAIF,EAAIC,EAAI1B,EAC1B,CAEO+B,SAASN,EAAYC,GAC1B,OAAOzI,KAAKoI,OAAOQ,IAAIJ,EAAIC,EAC7B,CAEOM,QACL/I,KAAKoI,OAAOW,QACZ/I,KAAKsI,KAAKS,OACZ,E,iGC3BF,sCAA2CC,G,MACzC,IAAK,MAAMlI,KAAKkI,EACE,QAAhB,EAAAlI,aAAC,EAADA,EAAGmI,qBAAa,SAAE9E,YAAYrD,EAElC,C,kGCMA,oCACEoI,EACAC,EACAC,EACAC,GAEAH,EAAKjI,iBAAiBkI,EAAMC,EAASC,GACrC,IAAIC,GAAW,EACf,MAAO,CACLC,QAAS,KACHD,IAGJA,GAAW,EACXJ,EAAK7E,oBAAoB8E,EAAMC,EAASC,GAAQ,EAGtD,C,igBCxBA,gBACA,UACA,SACA,UAEA,IAAaG,EAAb,cAAgC,EAAAhK,WAoB9BC,YACmCgK,GAEjC7J,QAFiC,KAAA6J,eAAAA,EAjB3B,KAAAC,eAAkC,GAKlC,KAAAC,sBAAuC,GAEvC,KAAAC,aAAuB,EAEvB,KAAAC,aAAuB,EAEd,KAAAC,qBAAuB9J,KAAK6B,SAAS,IAAI,EAAAkI,cAC1C,KAAAC,oBAAsBhK,KAAK8J,qBAAqBG,MAC/C,KAAAC,qBAAuBlK,KAAK6B,SAAS,IAAI,EAAAkI,cAC1C,KAAAI,oBAAsBnK,KAAKkK,qBAAqBD,MAM9DjK,KAAK6B,UAAS,IAAAuI,2BAA0BpK,KAAK2J,wBAC7C3J,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKqK,qBAAkBC,CAAS,IAEpC,CAvBWC,kBAA4C,OAAOvK,KAAKwK,YAAc,CAyB1EC,qBAAqBC,GAE1B,OADA1K,KAAK0J,eAAelF,KAAKkG,GAClB,CACLnB,QAAS,KAEP,MAAMoB,EAAgB3K,KAAK0J,eAAekB,QAAQF,IAE3B,IAAnBC,GACF3K,KAAK0J,eAAemB,OAAOF,EAAe,E,EAIlD,CAEOG,YAAYpJ,EAAsBqJ,EAA6BC,GACpEhL,KAAKiL,SAAWvJ,EAChB1B,KAAKkL,cAAgBH,EACrB/K,KAAKL,eAAiBqL,EAEtBhL,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKiL,SAAU,cAAc,KAClEjL,KAAK4J,aAAc,EACnB5J,KAAKmL,mBAAmB,KAE1BnL,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKiL,SAAU,YAAajL,KAAKoL,iBAAiB7J,KAAKvB,QAC9FA,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKiL,SAAU,YAAajL,KAAKqL,iBAAiB9J,KAAKvB,QAC9FA,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKiL,SAAU,UAAWjL,KAAKsL,eAAe/J,KAAKvB,OAC5F,CAEQoL,iBAAiBnB,GAGvB,GAFAjK,KAAKqK,gBAAkBJ,GAElBjK,KAAKiL,WAAajL,KAAKkL,cAC1B,OAGF,MAAM1H,EAAWxD,KAAKuL,wBAAwBtB,EAAOjK,KAAKiL,SAAUjL,KAAKkL,eACzE,IAAK1H,EACH,OAEFxD,KAAK4J,aAAc,EAGnB,MAAM4B,EAAevB,EAAMuB,eAC3B,IAAK,IAAInM,EAAI,EAAGA,EAAImM,EAAatK,OAAQ7B,IAAK,CAC5C,MAAMqE,EAAS8H,EAAanM,GAE5B,GAAIqE,EAAOtD,UAAUqL,SAAS,SAC5B,MAGF,GAAI/H,EAAOtD,UAAUqL,SAAS,eAC5B,M,CAICzL,KAAK0L,iBAAoBlI,EAASmI,IAAM3L,KAAK0L,gBAAgBC,GAAKnI,EAASoI,IAAM5L,KAAK0L,gBAAgBE,IACzG5L,KAAK6L,aAAarI,GAClBxD,KAAK0L,gBAAkBlI,EAE3B,CAEQqI,aAAarI,GAGnB,GAAIxD,KAAK6J,cAAgBrG,EAASoI,EAGhC,OAFA5L,KAAKmL,yBACLnL,KAAK8L,YAAYtI,GAAU,GAKGxD,KAAKwK,cAAgBxK,KAAK+L,gBAAgB/L,KAAKwK,aAAawB,KAAMxI,KAEhGxD,KAAKmL,oBACLnL,KAAK8L,YAAYtI,GAAU,GAE/B,CAEQsI,YAAYtI,EAA+ByI,G,QAC5CjM,KAAKkM,wBAA2BD,IACR,QAA3B,EAAAjM,KAAKkM,8BAAsB,SAAEC,SAAQC,IACnCA,SAAAA,EAAOD,SAAQE,IACTA,EAAcL,KAAKzC,SACrB8C,EAAcL,KAAKzC,S,GAErB,IAEJvJ,KAAKkM,uBAAyB,IAAII,IAClCtM,KAAK6J,YAAcrG,EAASoI,GAE9B,IAAIW,GAAe,EAGnB,IAAK,MAAOlN,EAAGqL,KAAiB1K,KAAK0J,eAAe8C,UAC9CP,GAC+C,QAA3B,EAAAjM,KAAKkM,8BAAsB,eAAEtD,IAAIvJ,MAOrDkN,EAAevM,KAAKyM,yBAAyBpN,EAAGmE,EAAU+I,IAG5D7B,EAAagC,aAAalJ,EAASoI,GAAIe,I,QACrC,GAAI3M,KAAK4J,YACP,OAEF,MAAMgD,EAA+CD,aAAK,EAALA,EAAOE,KAAIb,IAAS,CAAGA,WACjD,QAA3B,EAAAhM,KAAKkM,8BAAsB,SAAExD,IAAIrJ,EAAGuN,GACpCL,EAAevM,KAAKyM,yBAAyBpN,EAAGmE,EAAU+I,IAI3B,QAA3B,EAAAvM,KAAKkM,8BAAsB,eAAEY,QAAS9M,KAAK0J,eAAexI,QAC5DlB,KAAK+M,yBAAyBvJ,EAASoI,EAAG5L,KAAKkM,uB,GAKzD,CAEQa,yBAAyBnB,EAAWoB,GAC1C,MAAMC,EAAgB,IAAIC,IAC1B,IAAK,IAAI7N,EAAI,EAAGA,EAAI2N,EAAQF,KAAMzN,IAAK,CACrC,MAAM8N,EAAgBH,EAAQpE,IAAIvJ,GAClC,GAAK8N,EAGL,IAAK,IAAI9N,EAAI,EAAGA,EAAI8N,EAAcjM,OAAQ7B,IAAK,CAC7C,MAAMgN,EAAgBc,EAAc9N,GAC9B+N,EAASf,EAAcL,KAAKqB,MAAMpL,MAAM2J,EAAIA,EAAI,EAAIS,EAAcL,KAAKqB,MAAMpL,MAAM0J,EACnF2B,EAAOjB,EAAcL,KAAKqB,MAAMnL,IAAI0J,EAAIA,EAAI5L,KAAKyJ,eAAe8D,KAAOlB,EAAcL,KAAKqB,MAAMnL,IAAIyJ,EAC1G,IAAK,IAAIA,EAAIyB,EAAQzB,GAAK2B,EAAM3B,IAAK,CACnC,GAAIsB,EAAcO,IAAI7B,GAAI,CACxBwB,EAActC,OAAOxL,IAAK,GAC1B,K,CAEF4N,EAAc5M,IAAIsL,E,GAI1B,CAEQc,yBAAyBgB,EAAejK,EAA+B+I,G,MAC7E,IAAKvM,KAAKkM,uBACR,OAAOK,EAGT,MAAMI,EAAQ3M,KAAKkM,uBAAuBtD,IAAI6E,GAG9C,IAAIC,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOE,IACpB3N,KAAKkM,uBAAuBsB,IAAIG,KAAM3N,KAAKkM,uBAAuBtD,IAAI+E,KACzED,GAAgB,GAMpB,IAAKA,GAAiBf,EAAO,CAC3B,MAAMiB,EAAiBjB,EAAMkB,MAAK7B,GAAQhM,KAAK+L,gBAAgBC,EAAKA,KAAMxI,KACtEoK,IACFrB,GAAe,EACfvM,KAAK8N,eAAeF,G,CAKxB,GAAI5N,KAAKkM,uBAAuBY,OAAS9M,KAAK0J,eAAexI,SAAWqL,EAEtE,IAAK,IAAIoB,EAAI,EAAGA,EAAI3N,KAAKkM,uBAAuBY,KAAMa,IAAK,CACzD,MAAMpD,EAAgD,QAAlC,EAAAvK,KAAKkM,uBAAuBtD,IAAI+E,UAAE,eAAEE,MAAK7B,GAAQhM,KAAK+L,gBAAgBC,EAAKA,KAAMxI,KACrG,GAAI+G,EAAa,CACfgC,GAAe,EACfvM,KAAK8N,eAAevD,GACpB,K,EAKN,OAAOgC,CACT,CAEQlB,mBACNrL,KAAK+N,eAAiB/N,KAAKwK,YAC7B,CAEQc,eAAerB,GACrB,IAAKjK,KAAKiL,WAAajL,KAAKkL,gBAAkBlL,KAAKwK,aACjD,OAGF,MAAMhH,EAAWxD,KAAKuL,wBAAwBtB,EAAOjK,KAAKiL,SAAUjL,KAAKkL,eACpE1H,GAIDxD,KAAK+N,iBAAmB/N,KAAKwK,cAAgBxK,KAAK+L,gBAAgB/L,KAAKwK,aAAawB,KAAMxI,IAC5FxD,KAAKwK,aAAawB,KAAKgC,SAAS/D,EAAOjK,KAAKwK,aAAawB,KAAK1F,KAElE,CAEQ6E,kBAAkB8C,EAAmBC,GACtClO,KAAKiL,UAAajL,KAAKwK,cAAiBxK,KAAKqK,mBAK7C4D,IAAaC,GAAWlO,KAAKwK,aAAawB,KAAKqB,MAAMpL,MAAM2J,GAAKqC,GAAYjO,KAAKwK,aAAawB,KAAKqB,MAAMnL,IAAI0J,GAAKsC,KACrHlO,KAAKmO,WAAWnO,KAAKiL,SAAUjL,KAAKwK,aAAawB,KAAMhM,KAAKqK,iBAC5DrK,KAAKwK,kBAAeF,GACpB,IAAA8D,cAAapO,KAAK2J,uBAEtB,CAEQmE,eAAezB,GACrB,IAAKrM,KAAKiL,WAAajL,KAAKqK,kBAAoBrK,KAAKkL,cACnD,OAGF,MAAM1H,EAAWxD,KAAKuL,wBAAwBvL,KAAKqK,gBAAiBrK,KAAKiL,SAAUjL,KAAKkL,eAEnF1H,GAKDxD,KAAK+L,gBAAgBM,EAAcL,KAAMxI,KAC3CxD,KAAKwK,aAAe6B,EACpBrM,KAAKwK,aAAa6D,MAAQ,CACxBC,YAAa,CACXC,eAA8CjE,IAAnC+B,EAAcL,KAAKsC,aAAmCjC,EAAcL,KAAKsC,YAAYC,UAChGC,mBAAkDlE,IAAnC+B,EAAcL,KAAKsC,aAAmCjC,EAAcL,KAAKsC,YAAYE,eAEtGC,WAAW,GAEbzO,KAAK0O,WAAW1O,KAAKiL,SAAUoB,EAAcL,KAAMhM,KAAKqK,iBAGxDgC,EAAcL,KAAKsC,YAAc,CAAC,EAClCK,OAAOC,iBAAiBvC,EAAcL,KAAKsC,YAAa,CACtDE,cAAe,CACb5F,IAAK,KAAK,QAAC,OAAwB,QAAxB,EAAiB,QAAjB,EAAA5I,KAAKwK,oBAAY,eAAE6D,aAAK,eAAEC,YAAYE,aAAa,EAC9D9F,IAAKmG,I,SACkB,QAAjB,EAAA7O,KAAKwK,oBAAY,eAAE6D,QAASrO,KAAKwK,aAAa6D,MAAMC,YAAYE,gBAAkBK,IACpF7O,KAAKwK,aAAa6D,MAAMC,YAAYE,cAAgBK,EAChD7O,KAAKwK,aAAa6D,MAAMI,YACb,QAAb,EAAAzO,KAAKiL,gBAAQ,SAAE7K,UAAU0O,OAAO,uBAAwBD,I,GAKhEN,UAAW,CACT3F,IAAK,KAAK,QAAC,OAAwB,QAAxB,EAAiB,QAAjB,EAAA5I,KAAKwK,oBAAY,eAAE6D,aAAK,eAAEC,YAAYC,SAAS,EAC1D7F,IAAKmG,I,WACkB,QAAjB,EAAA7O,KAAKwK,oBAAY,eAAE6D,SAAiC,QAAxB,EAAiB,QAAjB,EAAArO,KAAKwK,oBAAY,eAAE6D,aAAK,eAAEC,YAAYC,aAAcM,IAClF7O,KAAKwK,aAAa6D,MAAMC,YAAYC,UAAYM,EAC5C7O,KAAKwK,aAAa6D,MAAMI,WAC1BzO,KAAK+O,oBAAoB1C,EAAcL,KAAM6C,G,KAQnD7O,KAAKL,gBACPK,KAAK2J,sBAAsBnF,KAAKxE,KAAKL,eAAeqP,0BAAyBlO,IAG3E,MAAMmB,EAAoB,IAAZnB,EAAEmB,MAAc,EAAInB,EAAEmB,MAAQ,EAAIjC,KAAKyJ,eAAe5F,OAAO+B,MAC3E5F,KAAKmL,kBAAkBlJ,EAAOnB,EAAEoB,IAAM,EAAIlC,KAAKyJ,eAAe5F,OAAO+B,MAAM,KAInF,CAEU8I,WAAWhN,EAAsBsK,EAAa/B,G,OACjC,QAAjB,EAAAjK,KAAKwK,oBAAY,eAAE6D,SACrBrO,KAAKwK,aAAa6D,MAAMI,WAAY,EAChCzO,KAAKwK,aAAa6D,MAAMC,YAAYC,WACtCvO,KAAK+O,oBAAoB/C,GAAM,GAE7BhM,KAAKwK,aAAa6D,MAAMC,YAAYE,eACtC9M,EAAQtB,UAAUC,IAAI,yBAItB2L,EAAKiD,OACPjD,EAAKiD,MAAMhF,EAAO+B,EAAK1F,KAE3B,CAEQyI,oBAAoB/C,EAAakD,GACvC,MAAM7B,EAAQrB,EAAKqB,MACb8B,EAAenP,KAAKyJ,eAAe5F,OAAO+B,MAC1CqE,EAAQjK,KAAKoP,0BAA0B/B,EAAMpL,MAAM0J,EAAI,EAAG0B,EAAMpL,MAAM2J,EAAIuD,EAAe,EAAG9B,EAAMnL,IAAIyJ,EAAG0B,EAAMnL,IAAI0J,EAAIuD,EAAe,OAAG7E,IAC/H4E,EAAYlP,KAAK8J,qBAAuB9J,KAAKkK,sBACrDmF,KAAKpF,EACf,CAEUkE,WAAWzM,EAAsBsK,EAAa/B,G,OACjC,QAAjB,EAAAjK,KAAKwK,oBAAY,eAAE6D,SACrBrO,KAAKwK,aAAa6D,MAAMI,WAAY,EAChCzO,KAAKwK,aAAa6D,MAAMC,YAAYC,WACtCvO,KAAK+O,oBAAoB/C,GAAM,GAE7BhM,KAAKwK,aAAa6D,MAAMC,YAAYE,eACtC9M,EAAQtB,UAAUkP,OAAO,yBAIzBtD,EAAKuD,OACPvD,EAAKuD,MAAMtF,EAAO+B,EAAK1F,KAE3B,CAOQyF,gBAAgBC,EAAaxI,GACnC,MAAMgM,EAAWxD,EAAKqB,MAAMpL,MAAM2J,IAAMI,EAAKqB,MAAMnL,IAAI0J,EACjD6D,EAAkBzD,EAAKqB,MAAMpL,MAAM2J,EAAIpI,EAASoI,EAChD8D,EAAiB1D,EAAKqB,MAAMnL,IAAI0J,EAAIpI,EAASoI,EAInD,OAAS4D,GAAYxD,EAAKqB,MAAMpL,MAAM0J,GAAKnI,EAASmI,GAAKK,EAAKqB,MAAMnL,IAAIyJ,GAAKnI,EAASmI,GACnF8D,GAAmBzD,EAAKqB,MAAMnL,IAAIyJ,GAAKnI,EAASmI,GAChD+D,GAAkB1D,EAAKqB,MAAMpL,MAAM0J,GAAKnI,EAASmI,GACjD8D,GAAmBC,IACpB1D,EAAKqB,MAAMpL,MAAM2J,GAAKpI,EAASoI,GAC/BI,EAAKqB,MAAMnL,IAAI0J,GAAKpI,EAASoI,CACjC,CAMQL,wBAAwBtB,EAAmBvI,EAAsBqJ,GACvE,MAAM4E,EAAS5E,EAAa6E,UAAU3F,EAAOvI,EAAS1B,KAAKyJ,eAAe8D,KAAMvN,KAAKyJ,eAAe/I,MACpG,GAAKiP,EAIL,MAAO,CAAEhE,EAAGgE,EAAO,GAAI/D,EAAG+D,EAAO,GAAK3P,KAAKyJ,eAAe5F,OAAO+B,MACnE,CAEQwJ,0BAA0BS,EAAYC,EAAYC,EAAYC,EAAYvH,GAChF,MAAO,CAAEoH,KAAIC,KAAIC,KAAIC,KAAIzC,KAAMvN,KAAKyJ,eAAe8D,KAAM9E,KAC3D,GAjYWe,EAAU,GAqBlB,MAAAyG,iBArBQzG,GAAA,EAAAA,WAAAA,C,qGCLF,EAAA0G,YAAc,iBAGd,EAAAhL,cAAgB,gE,sgBCL3B,eACA,UAEA,IAAaiL,EAAb,MACE1Q,YACmCgK,EACC2G,EACAC,GAFD,KAAA5G,eAAAA,EACC,KAAA2G,gBAAAA,EACA,KAAAC,gBAAAA,CAEpC,CAEO3D,aAAad,EAAW0E,G,MAC7B,MAAMC,EAAOvQ,KAAKyJ,eAAe5F,OAAOC,MAAM8E,IAAIgD,EAAI,GACtD,IAAK2E,EAEH,YADAD,OAAShG,GAIX,MAAMkG,EAAkB,GAClBC,EAAczQ,KAAKoQ,gBAAgBM,WAAWD,YAC9CvK,EAAO,IAAI,EAAAyK,SACXC,EAAaL,EAAKM,mBACxB,IAAIC,GAAiB,EACjBC,GAAgB,EAChBC,GAAa,EACjB,IAAK,IAAIrF,EAAI,EAAGA,EAAIiF,EAAYjF,IAG9B,IAAsB,IAAlBoF,GAAwBR,EAAKU,WAAWtF,GAA5C,CAKA,GADA4E,EAAKW,SAASvF,EAAGzF,GACbA,EAAKiL,oBAAsBjL,EAAKkL,SAASC,MAAO,CAClD,IAAsB,IAAlBN,EAAqB,CACvBA,EAAepF,EACfmF,EAAgB5K,EAAKkL,SAASC,MAC9B,Q,CAEAL,EAAa9K,EAAKkL,SAASC,QAAUP,C,MAGjB,IAAlBC,IACFC,GAAa,GAIjB,GAAIA,IAAiC,IAAlBD,GAAuBpF,IAAMiF,EAAa,EAAI,CAC/D,MAAMtK,EAAsD,QAA/C,EAAAtG,KAAKqQ,gBAAgBiB,YAAYR,UAAc,eAAES,IAC9D,GAAIjL,EAAM,CAER,MAAM+G,EAAsB,CAC1BpL,MAAO,CACL0J,EAAGoF,EAAe,EAClBnF,KAEF1J,IAAK,CAEHyJ,EAAGA,GAAMqF,GAAcrF,IAAMiF,EAAa,EAAQ,EAAJ,GAC9ChF,MAIJ4E,EAAOhM,KAAK,CACV8B,OACA+G,QACAW,SAAU,CAAClN,EAAGwF,IAAUmK,EAAcA,EAAYzC,SAASlN,EAAGwF,EAAM+G,GAASmE,EAAgB1Q,EAAGwF,GAChG2I,MAAO,CAACnO,EAAGwF,KAAQ,MAAC,OAAkB,QAAlB,EAAAmK,aAAW,EAAXA,EAAaxB,aAAK,sBAAGnO,EAAGwF,EAAM+G,EAAM,EACxDkC,MAAO,CAACzO,EAAGwF,KAAQ,MAAC,OAAkB,QAAlB,EAAAmK,aAAW,EAAXA,EAAalB,aAAK,sBAAGzO,EAAGwF,EAAM+G,EAAM,G,CAG5D2D,GAAa,EAGT9K,EAAKiL,oBAAsBjL,EAAKkL,SAASC,OAC3CN,EAAepF,EACfmF,EAAgB5K,EAAKkL,SAASC,QAE9BN,GAAgB,EAChBD,GAAiB,E,EAMvBR,EAASE,EACX,GAGF,SAASgB,EAAgB1Q,EAAeyQ,GAEtC,GADeE,QAAQ,8BAA8BF,MACzC,CACV,MAAMG,EAAYvO,OAAOwO,OACzB,GAAID,EAAW,CACb,IACEA,EAAUE,OAAS,I,CACnB,S,CAGFF,EAAUG,SAASC,KAAOP,C,MAE1BQ,QAAQC,KAAK,sD,CAGnB,CArGa7B,EAAe,GAEvB,MAAAF,gBACA,MAAAgC,iBACA,MAAAC,kBAJQ/B,GAAA,EAAAA,gBAAAA,C,yFCCb,wBAOE1Q,YACU0S,EACAC,GADA,KAAAD,cAAAA,EACA,KAAAC,gBAAAA,EAJF,KAAAC,kBAA4C,EAMpD,CAEO9I,UACDvJ,KAAKsS,kBACPtS,KAAKmS,cAAcI,qBAAqBvS,KAAKsS,iBAC7CtS,KAAKsS,qBAAkBhI,EAE3B,CAEOkI,mBAAmBlC,GAKxB,OAJAtQ,KAAKqS,kBAAkB7N,KAAK8L,GACvBtQ,KAAKsS,kBACRtS,KAAKsS,gBAAkBtS,KAAKmS,cAAcM,uBAAsB,IAAMzS,KAAK0S,mBAEtE1S,KAAKsS,eACd,CAEO/M,QAAQoN,EAA8BC,EAA4BC,GACvE7S,KAAK8S,UAAYD,EAEjBF,OAAwBrI,IAAbqI,EAAyBA,EAAW,EAC/CC,OAAoBtI,IAAXsI,EAAuBA,EAAS5S,KAAK8S,UAAY,EAE1D9S,KAAK+S,eAA+BzI,IAAnBtK,KAAK+S,UAA0BC,KAAKC,IAAIjT,KAAK+S,UAAWJ,GAAYA,EACrF3S,KAAKkT,aAA2B5I,IAAjBtK,KAAKkT,QAAwBF,KAAKG,IAAInT,KAAKkT,QAASN,GAAUA,EAEzE5S,KAAKsS,kBAITtS,KAAKsS,gBAAkBtS,KAAKmS,cAAcM,uBAAsB,IAAMzS,KAAK0S,kBAC7E,CAEQA,gBAIN,GAHA1S,KAAKsS,qBAAkBhI,OAGAA,IAAnBtK,KAAK+S,gBAA4CzI,IAAjBtK,KAAKkT,cAA4C5I,IAAnBtK,KAAK8S,UAErE,YADA9S,KAAKoT,uBAKP,MAAMnR,EAAQ+Q,KAAKG,IAAInT,KAAK+S,UAAW,GACjC7Q,EAAM8Q,KAAKC,IAAIjT,KAAKkT,QAASlT,KAAK8S,UAAY,GAGpD9S,KAAK+S,eAAYzI,EACjBtK,KAAKkT,aAAU5I,EAGftK,KAAKoS,gBAAgBnQ,EAAOC,GAC5BlC,KAAKoT,sBACP,CAEQA,uBACN,IAAK,MAAM9C,KAAYtQ,KAAKqS,kBAC1B/B,EAAS,GAEXtQ,KAAKqS,kBAAoB,EAC3B,E,4FC5EF,eAcA,MAAanP,UAAyB,EAAA1D,WAMpCC,YAAoB0S,GAClBvS,QADkB,KAAAuS,cAAAA,EAElBnS,KAAKqT,yBAA2BrT,KAAKmS,cAAcmB,iBACnDtT,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKuT,eAAe,IAExB,CAEOnQ,YAAYoQ,GACbxT,KAAKyT,WACPzT,KAAKuT,gBAEPvT,KAAKyT,UAAYD,EACjBxT,KAAK0T,eAAiB,KACf1T,KAAKyT,YAGVzT,KAAKyT,UAAUzT,KAAKmS,cAAcmB,iBAAkBtT,KAAKqT,0BACzDrT,KAAK2T,aAAY,EAEnB3T,KAAK2T,YACP,CAEQA,a,MACD3T,KAAK0T,iBAKoB,QAA9B,EAAA1T,KAAK4T,iCAAyB,SAAEC,eAAe7T,KAAK0T,gBAGpD1T,KAAKqT,yBAA2BrT,KAAKmS,cAAcmB,iBACnDtT,KAAK4T,0BAA4B5T,KAAKmS,cAAc2B,WAAW,2BAA2B9T,KAAKmS,cAAcmB,yBAC7GtT,KAAK4T,0BAA0BG,YAAY/T,KAAK0T,gBAClD,CAEOH,gBACAvT,KAAK4T,2BAA8B5T,KAAKyT,WAAczT,KAAK0T,iBAGhE1T,KAAK4T,0BAA0BC,eAAe7T,KAAK0T,gBACnD1T,KAAK4T,+BAA4BtJ,EACjCtK,KAAKyT,eAAYnJ,EACjBtK,KAAK0T,oBAAiBpJ,EACxB,EAnDF,oB,oFCMA,gBACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,SAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAGMpK,EAAwC,oBAAXiD,OAA0BA,OAAOjD,SAAW,KAE/E,MAAa8T,UAAiB,EAAAC,aAiG5BxU,YACE4J,EAAqC,CAAC,GAEtCzJ,MAAMyJ,GArFD,KAAA6K,QAAoBC,EAmBnB,KAAAC,iBAA2B,EAM3B,KAAAC,cAAwB,EAOxB,KAAAC,kBAA4B,EAO5B,KAAAC,qBAA+B,EAOtB,KAAAC,cAAgBxU,KAAK6B,SAAS,IAAI,EAAAkI,cACnC,KAAA0K,aAAezU,KAAKwU,cAAcvK,MACjC,KAAAyK,OAAS1U,KAAK6B,SAAS,IAAI,EAAAkI,cAC5B,KAAApH,MAAQ3C,KAAK0U,OAAOzK,MACnB,KAAA0K,UAAY3U,KAAK6B,SAAS,IAAI,EAAAkI,cAC/B,KAAA/H,SAAWhC,KAAK2U,UAAU1K,MACzB,KAAA2K,mBAAqB5U,KAAK6B,SAAS,IAAI,EAAAkI,cACxC,KAAA8K,kBAAoB7U,KAAK4U,mBAAmB3K,MAC3C,KAAA6K,eAAiB9U,KAAK6B,SAAS,IAAI,EAAAkI,cACpC,KAAAgL,cAAgB/U,KAAK8U,eAAe7K,MACnC,KAAA+K,QAAUhV,KAAK6B,SAAS,IAAI,EAAAkI,cAC7B,KAAAkL,OAASjV,KAAKgV,QAAQ/K,MAE9B,KAAAiL,SAAWlV,KAAK6B,SAAS,IAAI,EAAAkI,cAE7B,KAAAoL,QAAUnV,KAAK6B,SAAS,IAAI,EAAAkI,cAE5B,KAAAqL,mBAAqBpV,KAAK6B,SAAS,IAAI,EAAAkI,cAEvC,KAAAsL,kBAAoBrV,KAAK6B,SAAS,IAAI,EAAAkI,cAEtC,KAAAuL,YAActV,KAAK6B,SAAS,IAAI,EAAAkI,cAoBtC/J,KAAKuV,SAELvV,KAAKwV,WAAaxV,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAlM,aAC1ExJ,KAAKwV,WAAW/K,qBAAqBzK,KAAKyV,sBAAsBC,eAAe,EAAAvF,kBAC/EnQ,KAAK2V,mBAAqB3V,KAAKyV,sBAAsBC,eAAe,EAAAE,mBACpE5V,KAAKyV,sBAAsBI,WAAW,EAAAC,mBAAoB9V,KAAK2V,oBAG/D3V,KAAK6B,SAAS7B,KAAK+V,cAAcC,eAAc,IAAMhW,KAAKgV,QAAQ3F,UAClErP,KAAK6B,SAAS7B,KAAK+V,cAAcE,sBAAqB,CAAChU,EAAOC,IAAQlC,KAAKuF,QAAQtD,EAAOC,MAC1FlC,KAAK6B,SAAS7B,KAAK+V,cAAcG,oBAAmB,IAAMlW,KAAKmW,kBAC/DnW,KAAK6B,SAAS7B,KAAK+V,cAAcK,gBAAe,IAAMpW,KAAKqW,WAC3DrW,KAAK6B,SAAS7B,KAAK+V,cAAcO,+BAA8BnN,GAAQnJ,KAAKuW,sBAAsBpN,MAClGnJ,KAAK6B,SAAS7B,KAAK+V,cAAcS,SAASvM,GAAUjK,KAAKyW,kBAAkBxM,MAC3EjK,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK+V,cAActB,aAAczU,KAAKwU,gBACjExU,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK+V,cAAchB,cAAe/U,KAAK8U,iBAClE9U,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK+V,cAAc3T,WAAYpC,KAAKoV,qBAC/DpV,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK+V,cAAcvT,UAAWxC,KAAKqV,oBAG9DrV,KAAK6B,SAAS7B,KAAKyJ,eAAe3H,UAAShB,GAAKd,KAAK2W,aAAa7V,EAAEyM,KAAMzM,EAAEJ,SAE5EV,KAAK6B,UAAS,IAAAyB,eAAa,K,QACzBtD,KAAK4W,4BAAyBtM,EACN,QAAxB,EAAY,QAAZ,EAAAtK,KAAK0B,eAAO,eAAE0D,kBAAU,SAAEjB,YAAYnE,KAAK0B,QAAQ,IAEvD,CArDWmV,cAA0B,OAAO7W,KAAKkV,SAASjL,KAAO,CAEtDnH,aAAyB,OAAO9C,KAAKmV,QAAQlL,KAAO,CAEpD7H,iBAA+B,OAAOpC,KAAKoV,mBAAmBnL,KAAO,CAErEzH,gBAA8B,OAAOxC,KAAKqV,kBAAkBpL,KAAO,CAEnE6M,iBAAoC,OAAO9W,KAAKsV,YAAYrL,KAAO,CAqDtEwM,kBAAkBxM,GACxB,GAAKjK,KAAK+W,cACV,IAAK,MAAMC,KAAO/M,EAAO,CACvB,IAAIgN,EACAC,EAAQ,GACZ,OAAQF,EAAIvJ,OACV,KAAK,IACHwJ,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,SACNC,EAAQ,KACR,MACF,QAEED,EAAM,OACNC,EAAQ,KAAOF,EAAIvJ,MAEvB,OAAQuJ,EAAI7N,MACV,KAAK,EACH,MAAMgO,EAAW,EAAAC,MAAMC,WAAmB,SAARJ,EAC9BjX,KAAK+W,cAAcO,OAAOC,KAAKP,EAAIvJ,OACnCzN,KAAK+W,cAAcO,OAAOL,IAC9BjX,KAAK4G,YAAYE,iBAAiB,GAAG,EAAA0Q,GAAGC,OAAOP,MAAS,IAAAQ,aAAYP,KAAY,EAAAQ,WAAWC,MAC3F,MACF,KAAK,EACH,GAAY,SAARX,EACFjX,KAAK+W,cAAcc,cAAaP,GAAUA,EAAOC,KAAKP,EAAIvJ,OAAS,EAAAqK,KAAKC,WAAWf,EAAII,aAClF,CACL,MAAMY,EAAcf,EACpBjX,KAAK+W,cAAcc,cAAaP,GAAUA,EAAOU,GAAe,EAAAF,KAAKC,WAAWf,EAAII,Q,CAEtF,MACF,KAAK,EACHpX,KAAK+W,cAAckB,aAAajB,EAAIvJ,O,CAI5C,CAEU8H,SACR3V,MAAM2V,SAENvV,KAAK4W,4BAAyBtM,CAChC,CAKWzG,aACT,OAAO7D,KAAKkY,QAAQC,MACtB,CAKOzT,QACD1E,KAAK2G,UACP3G,KAAK2G,SAASjC,MAAM,CAAE0T,eAAe,GAEzC,CAEQC,oCAAoCtR,G,MACtCA,GACG/G,KAAKsY,uBAAyBtY,KAAKL,iBACtCK,KAAKsY,sBAAwB,IAAI,EAAA/Y,qBAAqBS,KAAMA,KAAKL,kBAGzC,QAA1B,EAAAK,KAAKsY,6BAAqB,SAAE/O,UAC5BvJ,KAAKsY,2BAAwBhO,EAEjC,CAKQiO,qBAAqBtR,GACvBjH,KAAK4G,YAAYC,gBAAgB2R,WACnCxY,KAAK4G,YAAYE,iBAAiB,EAAA0Q,GAAGC,IAAM,MAE7CzX,KAAKyY,kBAAkBxR,GACvBjH,KAAK0B,QAAStB,UAAUC,IAAI,SAC5BL,KAAK0Y,cACL1Y,KAAKkV,SAAS7F,MAChB,CAMOsJ,O,MACL,OAAoB,QAAb,EAAA3Y,KAAK2G,gBAAQ,eAAEgS,MACxB,CAKQC,sBAGN5Y,KAAK2G,SAAUI,MAAQ,GACvB/G,KAAKuF,QAAQvF,KAAK6D,OAAO+H,EAAG5L,KAAK6D,OAAO+H,GACpC5L,KAAK4G,YAAYC,gBAAgB2R,WACnCxY,KAAK4G,YAAYE,iBAAiB,EAAA0Q,GAAGC,IAAM,MAE7CzX,KAAK0B,QAAStB,UAAUkP,OAAO,SAC/BtP,KAAKmV,QAAQ9F,MACf,CAEQwJ,gBACN,IAAK7Y,KAAK2G,WAAa3G,KAAK6D,OAAOiV,oBAAsB9Y,KAAK+Y,mBAAoBC,cAAgBhZ,KAAKL,eACrG,OAEF,MAAMsZ,EAAUjZ,KAAK6D,OAAOqV,MAAQlZ,KAAK6D,OAAO+H,EAC1CuN,EAAanZ,KAAK6D,OAAOC,MAAM8E,IAAIqQ,GACzC,IAAKE,EACH,OAEF,MAAMC,EAAUpG,KAAKC,IAAIjT,KAAK6D,OAAO8H,EAAG3L,KAAKuN,KAAO,GAC9C8L,EAAarZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OACrDsB,EAAQ0R,EAAWG,SAASF,GAC5BG,EAAYvZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAAQA,EAC5D+R,EAAYxZ,KAAK6D,OAAO+H,EAAI5L,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OACpEsT,EAAaL,EAAUpZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAIrEzH,KAAK2G,SAASP,MAAMiB,KAAOoS,EAAa,KACxCzZ,KAAK2G,SAASP,MAAMmB,IAAMiS,EAAY,KACtCxZ,KAAK2G,SAASP,MAAMqB,MAAQ8R,EAAY,KACxCvZ,KAAK2G,SAASP,MAAMD,OAASkT,EAAa,KAC1CrZ,KAAK2G,SAASP,MAAMsT,WAAaL,EAAa,KAC9CrZ,KAAK2G,SAASP,MAAMsB,OAAS,IAC/B,CAKQiS,cACN3Z,KAAK4Z,YAGL5Z,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAU,QAASuI,IAGxDjK,KAAK6Z,iBAGV,IAAAC,aAAY7P,EAAOjK,KAAK+Z,kBAAmB,KAE7C,MAAMC,EAAuB/P,IAAgC,IAAAgQ,kBAAiBhQ,EAAOjK,KAAK2G,SAAW3G,KAAK4G,aAC1G5G,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,QAASqT,IAChEha,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAU,QAASsY,IAG3D7F,EAAQ+F,UAEVla,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAU,aAAcuI,IAC7C,IAAjBA,EAAMkQ,SACR,IAAAC,mBAAkBnQ,EAAOjK,KAAK2G,SAAW3G,KAAKkH,cAAgBlH,KAAK+Z,kBAAoB/Z,KAAKqJ,QAAQgR,sB,KAIxGra,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAU,eAAgBuI,KACpE,IAAAmQ,mBAAkBnQ,EAAOjK,KAAK2G,SAAW3G,KAAKkH,cAAgBlH,KAAK+Z,kBAAoB/Z,KAAKqJ,QAAQgR,sBAAsB,KAO1HlG,EAAQmG,SAGVta,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAU,YAAauI,IAC5C,IAAjBA,EAAMkQ,SACR,IAAAnT,8BAA6BiD,EAAOjK,KAAK2G,SAAW3G,KAAKkH,c,IAIjE,CAKQ0S,YACN5Z,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,SAAUM,GAAsBjH,KAAKua,OAAOtT,KAAK,IACxGjH,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,WAAYM,GAAsBjH,KAAKwa,SAASvT,KAAK,IAC5GjH,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,YAAaM,GAAsBjH,KAAKya,UAAUxT,KAAK,IAC9GjH,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,oBAAoB,IAAM3G,KAAK+Y,mBAAoB2B,sBAC1G1a,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,qBAAsB7F,GAAwBd,KAAK+Y,mBAAoB4B,kBAAkB7Z,MAChJd,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,kBAAkB,IAAM3G,KAAK+Y,mBAAoB6B,oBACxG5a,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAW,SAAUM,GAAmBjH,KAAK6a,YAAY5T,KAAK,IAC1GjH,KAAK6B,SAAS7B,KAAKgC,UAAS,IAAMhC,KAAK+Y,mBAAoB+B,8BAC7D,CAOOnJ,KAAKoJ,G,MACV,IAAKA,EACH,MAAM,IAAIpZ,MAAM,uCAGboZ,EAAOC,aACVhb,KAAKib,YAAYC,MAAM,2EAGzBlb,KAAKmb,UAAYJ,EAAOK,cAGxBpb,KAAK0B,QAAU1B,KAAKmb,UAAUhb,cAAc,OAC5CH,KAAK0B,QAAQ2Z,IAAM,MACnBrb,KAAK0B,QAAQtB,UAAUC,IAAI,YAC3BL,KAAK0B,QAAQtB,UAAUC,IAAI,SAC3BL,KAAK0B,QAAQlB,aAAa,WAAY,KACtCua,EAAOna,YAAYZ,KAAK0B,SAIxB,MAAM4Z,EAAWpb,EAASqb,yBAC1Bvb,KAAKwb,iBAAmBtb,EAASC,cAAc,OAC/CH,KAAKwb,iBAAiBpb,UAAUC,IAAI,kBACpCib,EAAS1a,YAAYZ,KAAKwb,kBAE1Bxb,KAAKyb,oBAAsBvb,EAASC,cAAc,OAClDH,KAAKyb,oBAAoBrb,UAAUC,IAAI,qBACvCL,KAAKwb,iBAAiB5a,YAAYZ,KAAKyb,qBAEvCzb,KAAKkH,cAAgBhH,EAASC,cAAc,OAC5CH,KAAKkH,cAAc9G,UAAUC,IAAI,gBAGjCL,KAAK0b,iBAAmBxb,EAASC,cAAc,OAC/CH,KAAK0b,iBAAiBtb,UAAUC,IAAI,iBACpCL,KAAKkH,cAActG,YAAYZ,KAAK0b,kBACpCJ,EAAS1a,YAAYZ,KAAKkH,eAE1BlH,KAAK2G,SAAWzG,EAASC,cAAc,YACvCH,KAAK2G,SAASvG,UAAUC,IAAI,yBAC5BL,KAAK2G,SAASnG,aAAa,aAAcyE,EAAQiL,aACjDlQ,KAAK2G,SAASnG,aAAa,iBAAkB,SAC7CR,KAAK2G,SAASnG,aAAa,cAAe,OAC1CR,KAAK2G,SAASnG,aAAa,iBAAkB,OAC7CR,KAAK2G,SAASnG,aAAa,aAAc,SACzCR,KAAK2G,SAASrG,SAAW,EACzBN,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAU,SAAUM,GAAsBjH,KAAKuY,qBAAqBtR,MAChHjH,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK2G,SAAU,QAAQ,IAAM3G,KAAK4Y,yBACzE5Y,KAAK0b,iBAAiB9a,YAAYZ,KAAK2G,UAEvC3G,KAAK2b,oBAAsB3b,KAAKyV,sBAAsBC,eAAe,EAAAkG,mBAAoB5b,KAAK2G,SAAoC,QAA1B,EAAA3G,KAAKmb,UAAUU,mBAAW,QAAI1Y,QACtInD,KAAKyV,sBAAsBI,WAAW,EAAAiG,oBAAqB9b,KAAK2b,qBAEhE3b,KAAK+b,iBAAmB/b,KAAKyV,sBAAsBC,eAAe,EAAAsG,gBAAiBhc,KAAKmb,UAAWnb,KAAK0b,kBACxG1b,KAAKyV,sBAAsBI,WAAW,EAAAoG,iBAAkBjc,KAAK+b,kBAE7D/b,KAAK+W,cAAgB/W,KAAKyV,sBAAsBC,eAAe,EAAAwG,cAC/Dlc,KAAKyV,sBAAsBI,WAAW,EAAAsG,cAAenc,KAAK+W,eAE1D/W,KAAKoc,wBAA0Bpc,KAAKyV,sBAAsBC,eAAe,EAAA2G,wBACzErc,KAAKyV,sBAAsBI,WAAW,EAAAyG,wBAAyBtc,KAAKoc,yBAEpEpc,KAAKL,eAAiBK,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAA6G,cAAevc,KAAKU,KAAMV,KAAKkH,gBAC7GlH,KAAKyV,sBAAsBI,WAAW,EAAA2G,eAAgBxc,KAAKL,gBAC3DK,KAAK6B,SAAS7B,KAAKL,eAAeqP,0BAAyBlO,GAAKd,KAAK2U,UAAUtF,KAAKvO,MACpFd,KAAK8B,UAAShB,GAAKd,KAAKL,eAAgB8c,OAAO3b,EAAEyM,KAAMzM,EAAEJ,QAEzDV,KAAK0c,iBAAmBxc,EAASC,cAAc,OAC/CH,KAAK0c,iBAAiBtc,UAAUC,IAAI,oBACpCL,KAAK+Y,mBAAqB/Y,KAAKyV,sBAAsBC,eAAe,EAAAiH,kBAAmB3c,KAAK2G,SAAU3G,KAAK0c,kBAC3G1c,KAAK0b,iBAAiB9a,YAAYZ,KAAK0c,kBAGvC1c,KAAK0B,QAAQd,YAAY0a,GAEzB,IACEtb,KAAKsV,YAAYjG,KAAKrP,KAAK0B,QAErB,CAAR,SAAQ,CACH1B,KAAKL,eAAeid,eACvB5c,KAAKL,eAAekd,YAAY7c,KAAK8c,mBAGvC9c,KAAKkL,cAAgBlL,KAAKyV,sBAAsBC,eAAe,EAAAqH,cAC/D/c,KAAKyV,sBAAsBI,WAAW,EAAAmH,cAAehd,KAAKkL,eAE1DlL,KAAKid,SAAWjd,KAAKyV,sBAAsBC,eAAe,EAAAwH,UACvDC,GAAmBnd,KAAKyE,YAAY0Y,GAAQ,EAAM,IACnDnd,KAAKwb,iBACLxb,KAAKyb,qBAEPzb,KAAK6B,SAAS7B,KAAK+V,cAAcqH,wBAAuB,IAAMpd,KAAKid,SAAUI,oBAC7Erd,KAAK6B,SAAS7B,KAAKid,UAEnBjd,KAAK6B,SAAS7B,KAAKyU,cAAa,KAC9BzU,KAAKL,eAAgB2d,mBACrBtd,KAAK6Y,eAAe,KAEtB7Y,KAAK6B,SAAS7B,KAAK8B,UAAS,IAAM9B,KAAKL,eAAgB4d,aAAavd,KAAKuN,KAAMvN,KAAKU,SACpFV,KAAK6B,SAAS7B,KAAK8C,QAAO,IAAM9C,KAAKL,eAAgB6d,gBACrDxd,KAAK6B,SAAS7B,KAAK6W,SAAQ,IAAM7W,KAAKL,eAAgB8d,iBACtDzd,KAAK6B,SAAS7B,KAAKL,eAAeqD,oBAAmB,IAAMhD,KAAKid,SAAUI,oBAE1Erd,KAAK+Z,kBAAoB/Z,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAgI,iBAC/E1d,KAAK0B,QACL1B,KAAKkH,cACLlH,KAAKwV,aAEPxV,KAAKyV,sBAAsBI,WAAW,EAAA8H,kBAAmB3d,KAAK+Z,mBAC9D/Z,KAAK6B,SAAS7B,KAAK+Z,kBAAkB6D,sBAAqB9c,GAAKd,KAAKyE,YAAY3D,EAAEqc,OAAQrc,EAAE+c,wBAC5F7d,KAAK6B,SAAS7B,KAAK+Z,kBAAkBlF,mBAAkB,IAAM7U,KAAK4U,mBAAmBvF,UACrFrP,KAAK6B,SAAS7B,KAAK+Z,kBAAkB+D,iBAAgBhd,GAAKd,KAAKL,eAAgBoe,uBAAuBjd,EAAEmB,MAAOnB,EAAEoB,IAAKpB,EAAEkd,qBACxHhe,KAAK6B,SAAS7B,KAAK+Z,kBAAkBkE,uBAAsB3X,IAIzDtG,KAAK2G,SAAUI,MAAQT,EACvBtG,KAAK2G,SAAUjC,QACf1E,KAAK2G,SAAUwB,QAAQ,KAEzBnI,KAAK6B,SAAS7B,KAAKke,UAAUjU,OAAMhD,IACjCjH,KAAKid,SAAUI,iBACfrd,KAAK+Z,kBAAmBxU,SAAS,KAEnCvF,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKwb,iBAAkB,UAAU,IAAMxb,KAAK+Z,kBAAmBxU,aAEtGvF,KAAKwV,WAAW1K,YAAY9K,KAAKkH,cAAelH,KAAKkL,cAAelL,KAAKL,gBACzEK,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAyI,yBAA0Bne,KAAKkH,gBACvFlH,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAK0B,QAAS,aAAcZ,GAAkBd,KAAK+Z,kBAAmBqE,gBAAgBtd,MAGzHd,KAAKqe,iBAAiBC,sBACxBte,KAAK+Z,kBAAkBwE,UACvBve,KAAK0B,QAAQtB,UAAUC,IAAI,wBAE3BL,KAAK+Z,kBAAkByE,SAGrBxe,KAAKqJ,QAAQoV,mBAGfze,KAAKsY,sBAAwB,IAAI,EAAA/Y,qBAAqBS,KAAMA,KAAKL,iBAEnEK,KAAK6B,SAAS7B,KAAK0e,eAAeC,uBAAuB,oBAAoB7d,GAAKd,KAAKqY,oCAAoCvX,MAEvHd,KAAKqJ,QAAQuV,qBACf5e,KAAK6e,uBAAyB7e,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAoJ,sBAAuB9e,KAAKwb,iBAAkBxb,KAAKkH,iBAE3IlH,KAAK0e,eAAeC,uBAAuB,sBAAsB5X,KAC1D/G,KAAK6e,wBAA0B9X,GAAS/G,KAAKwb,kBAAoBxb,KAAKkH,gBACzElH,KAAK6e,uBAAyB7e,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAoJ,sBAAuB9e,KAAKwb,iBAAkBxb,KAAKkH,gB,IAI7IlH,KAAK+b,iBAAiBgD,UAGtB/e,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,GAG5BV,KAAK2Z,cAIL3Z,KAAKgf,WACP,CAEQlC,kBACN,OAAO9c,KAAKyV,sBAAsBC,eAAe,EAAAuJ,YAAajf,KAAK0B,QAAU1B,KAAKkH,cAAgBlH,KAAKwb,iBAAmBxb,KAAKwV,WACjI,CAiBOwJ,YACL,MAAM1f,EAAOU,KACPkf,EAAKlf,KAAK0B,QAGhB,SAASyd,EAAUlY,GAEjB,MAAME,EAAM7H,EAAK4L,cAAekU,qBAAqBnY,EAAI3H,EAAK4H,eAC9D,IAAKC,EACH,OAAO,EAGT,IAAIkY,EACAC,EACJ,OAASrY,EAAWsY,cAAgBtY,EAAGkC,MACrC,IAAK,YACHmW,EAAS,QACUhV,IAAfrD,EAAGuY,SAELH,EAAM,OACY/U,IAAdrD,EAAGkT,SACLkF,EAAMpY,EAAGkT,OAAS,EAAIlT,EAAGkT,OAAS,IAIpCkF,EAAmB,EAAbpY,EAAGuY,QAAc,EACR,EAAbvY,EAAGuY,QAAc,EACF,EAAbvY,EAAGuY,QAAc,E,EAGvB,MACF,IAAK,UACHF,EAAS,EACTD,EAAMpY,EAAGkT,OAAS,EAAIlT,EAAGkT,OAAS,EAClC,MACF,IAAK,YACHmF,EAAS,EACTD,EAAMpY,EAAGkT,OAAS,EAAIlT,EAAGkT,OAAS,EAClC,MACF,IAAK,QAGH,GAAe,IAFA7a,EAAK2d,SAAUwC,iBAAiBxY,GAG7C,OAAO,EAGTqY,EAAUrY,EAAkByY,OAAS,EAAI,EAAqB,EAC9DL,EAAM,EACN,MACF,QAEE,OAAO,EAKX,aAAe/U,IAAXgV,QAAgChV,IAAR+U,GAAqBA,EAAM,IAIhD/f,EAAK+e,iBAAiBsB,kBAAkB,CAC7CC,IAAKzY,EAAIyY,IACTC,IAAK1Y,EAAI0Y,IACTlU,EAAGxE,EAAIwE,EACPC,EAAGzE,EAAIyE,EACPuO,OAAQkF,EACRC,SACAQ,KAAM7Y,EAAG8Y,QACTC,IAAK/Y,EAAGgZ,OACR7b,MAAO6C,EAAGiZ,UAEd,CAUA,MAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EAAiE,CACrEJ,QAAUnZ,IACRkY,EAAUlY,GACLA,EAAGuY,UAENxf,KAAKmb,UAAW9W,oBAAoB,UAAW8b,EAAgBC,SAC3DD,EAAgBG,WAClBtgB,KAAKmb,UAAW9W,oBAAoB,YAAa8b,EAAgBG,YAG9DtgB,KAAKygB,OAAOxZ,IAErBoZ,MAAQpZ,IACNkY,EAAUlY,GACHjH,KAAKygB,OAAOxZ,GAAI,IAEzBqZ,UAAYrZ,IAENA,EAAGuY,SACLL,EAAUlY,E,EAGdsZ,UAAYtZ,IAELA,EAAGuY,SACNL,EAAUlY,E,GAIhBjH,KAAK6B,SAAS7B,KAAKqe,iBAAiBqC,kBAAiBC,IAE/CA,GAC8C,UAA5C3gB,KAAK0e,eAAehO,WAAWkQ,UACjC5gB,KAAKib,YAAYC,MAAM,2BAA4Blb,KAAKqe,iBAAiBwC,cAAcF,IAEzF3gB,KAAK0B,QAAStB,UAAUC,IAAI,uBAC5BL,KAAK+Z,kBAAmBwE,YAExBve,KAAKib,YAAYC,MAAM,gCACvBlb,KAAK0B,QAAStB,UAAUkP,OAAO,uBAC/BtP,KAAK+Z,kBAAmByE,UAKX,EAATmC,EAGMR,EAAgBI,YAC1BrB,EAAGje,iBAAiB,YAAauf,EAAeD,WAChDJ,EAAgBI,UAAYC,EAAeD,YAJ3CrB,EAAG7a,oBAAoB,YAAa8b,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATI,EAGMR,EAAgBE,QAC1BnB,EAAGje,iBAAiB,QAASuf,EAAeH,MAAO,CAAES,SAAS,IAC9DX,EAAgBE,MAAQG,EAAeH,QAJvCnB,EAAG7a,oBAAoB,QAAS8b,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATM,EAGMR,EAAgBC,UAC1BD,EAAgBC,QAAUI,EAAeJ,UAHzCpgB,KAAKmb,UAAW9W,oBAAoB,UAAW8b,EAAgBC,SAC/DD,EAAgBC,QAAU,MAKb,EAATO,EAGMR,EAAgBG,YAC1BH,EAAgBG,UAAYE,EAAeF,YAH3CtgB,KAAKmb,UAAW9W,oBAAoB,YAAa8b,EAAgBG,WACjEH,EAAgBG,UAAY,K,KAMhCtgB,KAAKqe,iBAAiB0C,eAAiB/gB,KAAKqe,iBAAiB0C,eAK7D/gB,KAAK6B,UAAS,IAAAwB,0BAAyB6b,EAAI,aAAcjY,IAOvD,GANAA,EAAGtC,iBACH3E,KAAK0E,QAKA1E,KAAKqe,iBAAiBC,uBAAwBte,KAAK+Z,kBAAmBiH,qBAAqB/Z,GAiBhG,OAbAkY,EAAUlY,GAMNkZ,EAAgBC,SAClBpgB,KAAKmb,UAAWla,iBAAiB,UAAWkf,EAAgBC,SAE1DD,EAAgBG,WAClBtgB,KAAKmb,UAAWla,iBAAiB,YAAakf,EAAgBG,WAGzDtgB,KAAKygB,OAAOxZ,EAAG,KAGxBjH,KAAK6B,UAAS,IAAAwB,0BAAyB6b,EAAI,SAAUjY,IAEnD,IAAIkZ,EAAgBE,MAApB,CAEA,IAAKrgB,KAAK6D,OAAOod,cAAe,CAG9B,MAAM9D,EAASnd,KAAKid,SAAUwC,iBAAiBxY,GAG/C,GAAe,IAAXkW,EACF,OAIF,MAAM+D,EAAW,EAAA1J,GAAGC,KAAOzX,KAAK4G,YAAYC,gBAAgBsa,sBAAwB,IAAM,MAAQla,EAAGyY,OAAS,EAAI,IAAM,KACxH,IAAI0B,EAAO,GACX,IAAK,IAAI/hB,EAAI,EAAGA,EAAI2T,KAAKqO,IAAIlE,GAAS9d,IACpC+hB,GAAQF,EAGV,OADAlhB,KAAK4G,YAAYE,iBAAiBsa,GAAM,GACjCphB,KAAKygB,OAAOxZ,GAAI,E,CAKzB,OAAIjH,KAAKid,SAAUqE,YAAYra,GACtBjH,KAAKygB,OAAOxZ,QADrB,CAxBiC,C,GA2BhC,CAAE6Z,SAAS,KAEd9gB,KAAK6B,UAAS,IAAAwB,0BAAyB6b,EAAI,cAAejY,IACxD,IAAIjH,KAAKqe,iBAAiBC,qBAE1B,OADAte,KAAKid,SAAUsE,iBAAiBta,GACzBjH,KAAKygB,OAAOxZ,EAAG,GACrB,CAAE6Z,SAAS,KAEd9gB,KAAK6B,UAAS,IAAAwB,0BAAyB6b,EAAI,aAAcjY,IACvD,IAAIjH,KAAKqe,iBAAiBC,qBAC1B,OAAKte,KAAKid,SAAUuE,gBAAgBva,QAApC,EACSjH,KAAKygB,OAAOxZ,E,GAEpB,CAAE6Z,SAAS,IAChB,CASOvb,QAAQtD,EAAeC,G,MACT,QAAnB,EAAAlC,KAAKL,sBAAc,SAAE8hB,YAAYxf,EAAOC,EAC1C,CAKOuW,kBAAkBxR,G,OACG,QAAtB,EAAAjH,KAAK+Z,yBAAiB,eAAE2H,mBAAmBza,IAC7CjH,KAAK0B,QAAStB,UAAUC,IAAI,iBAE5BL,KAAK0B,QAAStB,UAAUkP,OAAO,gBAEnC,CAKQoJ,cACD1Y,KAAK4G,YAAY+a,sBACpB3hB,KAAK4G,YAAY+a,qBAAsB,EACvC3hB,KAAKuF,QAAQvF,KAAK6D,OAAO+H,EAAG5L,KAAK6D,OAAO+H,GAE5C,CAEOnH,YAAYmd,EAAc/D,EAA+BgE,EAAS,GACvEjiB,MAAM6E,YAAYmd,EAAM/D,EAAqBgE,GAC7C7hB,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,EAC9B,CAEOgG,MAAM0a,IACX,IAAA1a,OAAM0a,EAAMphB,KAAK2G,SAAW3G,KAAK4G,YACnC,CAWOkb,4BAA4BC,GACjC/hB,KAAK4W,uBAAyBmL,CAChC,CAEOtX,qBAAqBC,GAC1B,OAAO1K,KAAKwV,WAAW/K,qBAAqBC,EAC9C,CAEOsX,wBAAwB5Y,GAC7B,IAAKpJ,KAAKoc,wBACR,MAAM,IAAIza,MAAM,iCAElB,MAAMsgB,EAAWjiB,KAAKoc,wBAAwBva,SAASuH,GAEvD,OADApJ,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,GACrBuhB,CACT,CAEOC,0BAA0BD,GAC/B,IAAKjiB,KAAKoc,wBACR,MAAM,IAAIza,MAAM,iCAEd3B,KAAKoc,wBAAwB+F,WAAWF,IAC1CjiB,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,EAEhC,CAEW0hB,cACT,OAAOpiB,KAAK6D,OAAOue,OACrB,CAEOC,UAAUC,GACf,OAAOtiB,KAAK6D,OAAOwe,UAAUriB,KAAK6D,OAAOqV,MAAQlZ,KAAK6D,OAAO+H,EAAI0W,EACnE,CAEOC,mBAAmBC,GACxB,OAAOxiB,KAAK2V,mBAAmB4M,mBAAmBC,EACpD,CAKO3I,eACL,QAAO7Z,KAAK+Z,mBAAoB/Z,KAAK+Z,kBAAkBF,YACzD,CAQO1R,OAAOsa,EAAgB5C,EAAa3e,GACzClB,KAAK+Z,kBAAmB2I,aAAaD,EAAQ5C,EAAK3e,EACpD,CAMOyhB,eACL,OAAO3iB,KAAK+Z,kBAAoB/Z,KAAK+Z,kBAAkBjS,cAAgB,EACzE,CAEO8a,uBACL,GAAK5iB,KAAK+Z,mBAAsB/Z,KAAK+Z,kBAAkBF,aAIvD,MAAO,CACL5X,MAAO,CACL0J,EAAG3L,KAAK+Z,kBAAkB8I,eAAgB,GAC1CjX,EAAG5L,KAAK+Z,kBAAkB8I,eAAgB,IAE5C3gB,IAAK,CACHyJ,EAAG3L,KAAK+Z,kBAAkB+I,aAAc,GACxClX,EAAG5L,KAAK+Z,kBAAkB+I,aAAc,IAG9C,CAKOC,iB,MACiB,QAAtB,EAAA/iB,KAAK+Z,yBAAiB,SAAEgJ,gBAC1B,CAKOC,Y,MACiB,QAAtB,EAAAhjB,KAAK+Z,yBAAiB,SAAEiJ,WAC1B,CAEOC,YAAYhhB,EAAeC,G,MACV,QAAtB,EAAAlC,KAAK+Z,yBAAiB,SAAEkJ,YAAYhhB,EAAOC,EAC7C,CAOUsY,SAASvQ,GAIjB,GAHAjK,KAAKoU,iBAAkB,EACvBpU,KAAKqU,cAAe,EAEhBrU,KAAK4W,yBAAiE,IAAvC5W,KAAK4W,uBAAuB3M,GAC7D,OAAO,EAIT,MAAMiZ,EAA0BljB,KAAKkU,QAAQ/O,OAASnF,KAAKqJ,QAAQ8Z,iBAAmBlZ,EAAMgW,OAE5F,IAAKiD,IAA4BljB,KAAK+Y,mBAAoBqK,QAAQnZ,GAIhE,OAHIjK,KAAK6D,OAAOqV,QAAUlZ,KAAK6D,OAAO+B,OACpC5F,KAAKyJ,eAAe4Z,kBAEf,EAGJH,GAA0C,SAAdjZ,EAAMpH,KAAgC,aAAdoH,EAAMpH,MAC7D7C,KAAKuU,qBAAsB,GAG7B,MAAM/D,GAAS,IAAA8S,uBAAsBrZ,EAAOjK,KAAK4G,YAAYC,gBAAgBsa,sBAAuBnhB,KAAKkU,QAAQ/O,MAAOnF,KAAKqJ,QAAQ8Z,iBAIrI,GAFAnjB,KAAKyY,kBAAkBxO,GAEH,IAAhBuG,EAAOrH,MAAyD,IAAhBqH,EAAOrH,KAAqC,CAC9F,MAAMoa,EAAcvjB,KAAKU,KAAO,EAEhC,OADAV,KAAKyE,YAA4B,IAAhB+L,EAAOrH,MAAuCoa,EAAcA,GACtEvjB,KAAKygB,OAAOxW,GAAO,E,CAO5B,OAJoB,IAAhBuG,EAAOrH,MACTnJ,KAAKgjB,cAGHhjB,KAAKwjB,mBAAmBxjB,KAAKkU,QAASjK,KAItCuG,EAAOiQ,QAETzgB,KAAKygB,OAAOxW,GAAO,IAGhBuG,EAAO3N,QAMRoH,EAAMpH,MAAQoH,EAAM8V,UAAY9V,EAAMgW,SAAWhW,EAAMwZ,SAAgC,IAArBxZ,EAAMpH,IAAI3B,QAC1E+I,EAAMpH,IAAI6gB,WAAW,IAAM,IAAMzZ,EAAMpH,IAAI6gB,WAAW,IAAM,MAK9D1jB,KAAKuU,qBACPvU,KAAKuU,qBAAsB,GACpB,IAML/D,EAAO3N,MAAQ,EAAA2U,GAAGmM,KAAOnT,EAAO3N,MAAQ,EAAA2U,GAAGoM,KAC7C5jB,KAAK2G,SAAUI,MAAQ,IAGzB/G,KAAK0U,OAAOrF,KAAK,CAAExM,IAAK2N,EAAO3N,IAAKghB,SAAU5Z,IAC9CjK,KAAK0Y,cACL1Y,KAAK4G,YAAYE,iBAAiB0J,EAAO3N,KAAK,GAMzC7C,KAAK0e,eAAehO,WAAW+N,sBAIpCze,KAAKoU,iBAAkB,GAHdpU,KAAKygB,OAAOxW,GAAO,KAI9B,CAEQuZ,mBAAmBtP,EAAmBjN,GAC5C,MAAM6c,EACH5P,EAAQ/O,QAAUnF,KAAKqJ,QAAQ8Z,iBAAmBlc,EAAGgZ,SAAWhZ,EAAG8Y,UAAY9Y,EAAGwc,SAClFvP,EAAQ6P,WAAa9c,EAAGgZ,QAAUhZ,EAAG8Y,UAAY9Y,EAAGwc,SACpDvP,EAAQ6P,WAAa9c,EAAG+c,iBAAiB,YAE5C,MAAgB,aAAZ/c,EAAGkC,KACE2a,EAIFA,KAAmB7c,EAAGgd,SAAWhd,EAAGgd,QAAU,GACvD,CAEU1J,OAAOtT,GACfjH,KAAKqU,cAAe,EAEhBrU,KAAK4W,yBAA8D,IAApC5W,KAAK4W,uBAAuB3P,KAwNnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAGgd,SACO,KAAfhd,EAAGgd,SACY,KAAfhd,EAAGgd,OACP,CAxNSC,CAAwBjd,IAC3BjH,KAAK0E,QAGP1E,KAAKyY,kBAAkBxR,GACvBjH,KAAKsU,kBAAmB,EAC1B,CAQUmG,UAAUxT,GAClB,IAAIpE,EAIJ,GAFA7C,KAAKsU,kBAAmB,EAEpBtU,KAAKoU,gBACP,OAAO,EAGT,GAAIpU,KAAK4W,yBAA8D,IAApC5W,KAAK4W,uBAAuB3P,GAC7D,OAAO,EAKT,GAFAjH,KAAKygB,OAAOxZ,GAERA,EAAGkd,SACLthB,EAAMoE,EAAGkd,cACJ,GAAiB,OAAbld,EAAGmd,YAA+B9Z,IAAbrD,EAAGmd,MACjCvhB,EAAMoE,EAAGgd,YACJ,IAAiB,IAAbhd,EAAGmd,OAA+B,IAAhBnd,EAAGkd,SAG9B,OAAO,EAFPthB,EAAMoE,EAAGmd,K,CAKX,SAAKvhB,IACFoE,EAAGgZ,QAAUhZ,EAAG8Y,SAAW9Y,EAAGwc,WAAazjB,KAAKwjB,mBAAmBxjB,KAAKkU,QAASjN,KAKpFpE,EAAMwhB,OAAOC,aAAazhB,GAE1B7C,KAAK0U,OAAOrF,KAAK,CAAExM,MAAKghB,SAAU5c,IAClCjH,KAAK0Y,cACL1Y,KAAK4G,YAAYE,iBAAiBjE,GAAK,GAEvC7C,KAAKsU,kBAAmB,EAIxBtU,KAAKuU,qBAAsB,EAEpB,GACT,CAQUsG,YAAY5T,GAIpB,GAAIA,EAAGma,MAAyB,eAAjBna,EAAGsd,aAAgCtd,EAAGud,WAAaxkB,KAAKqU,gBAAkBrU,KAAK0e,eAAehO,WAAW+N,iBAAkB,CACxI,GAAIze,KAAKsU,iBACP,OAAO,EAKTtU,KAAKuU,qBAAsB,EAE3B,MAAMjO,EAAOW,EAAGma,KAIhB,OAHAphB,KAAK4G,YAAYE,iBAAiBR,GAAM,GAExCtG,KAAKygB,OAAOxZ,IACL,C,CAGT,OAAO,CACT,CAQOwV,OAAO9Q,EAAWC,GACnBD,IAAM3L,KAAKuN,MAAQ3B,IAAM5L,KAAKU,KAQlCd,MAAM6c,OAAO9Q,EAAGC,GANV5L,KAAK+b,mBAAqB/b,KAAK+b,iBAAiB0I,cAClDzkB,KAAK+b,iBAAiBgD,SAM5B,CAEQpI,aAAahL,EAAWC,G,QACT,QAArB,EAAA5L,KAAK+b,wBAAgB,SAAEgD,UAIV,QAAb,EAAA/e,KAAKid,gBAAQ,SAAEI,gBAAe,EAChC,CAKOtU,QACL,GAA0B,IAAtB/I,KAAK6D,OAAOqV,OAAiC,IAAlBlZ,KAAK6D,OAAO+H,EAA3C,CAIA5L,KAAK6D,OAAO6gB,kBACZ1kB,KAAK6D,OAAOC,MAAM4E,IAAI,EAAG1I,KAAK6D,OAAOC,MAAM8E,IAAI5I,KAAK6D,OAAOqV,MAAQlZ,KAAK6D,OAAO+H,IAC/E5L,KAAK6D,OAAOC,MAAM5C,OAAS,EAC3BlB,KAAK6D,OAAO+B,MAAQ,EACpB5F,KAAK6D,OAAOqV,MAAQ,EACpBlZ,KAAK6D,OAAO+H,EAAI,EAChB,IAAK,IAAIvM,EAAI,EAAGA,EAAIW,KAAKU,KAAMrB,IAC7BW,KAAK6D,OAAOC,MAAMU,KAAKxE,KAAK6D,OAAO8gB,aAAa,EAAAC,oBAElD5kB,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,GAC5BV,KAAKke,UAAU7O,KAAK,CAAE7L,SAAUxD,KAAK6D,OAAO+B,MAAOic,OAAQ,G,CAC7D,CAUOxL,Q,QAKLrW,KAAKqJ,QAAQ3I,KAAOV,KAAKU,KACzBV,KAAKqJ,QAAQkE,KAAOvN,KAAKuN,KACzB,MAAMwU,EAAwB/hB,KAAK4W,uBAEnC5W,KAAKuV,SACL3V,MAAMyW,QACgB,QAAtB,EAAArW,KAAK+Z,yBAAiB,SAAE1D,QACxBrW,KAAK2V,mBAAmBU,QAGxBrW,KAAK4W,uBAAyBmL,EAG9B/hB,KAAKuF,QAAQ,EAAGvF,KAAKU,KAAO,GACf,QAAb,EAAAV,KAAKid,gBAAQ,SAAEI,gBACjB,CAEOwH,oB,MACc,QAAnB,EAAA7kB,KAAKL,sBAAc,SAAEklB,mBACvB,CAEQ1O,e,OACU,QAAZ,EAAAnW,KAAK0B,eAAO,eAAEtB,UAAUqL,SAAS,UACnCzL,KAAK4G,YAAYE,iBAAiB,EAAA0Q,GAAGC,IAAM,MAE3CzX,KAAK4G,YAAYE,iBAAiB,EAAA0Q,GAAGC,IAAM,KAE/C,CAEQlB,sBAAsBpN,GAC5B,GAAKnJ,KAAKL,eAIV,OAAQwJ,GACN,KAAK,EAAA2b,yBAAyBC,oBAC5B,MAAMC,EAAchlB,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAOxd,MAAMyd,QAAQ,GACtEC,EAAenlB,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAO9e,OAAO+e,QAAQ,GAC9EllB,KAAK4G,YAAYE,iBAAiB,GAAG,EAAA0Q,GAAGC,SAAS0N,KAAgBH,MACjE,MACF,KAAK,EAAAF,yBAAyBM,qBAC5B,MAAM7L,EAAYvZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAAMyd,QAAQ,GAClE7L,EAAarZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OAAO+e,QAAQ,GAC1EllB,KAAK4G,YAAYE,iBAAiB,GAAG,EAAA0Q,GAAGC,SAAS4B,KAAcE,MAGrE,CAGOkH,OAAOxZ,EAAWoe,GACvB,GAAKrlB,KAAKqJ,QAAQic,cAAiBD,EAKnC,OAFApe,EAAGtC,iBACHsC,EAAGc,mBACI,CACT,EAhtCF,Y,4FCnDA,2BAYEtI,YACU2S,EACSmT,EArBgB,KAoBzB,KAAAnT,gBAAAA,EACS,KAAAmT,qBAAAA,EARX,KAAAC,eAAiB,EAEjB,KAAAC,6BAA8B,CAQtC,CAEOlc,UACDvJ,KAAK0lB,mBACPC,aAAa3lB,KAAK0lB,kBAEtB,CAEOngB,QAAQoN,EAA8BC,EAA4BC,GACvE7S,KAAK8S,UAAYD,EAEjBF,OAAwBrI,IAAbqI,EAAyBA,EAAW,EAC/CC,OAAoBtI,IAAXsI,EAAuBA,EAAS5S,KAAK8S,UAAY,EAE1D9S,KAAK+S,eAA+BzI,IAAnBtK,KAAK+S,UAA0BC,KAAKC,IAAIjT,KAAK+S,UAAWJ,GAAYA,EACrF3S,KAAKkT,aAA2B5I,IAAjBtK,KAAKkT,QAAwBF,KAAKG,IAAInT,KAAKkT,QAASN,GAAUA,EAI7E,MAAMgT,EAA6BC,KAAKC,MACxC,GAAIF,EAAqB5lB,KAAKwlB,gBAAkBxlB,KAAKulB,qBAEnDvlB,KAAKwlB,eAAiBI,EACtB5lB,KAAK0S,qBACA,IAAK1S,KAAKylB,4BAA6B,CAE5C,MAAMM,EAAUH,EAAqB5lB,KAAKwlB,eACpCQ,EAAkChmB,KAAKulB,qBAAuBQ,EACpE/lB,KAAKylB,6BAA8B,EAEnCzlB,KAAK0lB,kBAAoBviB,OAAOkC,YAAW,KACzCrF,KAAKwlB,eAAiBK,KAAKC,MAC3B9lB,KAAK0S,gBACL1S,KAAKylB,6BAA8B,EACnCzlB,KAAK0lB,uBAAoBpb,CAAS,GACjC0b,E,CAEP,CAEQtT,gBAEN,QAAuBpI,IAAnBtK,KAAK+S,gBAA4CzI,IAAjBtK,KAAKkT,cAA4C5I,IAAnBtK,KAAK8S,UACrE,OAIF,MAAM7Q,EAAQ+Q,KAAKG,IAAInT,KAAK+S,UAAW,GACjC7Q,EAAM8Q,KAAKC,IAAIjT,KAAKkT,QAASlT,KAAK8S,UAAY,GAGpD9S,KAAK+S,eAAYzI,EACjBtK,KAAKkT,aAAU5I,EAGftK,KAAKoS,gBAAgBnQ,EAAOC,EAC9B,E,+fC9EF,eACA,UAEA,UACA,UAgBA,IAAagb,EAAb,cAA8B,EAAA1d,WAyB5BC,YACmBwmB,EACAzK,EACA0K,EACgBzc,EACC2G,EACC2L,EACFpc,EACKgc,EACvBwK,GAEfvmB,QAViB,KAAAqmB,aAAAA,EACA,KAAAzK,iBAAAA,EACA,KAAA0K,YAAAA,EACgB,KAAAzc,eAAAA,EACC,KAAA2G,gBAAAA,EACC,KAAA2L,iBAAAA,EACF,KAAApc,eAAAA,EACK,KAAAgc,oBAAAA,EAhCjC,KAAAyK,eAAyB,EACxB,KAAAC,kBAA4B,EAC5B,KAAAC,yBAAmC,EACnC,KAAAC,0BAAoC,EACpC,KAAAC,4BAAsC,EACtC,KAAAC,0BAAoC,EACpC,KAAAC,YAAsB,EACtB,KAAAC,eAAyB,EAOzB,KAAAC,oBAA8B,EAE9B,KAAAC,uBAAwC,KACxC,KAAAC,wBAAkC,EAClC,KAAAC,mBAAyC,CAC/CC,UAAW,EACXC,QAAS,EACTvjB,QAAS,GAmBT1D,KAAKomB,eAAkBpmB,KAAKwb,iBAAiB0L,YAAclnB,KAAKkmB,YAAYgB,aArD9C,GAsD9BlnB,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKwb,iBAAkB,SAAUxb,KAAKmnB,cAAc5lB,KAAKvB,QAGhGA,KAAKonB,cAAgBpnB,KAAKyJ,eAAe5F,OACzC7D,KAAK6B,SAAS7B,KAAKyJ,eAAeyO,QAAQmP,kBAAiBvmB,GAAKd,KAAKonB,cAAgBtmB,EAAEwmB,gBACvFtnB,KAAKunB,kBAAoBvnB,KAAKL,eAAeqG,WAC7ChG,KAAK6B,SAAS7B,KAAKL,eAAeqD,oBAAmBlC,GAAKd,KAAKunB,kBAAoBzmB,KAEnFd,KAAKwnB,mBAAmBrB,EAAa7O,QACrCtX,KAAK6B,SAASskB,EAAasB,gBAAe3mB,GAAKd,KAAKwnB,mBAAmB1mB,MACvEd,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,cAAc,IAAM3e,KAAKqd,oBAGnFhY,YAAW,IAAMrF,KAAKqd,kBAAkB,EAC1C,CAEQmK,mBAAmBlQ,GACzBtX,KAAKwb,iBAAiBpV,MAAMshB,gBAAkBpQ,EAAOqQ,WAAW1hB,GAClE,CAMQ2hB,SAASC,GACf,GAAIA,EAKF,OAJA7nB,KAAK0S,qBAC+B,OAAhC1S,KAAK6mB,wBACP7mB,KAAK2b,oBAAoBxY,OAAOoP,qBAAqBvS,KAAK6mB,yBAI1B,OAAhC7mB,KAAK6mB,yBACP7mB,KAAK6mB,uBAAyB7mB,KAAK2b,oBAAoBxY,OAAOsP,uBAAsB,IAAMzS,KAAK0S,kBAEnG,CAEQA,gBACN,GAAI1S,KAAK+b,iBAAiB5V,OAAS,EAAG,CACpCnG,KAAKqmB,kBAAoBrmB,KAAKL,eAAeqG,WAAW8hB,OAAO5hB,KAAKC,OAASnG,KAAK2b,oBAAoBoM,IACtG/nB,KAAKsmB,yBAA2BtmB,KAAKL,eAAeqG,WAAW8hB,OAAO5hB,KAAKC,OAC3EnG,KAAKwmB,4BAA8BxmB,KAAKwb,iBAAiBwM,aACzD,MAAMC,EAAkBjV,KAAKkV,MAAMloB,KAAKqmB,kBAAoBrmB,KAAKumB,4BAA8BvmB,KAAKwmB,4BAA8BxmB,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAO9e,QACxKnG,KAAKymB,4BAA8BwB,IACrCjoB,KAAKymB,0BAA4BwB,EACjCjoB,KAAKkmB,YAAY9f,MAAMD,OAASnG,KAAKymB,0BAA4B,K,CAKrE,MAAM0B,EAAYnoB,KAAKyJ,eAAe5F,OAAO+B,MAAQ5F,KAAKqmB,kBACtDrmB,KAAKwb,iBAAiB2M,YAAcA,IAGtCnoB,KAAK8mB,wBAAyB,EAC9B9mB,KAAKwb,iBAAiB2M,UAAYA,GAGpCnoB,KAAK6mB,uBAAyB,IAChC,CAKOxJ,eAAewK,GAAqB,GAEzC,GAAI7nB,KAAKumB,4BAA8BvmB,KAAKyJ,eAAe5F,OAAOC,MAAM5C,OAGtE,OAFAlB,KAAKumB,0BAA4BvmB,KAAKyJ,eAAe5F,OAAOC,MAAM5C,YAClElB,KAAK4nB,SAASC,GAKZ7nB,KAAKwmB,8BAAgCxmB,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAO9e,QAM/EnG,KAAK2mB,iBAAmB3mB,KAAKonB,cAAcxhB,MAAQ5F,KAAKqmB,mBAMxDrmB,KAAKunB,kBAAkBO,OAAO5hB,KAAKC,SAAWnG,KAAKsmB,0BAXrDtmB,KAAK4nB,SAASC,EAelB,CAOQV,cAAclgB,GAMpB,GAJAjH,KAAK2mB,eAAiB3mB,KAAKwb,iBAAiB2M,WAIvCnoB,KAAKwb,iBAAiB4M,aACzB,OAIF,GAAIpoB,KAAK8mB,uBAIP,OAHA9mB,KAAK8mB,wBAAyB,OAE9B9mB,KAAKimB,aAAa,GAIpB,MACMoC,EADSrV,KAAKkV,MAAMloB,KAAK2mB,eAAiB3mB,KAAKqmB,mBAC/BrmB,KAAKyJ,eAAe5F,OAAO+B,MACjD5F,KAAKimB,aAAaoC,EACpB,CAEQC,gBAEN,GAAItoB,KAAKuoB,cAAmD,IAApCvoB,KAAK+mB,mBAAmBE,SAAqD,IAApCjnB,KAAK+mB,mBAAmBrjB,OACvF,OAIF,MAAM8kB,EAAUxoB,KAAKyoB,uBACrBzoB,KAAKwb,iBAAiB2M,UAAYnoB,KAAK+mB,mBAAmBE,OAASjU,KAAKkV,MAAMM,GAAWxoB,KAAK+mB,mBAAmBrjB,OAAS1D,KAAK+mB,mBAAmBE,SAG9IuB,EAAU,EACZxoB,KAAK2b,oBAAoBxY,OAAOsP,uBAAsB,IAAMzS,KAAKsoB,kBAEjEtoB,KAAK0oB,yBAET,CAEQD,uBACN,OAAKzoB,KAAKoQ,gBAAgBM,WAAWiY,sBAAyB3oB,KAAK+mB,mBAAmBC,UAG/EhU,KAAKG,IAAIH,KAAKC,KAAK4S,KAAKC,MAAQ9lB,KAAK+mB,mBAAmBC,WAAahnB,KAAKoQ,gBAAgBM,WAAWiY,qBAAsB,GAAI,GAF7H,CAGX,CAEQD,0BACN1oB,KAAK+mB,mBAAmBC,UAAY,EACpChnB,KAAK+mB,mBAAmBE,QAAU,EAClCjnB,KAAK+mB,mBAAmBrjB,QAAU,CACpC,CAOQklB,cAAc3hB,EAAWkW,GAC/B,MAAM0L,EAAmB7oB,KAAKwb,iBAAiB2M,UAAYnoB,KAAKwmB,4BAChE,QAAKrJ,EAAS,GAAyC,IAApCnd,KAAKwb,iBAAiB2M,WACtChL,EAAS,GAAK0L,EAAmB7oB,KAAKymB,6BACnCxf,EAAG6hB,YACL7hB,EAAGtC,kBAEE,EAGX,CAQO2c,YAAYra,GACjB,MAAMkW,EAASnd,KAAK+oB,mBAAmB9hB,GACvC,OAAe,IAAXkW,IAGCnd,KAAKoQ,gBAAgBM,WAAWiY,sBAGnC3oB,KAAK+mB,mBAAmBC,UAAYnB,KAAKC,MACrC9lB,KAAKyoB,uBAAyB,GAChCzoB,KAAK+mB,mBAAmBE,OAASjnB,KAAKwb,iBAAiB2M,WACf,IAApCnoB,KAAK+mB,mBAAmBrjB,OAC1B1D,KAAK+mB,mBAAmBrjB,OAAS1D,KAAKwb,iBAAiB2M,UAAYhL,EAEnEnd,KAAK+mB,mBAAmBrjB,QAAUyZ,EAEpCnd,KAAK+mB,mBAAmBrjB,OAASsP,KAAKG,IAAIH,KAAKC,IAAIjT,KAAK+mB,mBAAmBrjB,OAAQ1D,KAAKwb,iBAAiBwN,cAAe,GACxHhpB,KAAKsoB,iBAELtoB,KAAK0oB,2BAbP1oB,KAAKwb,iBAAiB2M,WAAahL,EAgB9Bnd,KAAK4oB,cAAc3hB,EAAIkW,GAChC,CAEQ4L,mBAAmB9hB,GAEzB,GAAkB,IAAdA,EAAGyY,QAAgBzY,EAAGiZ,SACxB,OAAO,EAIT,IAAI/C,EAASnd,KAAKipB,qBAAqBhiB,EAAGyY,OAAQzY,GAMlD,OALIA,EAAGiiB,YAAcC,WAAWC,eAC9BjM,GAAUnd,KAAKqmB,kBACNpf,EAAGiiB,YAAcC,WAAWE,iBACrClM,GAAUnd,KAAKqmB,kBAAoBrmB,KAAKyJ,eAAe/I,MAElDyc,CACT,CAOOsC,iBAAiBxY,GAEtB,GAAkB,IAAdA,EAAGyY,QAAgBzY,EAAGiZ,SACxB,OAAO,EAIT,IAAI/C,EAASnd,KAAKipB,qBAAqBhiB,EAAGyY,OAAQzY,GASlD,OARIA,EAAGiiB,YAAcC,WAAWG,iBAC9BnM,GAAUnd,KAAKqmB,kBAAoB,EACnCrmB,KAAK4mB,qBAAuBzJ,EAC5BA,EAASnK,KAAKuW,MAAMvW,KAAKqO,IAAIrhB,KAAK4mB,uBAAyB5mB,KAAK4mB,oBAAsB,EAAI,GAAK,GAC/F5mB,KAAK4mB,qBAAuB,GACnB3f,EAAGiiB,YAAcC,WAAWE,iBACrClM,GAAUnd,KAAKyJ,eAAe/I,MAEzByc,CACT,CAEQ8L,qBAAqB9L,EAAgBlW,GAC3C,MAAMuiB,EAAWxpB,KAAKoQ,gBAAgBM,WAAW+Y,mBAEjD,MAAkB,QAAbD,GAAsBviB,EAAGgZ,QACd,SAAbuJ,GAAuBviB,EAAG8Y,SACb,UAAbyJ,GAAwBviB,EAAGiZ,SACrB/C,EAASnd,KAAKoQ,gBAAgBM,WAAWgZ,sBAAwB1pB,KAAKoQ,gBAAgBM,WAAWiZ,kBAGnGxM,EAASnd,KAAKoQ,gBAAgBM,WAAWiZ,iBAClD,CAMOpI,iBAAiBta,GACtBjH,KAAK0mB,YAAczf,EAAG2iB,QAAQ,GAAGC,KACnC,CAMOrI,gBAAgBva,GACrB,MAAMyY,EAAS1f,KAAK0mB,YAAczf,EAAG2iB,QAAQ,GAAGC,MAEhD,OADA7pB,KAAK0mB,YAAczf,EAAG2iB,QAAQ,GAAGC,MAClB,IAAXnK,IAGJ1f,KAAKwb,iBAAiB2M,WAAazI,EAC5B1f,KAAK4oB,cAAc3hB,EAAIyY,GAChC,GAxTWxC,EAAQ,GA6BhB,MAAAjN,gBACA,MAAAgC,iBACA,MAAAgK,kBACA,MAAAO,gBACA,MAAAV,qBACA,MAAAK,gBAlCQe,GAAA,EAAAA,SAAAA,C,+gBCpBb,gBACA,UACA,SACA,UAEA,IAAaiB,EAAb,cAA8C,EAAA3e,WAQ5CC,YACmBqqB,EACgBrgB,EACIkM,EACJhW,GAEjCC,QALiB,KAAAkqB,eAAAA,EACgB,KAAArgB,eAAAA,EACI,KAAAkM,mBAAAA,EACJ,KAAAhW,eAAAA,EAVlB,KAAAoqB,oBAA6D,IAAIzd,IAG1E,KAAA0d,oBAA8B,EAC9B,KAAAC,oBAA8B,EAUpCjqB,KAAKkqB,WAAahqB,SAASC,cAAc,OACzCH,KAAKkqB,WAAW9pB,UAAUC,IAAI,8BAC9BL,KAAK8pB,eAAelpB,YAAYZ,KAAKkqB,YAErClqB,KAAK6B,SAAS7B,KAAKL,eAAeqP,0BAAyB,IAAMhP,KAAKmqB,2BACtEnqB,KAAK6B,SAAS7B,KAAKL,eAAeqD,oBAAmB,KACnDhD,KAAKiqB,oBAAqB,EAC1BjqB,KAAKoqB,eAAe,KAEtBpqB,KAAK6B,UAAS,IAAAwB,0BAAyBF,OAAQ,UAAU,IAAMnD,KAAKoqB,mBACpEpqB,KAAK6B,SAAS7B,KAAKyJ,eAAeyO,QAAQmP,kBAAiB,KACzDrnB,KAAKgqB,mBAAqBhqB,KAAKyJ,eAAe5F,SAAW7D,KAAKyJ,eAAeyO,QAAQ8H,GAAG,KAE1FhgB,KAAK6B,SAAS7B,KAAK2V,mBAAmB0U,wBAAuB,IAAMrqB,KAAKoqB,mBACxEpqB,KAAK6B,SAAS7B,KAAK2V,mBAAmB2U,qBAAoBC,GAAcvqB,KAAKwqB,kBAAkBD,MAC/FvqB,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKkqB,WAAW5a,SAChBtP,KAAK+pB,oBAAoBhhB,OAAO,IAEpC,CAEQqhB,qBACuB9f,IAAzBtK,KAAKsS,kBAGTtS,KAAKsS,gBAAkBtS,KAAKL,eAAe6S,oBAAmB,KAC5DxS,KAAKmqB,wBACLnqB,KAAKsS,qBAAkBhI,CAAS,IAEpC,CAEQ6f,wBACN,IAAK,MAAMI,KAAcvqB,KAAK2V,mBAAmBrH,YAC/CtO,KAAKyqB,kBAAkBF,GAEzBvqB,KAAKiqB,oBAAqB,CAC5B,CAEQQ,kBAAkBF,GACxBvqB,KAAK0qB,cAAcH,GACfvqB,KAAKiqB,oBACPjqB,KAAK2qB,kBAAkBJ,EAE3B,CAEQK,eAAeL,G,MACrB,MAAM7oB,EAAUxB,SAASC,cAAc,OACvCuB,EAAQtB,UAAUC,IAAI,oBACtBqB,EAAQ0E,MAAMqB,MAAQ,GAAGuL,KAAKkV,OAAOqC,EAAWlhB,QAAQ5B,OAAS,GAAKzH,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,WAC9G/F,EAAQ0E,MAAMD,QAAaokB,EAAWlhB,QAAQlD,QAAU,GAAKnG,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OAA9E,KACvBzE,EAAQ0E,MAAMmB,KAAUgjB,EAAWM,OAAOta,KAAOvQ,KAAKyJ,eAAeyO,QAAQC,OAAOvS,OAAS5F,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OAAjH,KACpBzE,EAAQ0E,MAAMsT,WAAa,GAAG1Z,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,WAEtE,MAAMwF,EAAwB,QAApB,EAAA4e,EAAWlhB,QAAQsC,SAAC,QAAI,EAOlC,OANIA,GAAKA,EAAI3L,KAAKyJ,eAAe8D,OAE/B7L,EAAQ0E,MAAM0kB,QAAU,QAE1B9qB,KAAK2qB,kBAAkBJ,EAAY7oB,GAE5BA,CACT,CAEQgpB,cAAcH,GACpB,MAAMha,EAAOga,EAAWM,OAAOta,KAAOvQ,KAAKyJ,eAAeyO,QAAQC,OAAOvS,MACzE,GAAI2K,EAAO,GAAKA,GAAQvQ,KAAKyJ,eAAe/I,KAEtC6pB,EAAW7oB,UACb6oB,EAAW7oB,QAAQ0E,MAAM0kB,QAAU,OACnCP,EAAWQ,gBAAgB1b,KAAKkb,EAAW7oB,cAExC,CACL,IAAIA,EAAU1B,KAAK+pB,oBAAoBnhB,IAAI2hB,GACtC7oB,IACHA,EAAU1B,KAAK4qB,eAAeL,GAC9BA,EAAW7oB,QAAUA,EACrB1B,KAAK+pB,oBAAoBrhB,IAAI6hB,EAAY7oB,GACzC1B,KAAKkqB,WAAWtpB,YAAYc,IAE9BA,EAAQ0E,MAAMmB,IAASgJ,EAAOvQ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OAAlD,KACpBzE,EAAQ0E,MAAM0kB,QAAU9qB,KAAKgqB,mBAAqB,OAAS,QAC3DO,EAAWQ,gBAAgB1b,KAAK3N,E,CAEpC,CAEQipB,kBAAkBJ,EAAiC7oB,EAAmC6oB,EAAW7oB,S,MACvG,IAAKA,EACH,OAEF,MAAMiK,EAAwB,QAApB,EAAA4e,EAAWlhB,QAAQsC,SAAC,QAAI,EACY,WAAzC4e,EAAWlhB,QAAQ2hB,QAAU,QAChCtpB,EAAQ0E,MAAM6kB,MAAQtf,EAAOA,EAAI3L,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAA/C,KAA2D,GAErF/F,EAAQ0E,MAAMiB,KAAOsE,EAAOA,EAAI3L,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAA/C,KAA2D,EAExF,CAEQ+iB,kBAAkBD,G,MACgB,QAAxC,EAAAvqB,KAAK+pB,oBAAoBnhB,IAAI2hB,UAAW,SAAEjb,SAC1CtP,KAAK+pB,oBAAoBmB,OAAOX,GAChCA,EAAWhhB,SACb,GArHW4U,EAAwB,GAUhC,MAAAlO,gBACA,MAAA6F,oBACA,MAAA0G,iBAZQ2B,GAAA,EAAAA,yBAAAA,C,wFCqBb,qCACU,KAAAgN,OAAuB,GAKvB,KAAAC,UAA0B,GAC1B,KAAAC,eAAiB,EAEjB,KAAAC,aAA+C,CACrDC,KAAM,EACNlkB,KAAM,EACNmkB,OAAQ,EACRP,MAAO,EAwEX,CArEaQ,YAGT,OADAzrB,KAAKorB,UAAUlqB,OAAS8R,KAAKC,IAAIjT,KAAKorB,UAAUlqB,OAAQlB,KAAKmrB,OAAOjqB,QAC7DlB,KAAKmrB,MACd,CAEOpiB,QACL/I,KAAKmrB,OAAOjqB,OAAS,EACrBlB,KAAKqrB,eAAiB,CACxB,CAEOK,cAAcnB,GACnB,GAAKA,EAAWlhB,QAAQsiB,qBAAxB,CAGA,IAAK,MAAMC,KAAK5rB,KAAKmrB,OACnB,GAAIS,EAAExU,QAAUmT,EAAWlhB,QAAQsiB,qBAAqBvU,OACpDwU,EAAEpoB,WAAa+mB,EAAWlhB,QAAQsiB,qBAAqBnoB,SAAU,CACnE,GAAIxD,KAAK6rB,oBAAoBD,EAAGrB,EAAWM,OAAOta,MAChD,OAEF,GAAIvQ,KAAK8rB,oBAAoBF,EAAGrB,EAAWM,OAAOta,KAAMga,EAAWlhB,QAAQsiB,qBAAqBnoB,UAE9F,YADAxD,KAAK+rB,eAAeH,EAAGrB,EAAWM,OAAOta,K,CAM/C,GAAIvQ,KAAKqrB,eAAiBrrB,KAAKorB,UAAUlqB,OAMvC,OALAlB,KAAKorB,UAAUprB,KAAKqrB,gBAAgBjU,MAAQmT,EAAWlhB,QAAQsiB,qBAAqBvU,MACpFpX,KAAKorB,UAAUprB,KAAKqrB,gBAAgB7nB,SAAW+mB,EAAWlhB,QAAQsiB,qBAAqBnoB,SACvFxD,KAAKorB,UAAUprB,KAAKqrB,gBAAgBW,gBAAkBzB,EAAWM,OAAOta,KACxEvQ,KAAKorB,UAAUprB,KAAKqrB,gBAAgBY,cAAgB1B,EAAWM,OAAOta,UACtEvQ,KAAKmrB,OAAO3mB,KAAKxE,KAAKorB,UAAUprB,KAAKqrB,mBAIvCrrB,KAAKmrB,OAAO3mB,KAAK,CACf4S,MAAOmT,EAAWlhB,QAAQsiB,qBAAqBvU,MAC/C5T,SAAU+mB,EAAWlhB,QAAQsiB,qBAAqBnoB,SAClDwoB,gBAAiBzB,EAAWM,OAAOta,KACnC0b,cAAe1B,EAAWM,OAAOta,OAEnCvQ,KAAKorB,UAAU5mB,KAAKxE,KAAKmrB,OAAOnrB,KAAKmrB,OAAOjqB,OAAS,IACrDlB,KAAKqrB,gB,CACP,CAEOa,WAAWC,GAChBnsB,KAAKsrB,aAAea,CACtB,CAEQN,oBAAoBO,EAAkB7b,GAC5C,OACEA,GAAQ6b,EAAKJ,iBACbzb,GAAQ6b,EAAKH,aAEjB,CAEQH,oBAAoBM,EAAkB7b,EAAc/M,GAC1D,OACG+M,GAAQ6b,EAAKJ,gBAAkBhsB,KAAKsrB,aAAa9nB,GAAY,SAC7D+M,GAAQ6b,EAAKH,cAAgBjsB,KAAKsrB,aAAa9nB,GAAY,OAEhE,CAEQuoB,eAAeK,EAAkB7b,GACvC6b,EAAKJ,gBAAkBhZ,KAAKC,IAAImZ,EAAKJ,gBAAiBzb,GACtD6b,EAAKH,cAAgBjZ,KAAKG,IAAIiZ,EAAKH,cAAe1b,EACpD,E,4gBC9GF,gBACA,UACA,UACA,SACA,UAIM8b,EAAa,CACjBd,KAAM,EACNlkB,KAAM,EACNmkB,OAAQ,EACRP,MAAO,GAEHqB,EAAY,CAChBf,KAAM,EACNlkB,KAAM,EACNmkB,OAAQ,EACRP,MAAO,GAEHsB,EAAQ,CACZhB,KAAM,EACNlkB,KAAM,EACNmkB,OAAQ,EACRP,MAAO,GAGT,IAAanM,EAAb,cAA2C,EAAAtf,WAezCC,YACmB+b,EACAsO,EACgBrgB,EACIkM,EACJhW,EACCyQ,EACIoc,G,MAEtC5sB,QARiB,KAAA4b,iBAAAA,EACA,KAAAsO,eAAAA,EACgB,KAAArgB,eAAAA,EACI,KAAAkM,mBAAAA,EACJ,KAAAhW,eAAAA,EACC,KAAAyQ,gBAAAA,EACI,KAAAoc,mBAAAA,EAnBvB,KAAAC,gBAAmC,IAAI,EAAAC,eAMhD,KAAAC,yBAA+C,EAC/C,KAAAC,qBAA2C,EAC3C,KAAAC,uBAAiC,EAcvC7sB,KAAK8sB,QAAU5sB,SAASC,cAAc,UACtCH,KAAK8sB,QAAQ1sB,UAAUC,IAAI,mCAC3BL,KAAK+sB,2BAC8B,QAAnC,EAAA/sB,KAAKwb,iBAAiBvS,qBAAa,SAAE+jB,aAAahtB,KAAK8sB,QAAS9sB,KAAKwb,kBACrE,MAAMyR,EAAMjtB,KAAK8sB,QAAQI,WAAW,MACpC,IAAKD,EACH,MAAM,IAAItrB,MAAM,sBAEhB3B,KAAKmtB,KAAOF,EAEdjtB,KAAKotB,+BACLptB,KAAKqtB,iCACLrtB,KAAKstB,oCACLttB,KAAK6B,UAAS,IAAAyB,eAAa,K,MACb,QAAZ,EAAAtD,KAAK8sB,eAAO,SAAExd,QAAQ,IAE1B,CArCYie,aACV,OAAOvtB,KAAKoQ,gBAAgB/G,QAAQuV,oBAAsB,CAC5D,CAwCQwO,+BACNptB,KAAK6B,SAAS7B,KAAK2V,mBAAmB0U,wBAAuB,IAAMrqB,KAAKoqB,mBAAc9f,GAAW,MACjGtK,KAAK6B,SAAS7B,KAAK2V,mBAAmB2U,qBAAoB,IAAMtqB,KAAKoqB,mBAAc9f,GAAW,KAChG,CAMQ+iB,iCACNrtB,KAAK6B,SAAS7B,KAAKL,eAAeqP,0BAAyB,IAAMhP,KAAKoqB,mBACtEpqB,KAAK6B,SAAS7B,KAAKyJ,eAAeyO,QAAQmP,kBAAiB,KACzDrnB,KAAK8sB,QAAS1mB,MAAM0kB,QAAU9qB,KAAKyJ,eAAe5F,SAAW7D,KAAKyJ,eAAeyO,QAAQ8H,IAAM,OAAS,OAAO,KAEjHhgB,KAAK6B,SAAS7B,KAAKyJ,eAAetH,UAAS,KACrCnC,KAAK6sB,yBAA2B7sB,KAAKyJ,eAAeyO,QAAQsV,OAAO1pB,MAAM5C,SAC3ElB,KAAKytB,8BACLztB,KAAK0tB,2B,IAGX,CAKQJ,oCAENttB,KAAK6B,SAAS7B,KAAKL,eAAeqC,UAAS,KACpChC,KAAK2tB,kBAAoB3tB,KAAK2tB,mBAAqB3tB,KAAK8pB,eAAe8D,eAC1E5tB,KAAKoqB,eAAc,GACnBpqB,KAAK2tB,iBAAmB3tB,KAAK8pB,eAAe8D,a,KAIhD5tB,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,sBAAsB,IAAM3e,KAAKoqB,eAAc,MAEzGpqB,KAAK6B,UAAS,IAAAwB,0BAAyBrD,KAAKwsB,mBAAmBrpB,OAAQ,UAAU,IAAMnD,KAAKoqB,eAAc,MAE1GpqB,KAAKoqB,eAAc,EACrB,CAEQyD,wBAEN,MAAMC,EAAa9a,KAAKuW,MAAMvpB,KAAK8sB,QAAQrlB,MAAQ,GAC7CsmB,EAAa/a,KAAKgb,KAAKhuB,KAAK8sB,QAAQrlB,MAAQ,GAClD6kB,EAAUf,KAAOvrB,KAAK8sB,QAAQrlB,MAC9B6kB,EAAUjlB,KAAOymB,EACjBxB,EAAUd,OAASuC,EACnBzB,EAAUrB,MAAQ6C,EAElB9tB,KAAKytB,8BAELlB,EAAMhB,KAAO,EACbgB,EAAMllB,KAAO,EACbklB,EAAMf,OAASc,EAAUjlB,KACzBklB,EAAMtB,MAAQqB,EAAUjlB,KAAOilB,EAAUd,MAC3C,CAEQiC,8BACNpB,EAAWd,KAAOvY,KAAKkV,MAAM,EAAIloB,KAAKwsB,mBAAmBzE,KAEzD,MAAMkG,EAAgBjuB,KAAK8sB,QAAQ3mB,OAASnG,KAAKyJ,eAAe5F,OAAOC,MAAM5C,OAEvEgtB,EAAgBlb,KAAKkV,MAAMlV,KAAKG,IAAIH,KAAKC,IAAIgb,EAAe,IAAK,GAAKjuB,KAAKwsB,mBAAmBzE,KACpGsE,EAAWhlB,KAAO6mB,EAClB7B,EAAWb,OAAS0C,EACpB7B,EAAWpB,MAAQiD,CACrB,CAEQR,2BACN1tB,KAAKysB,gBAAgBP,WAAW,CAC9BX,KAAMvY,KAAKuW,MAAMvpB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUlB,KAAK8sB,QAAQ3mB,OAAS,GAAKkmB,EAAWd,MAC1GlkB,KAAM2L,KAAKuW,MAAMvpB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUlB,KAAK8sB,QAAQ3mB,OAAS,GAAKkmB,EAAWhlB,MAC1GmkB,OAAQxY,KAAKuW,MAAMvpB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUlB,KAAK8sB,QAAQ3mB,OAAS,GAAKkmB,EAAWb,QAC5GP,MAAOjY,KAAKuW,MAAMvpB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUlB,KAAK8sB,QAAQ3mB,OAAS,GAAKkmB,EAAWpB,SAE7GjrB,KAAK6sB,uBAAyB7sB,KAAKyJ,eAAeyO,QAAQsV,OAAO1pB,MAAM5C,MACzE,CAEQ6rB,2BACN/sB,KAAK8sB,QAAQ1mB,MAAMqB,MAAQ,GAAGzH,KAAKutB,WACnCvtB,KAAK8sB,QAAQrlB,MAAQuL,KAAKkV,MAAMloB,KAAKutB,OAASvtB,KAAKwsB,mBAAmBzE,KACtE/nB,KAAK8sB,QAAQ1mB,MAAMD,OAAS,GAAGnG,KAAK8pB,eAAe8D,iBACnD5tB,KAAK8sB,QAAQ3mB,OAAS6M,KAAKkV,MAAMloB,KAAK8pB,eAAe8D,aAAe5tB,KAAKwsB,mBAAmBzE,KAC5F/nB,KAAK6tB,wBACL7tB,KAAK0tB,0BACP,CAEQS,sBACFnuB,KAAK2sB,yBACP3sB,KAAK+sB,2BAEP/sB,KAAKmtB,KAAKiB,UAAU,EAAG,EAAGpuB,KAAK8sB,QAAQrlB,MAAOzH,KAAK8sB,QAAQ3mB,QAC3DnG,KAAKysB,gBAAgB1jB,QACrB,IAAK,MAAMwhB,KAAcvqB,KAAK2V,mBAAmBrH,YAC/CtO,KAAKysB,gBAAgBf,cAAcnB,GAErCvqB,KAAKmtB,KAAKkB,UAAY,EACtB,MAAM5C,EAAQzrB,KAAKysB,gBAAgBhB,MACnC,IAAK,MAAMW,KAAQX,EACK,SAAlBW,EAAK5oB,UACPxD,KAAKsuB,iBAAiBlC,GAG1B,IAAK,MAAMA,KAAQX,EACK,SAAlBW,EAAK5oB,UACPxD,KAAKsuB,iBAAiBlC,GAG1BpsB,KAAK2sB,yBAA0B,EAC/B3sB,KAAK4sB,qBAAsB,CAC7B,CAEQ0B,iBAAiBlC,GACvBpsB,KAAKmtB,KAAKoB,UAAYnC,EAAKhV,MAC3BpX,KAAKmtB,KAAKqB,SACAjC,EAAMH,EAAK5oB,UAAY,QACvBwP,KAAKkV,OACVloB,KAAK8sB,QAAQ3mB,OAAS,IACtBimB,EAAKJ,gBAAkBhsB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUmrB,EAAWD,EAAK5oB,UAAY,QAAU,GAE3G8oB,EAAUF,EAAK5oB,UAAY,QAC3BwP,KAAKkV,OACVloB,KAAK8sB,QAAQ3mB,OAAS,KACrBimB,EAAKH,cAAgBG,EAAKJ,iBAAmBhsB,KAAKyJ,eAAeyO,QAAQC,OAAOrU,MAAM5C,QAAUmrB,EAAWD,EAAK5oB,UAAY,SAGpI,CAEQ4mB,cAAcqE,EAAkCC,GACtD1uB,KAAK2sB,wBAA0B8B,GAA0BzuB,KAAK2sB,wBAC9D3sB,KAAK4sB,oBAAsB8B,GAAgB1uB,KAAK4sB,yBACnBtiB,IAAzBtK,KAAKsS,kBAGTtS,KAAKsS,gBAAkBtS,KAAKwsB,mBAAmBrpB,OAAOsP,uBAAsB,KAC1EzS,KAAKmuB,sBACLnuB,KAAKsS,qBAAkBhI,CAAS,IAEpC,GAzLWwU,EAAqB,GAkB7B,MAAA7O,gBACA,MAAA6F,oBACA,MAAA0G,gBACA,MAAAvK,iBACA,MAAA6J,sBAtBQgD,GAAA,EAAAA,sBAAAA,C,wgBC3Bb,gBACA,UACA,UAYA,IAAanC,EAAb,MAwBEld,YACmBkvB,EACAjS,EACgBjT,EACC2G,EACHwe,EACEjvB,GALhB,KAAAgvB,UAAAA,EACA,KAAAjS,iBAAAA,EACgB,KAAAjT,eAAAA,EACC,KAAA2G,gBAAAA,EACH,KAAAwe,aAAAA,EACE,KAAAjvB,eAAAA,EAEjCK,KAAK6uB,cAAe,EACpB7uB,KAAK8uB,uBAAwB,EAC7B9uB,KAAK+uB,qBAAuB,CAAE9sB,MAAO,EAAGC,IAAK,GAC7ClC,KAAKgvB,iBAAmB,EAC1B,CA9BWhW,kBAAyB,OAAOhZ,KAAK6uB,YAAc,CAmCvDnU,mBACL1a,KAAK6uB,cAAe,EACpB7uB,KAAK+uB,qBAAqB9sB,MAAQjC,KAAK2uB,UAAU5nB,MAAM7F,OACvDlB,KAAK0c,iBAAiB1X,YAAc,GACpChF,KAAKgvB,iBAAmB,GACxBhvB,KAAK0c,iBAAiBtc,UAAUC,IAAI,SACtC,CAMOsa,kBAAkB1T,GACvBjH,KAAK0c,iBAAiB1X,YAAciC,EAAGma,KACvCphB,KAAK8a,4BACLzV,YAAW,KACTrF,KAAK+uB,qBAAqB7sB,IAAMlC,KAAK2uB,UAAU5nB,MAAM7F,MAAM,GAC1D,EACL,CAMO0Z,iBACL5a,KAAKivB,sBAAqB,EAC5B,CAOO7L,QAAQnc,GACb,GAAIjH,KAAK6uB,cAAgB7uB,KAAK8uB,sBAAuB,CACnD,GAAmB,MAAf7nB,EAAGgd,QAEL,OAAO,EAET,GAAmB,KAAfhd,EAAGgd,SAAiC,KAAfhd,EAAGgd,SAAiC,KAAfhd,EAAGgd,QAE/C,OAAO,EAITjkB,KAAKivB,sBAAqB,E,CAG5B,OAAmB,MAAfhoB,EAAGgd,UAGLjkB,KAAKkvB,6BACE,EAIX,CAUQD,qBAAqBE,GAI3B,GAHAnvB,KAAK0c,iBAAiBtc,UAAUkP,OAAO,UACvCtP,KAAK6uB,cAAe,EAEfM,EAKE,CAGL,MAAMC,EAA6B,CACjCntB,MAAOjC,KAAK+uB,qBAAqB9sB,MACjCC,IAAKlC,KAAK+uB,qBAAqB7sB,KAWjClC,KAAK8uB,uBAAwB,EAC7BzpB,YAAW,KAET,GAAIrF,KAAK8uB,sBAAuB,CAE9B,IAAIO,EADJrvB,KAAK8uB,uBAAwB,EAI7BM,EAA2BntB,OAASjC,KAAKgvB,iBAAiB9tB,OAGxDmuB,EAFErvB,KAAK6uB,aAEC7uB,KAAK2uB,UAAU5nB,MAAMuoB,UAAUF,EAA2BntB,MAAOmtB,EAA2BltB,KAK5FlC,KAAK2uB,UAAU5nB,MAAMuoB,UAAUF,EAA2BntB,OAEhEotB,EAAMnuB,OAAS,GACjBlB,KAAK4uB,aAAa9nB,iBAAiBuoB,GAAO,E,IAG7C,E,KA3CoB,CAEvBrvB,KAAK8uB,uBAAwB,EAC7B,MAAMO,EAAQrvB,KAAK2uB,UAAU5nB,MAAMuoB,UAAUtvB,KAAK+uB,qBAAqB9sB,MAAOjC,KAAK+uB,qBAAqB7sB,KACxGlC,KAAK4uB,aAAa9nB,iBAAiBuoB,GAAO,E,CAyC9C,CAQQH,4BACN,MAAMK,EAAWvvB,KAAK2uB,UAAU5nB,MAChC1B,YAAW,KAET,IAAKrF,KAAK6uB,aAAc,CACtB,MAAMW,EAAWxvB,KAAK2uB,UAAU5nB,MAE1BshB,EAAOmH,EAASjpB,QAAQgpB,EAAU,IAExCvvB,KAAKgvB,iBAAmB3G,EAEpBmH,EAAStuB,OAASquB,EAASruB,OAC7BlB,KAAK4uB,aAAa9nB,iBAAiBuhB,GAAM,GAChCmH,EAAStuB,OAASquB,EAASruB,OACpClB,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGiY,OAAO,GACtCD,EAAStuB,SAAWquB,EAASruB,QAAYsuB,IAAaD,GAChEvvB,KAAK4uB,aAAa9nB,iBAAiB0oB,GAAU,E,IAIhD,EACL,CAQO1U,0BAA0B4U,GAC/B,GAAK1vB,KAAK6uB,aAAV,CAIA,GAAI7uB,KAAKyJ,eAAe5F,OAAOiV,mBAAoB,CACjD,MAAMM,EAAUpG,KAAKC,IAAIjT,KAAKyJ,eAAe5F,OAAO8H,EAAG3L,KAAKyJ,eAAe8D,KAAO,GAE5E8L,EAAarZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OACrDqT,EAAYxZ,KAAKyJ,eAAe5F,OAAO+H,EAAI5L,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OACnFsT,EAAaL,EAAUpZ,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MAErEzH,KAAK0c,iBAAiBtW,MAAMiB,KAAOoS,EAAa,KAChDzZ,KAAK0c,iBAAiBtW,MAAMmB,IAAMiS,EAAY,KAC9CxZ,KAAK0c,iBAAiBtW,MAAMD,OAASkT,EAAa,KAClDrZ,KAAK0c,iBAAiBtW,MAAMsT,WAAaL,EAAa,KACtDrZ,KAAK0c,iBAAiBtW,MAAMupB,WAAa3vB,KAAKoQ,gBAAgBM,WAAWif,WACzE3vB,KAAK0c,iBAAiBtW,MAAMwpB,SAAW5vB,KAAKoQ,gBAAgBM,WAAWkf,SAAW,KAGlF,MAAMC,EAAwB7vB,KAAK0c,iBAAiBtV,wBACpDpH,KAAK2uB,UAAUvoB,MAAMiB,KAAOoS,EAAa,KACzCzZ,KAAK2uB,UAAUvoB,MAAMmB,IAAMiS,EAAY,KAEvCxZ,KAAK2uB,UAAUvoB,MAAMqB,MAAQuL,KAAKG,IAAI0c,EAAsBpoB,MAAO,GAAK,KACxEzH,KAAK2uB,UAAUvoB,MAAMD,OAAS6M,KAAKG,IAAI0c,EAAsB1pB,OAAQ,GAAK,KAC1EnG,KAAK2uB,UAAUvoB,MAAMsT,WAAamW,EAAsB1pB,OAAS,I,CAG9DupB,GACHrqB,YAAW,IAAMrF,KAAK8a,2BAA0B,IAAO,E,CAE3D,GAjOW6B,EAAiB,GA2BzB,MAAA1M,gBACA,MAAAgC,iBACA,MAAA6d,cACA,MAAAtT,iBA9BQG,GAAA,EAAAA,kBAAAA,C,eCdb,SAAgBoT,EAA2B5sB,EAA0C8G,EAA2CvI,GAC9H,MAAMsuB,EAAOtuB,EAAQ0F,wBACf6oB,EAAe9sB,EAAO+sB,iBAAiBxuB,GACvCyuB,EAAcC,SAASH,EAAaI,iBAAiB,iBACrDC,EAAaF,SAASH,EAAaI,iBAAiB,gBAC1D,MAAO,CACLpmB,EAAM3C,QAAU0oB,EAAK3oB,KAAO8oB,EAC5BlmB,EAAMzC,QAAUwoB,EAAKzoB,IAAM+oB,EAE/B,C,iGATA,+BA2BA,qBAA0BntB,EAA0C8G,EAAgDvI,EAAsB6uB,EAAkB1d,EAAkB2d,EAA2BC,EAAsBC,EAAuBC,GAEpP,IAAKH,EACH,OAGF,MAAM7gB,EAASogB,EAA2B5sB,EAAQ8G,EAAOvI,GACzD,OAAKiO,GAILA,EAAO,GAAKqD,KAAKgb,MAAMre,EAAO,IAAMghB,EAAcF,EAAe,EAAI,IAAMA,GAC3E9gB,EAAO,GAAKqD,KAAKgb,KAAKre,EAAO,GAAK+gB,GAKlC/gB,EAAO,GAAKqD,KAAKC,IAAID,KAAKG,IAAIxD,EAAO,GAAI,GAAI4gB,GAAYI,EAAc,EAAI,IAC3EhhB,EAAO,GAAKqD,KAAKC,IAAID,KAAKG,IAAIxD,EAAO,GAAI,GAAIkD,GAEtClD,QAbP,CAcF,C,8FChDA,gBAyEA,SAASihB,EAAmBC,EAAgBC,EAAiBC,EAA+BC,GAC1F,MAAM/iB,EAAW4iB,EAASI,EAAkBJ,EAAQE,GAC9C7iB,EAAS4iB,EAAUG,EAAkBH,EAASC,GAE9CG,EAAale,KAAKqO,IAAIpT,EAAWC,GAiCzC,SAA0B2iB,EAAgBC,EAAiBC,GACzD,IAAII,EAAc,EAClB,MAAMljB,EAAW4iB,EAASI,EAAkBJ,EAAQE,GAC9C7iB,EAAS4iB,EAAUG,EAAkBH,EAASC,GAEpD,IAAK,IAAI1xB,EAAI,EAAGA,EAAI2T,KAAKqO,IAAIpT,EAAWC,GAAS7O,IAAK,CACpD,MAAM+xB,EAAmD,MAAvCC,EAAkBR,EAAQC,IAA6B,EAAI,EACvEvgB,EAAOwgB,EAAcltB,OAAOC,MAAM8E,IAAIqF,EAAYmjB,EAAY/xB,IAChEkR,aAAI,EAAJA,EAAM+gB,YACRH,G,CAIJ,OAAOA,CACT,CA/CmDI,CAAiBV,EAAQC,EAASC,GAEnF,OAAOS,EAAON,EAAYhQ,EAASmQ,EAAkBR,EAAQC,GAAUE,GACzE,CAkDA,SAASC,EAAkBQ,EAAoBV,GAC7C,IAAIle,EAAW,EACXtC,EAAOwgB,EAAcltB,OAAOC,MAAM8E,IAAI6oB,GACtCC,EAAYnhB,aAAI,EAAJA,EAAM+gB,UAEtB,KAAOI,GAAaD,GAAc,GAAKA,EAAaV,EAAcrwB,MAChEmS,IACAtC,EAAOwgB,EAAcltB,OAAOC,MAAM8E,MAAM6oB,GACxCC,EAAYnhB,aAAI,EAAJA,EAAM+gB,UAGpB,OAAOze,CACT,CA6BA,SAASwe,EAAkBR,EAAgBC,GACzC,OAAOD,EAASC,EAAU,IAAe,GAC3C,CAWA,SAAS3X,EACPwY,EACA1jB,EACA2jB,EACA1jB,EACA2jB,EACAd,GAEA,IAAIe,EAAaH,EACbF,EAAaxjB,EACb8jB,EAAY,GAEhB,KAAOD,IAAeF,GAAUH,IAAevjB,GAC7C4jB,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAaf,EAAcxjB,KAAO,GAC/CwkB,GAAahB,EAAcltB,OAAO8B,4BAChC8rB,GAAY,EAAOE,EAAUG,GAE/BA,EAAa,EACbH,EAAW,EACXF,MACUI,GAAWC,EAAa,IAClCC,GAAahB,EAAcltB,OAAO8B,4BAChC8rB,GAAY,EAAO,EAAGE,EAAW,GAEnCG,EAAaf,EAAcxjB,KAAO,EAClCokB,EAAWG,EACXL,KAIJ,OAAOM,EAAYhB,EAAcltB,OAAO8B,4BACtC8rB,GAAY,EAAOE,EAAUG,EAEjC,CAMA,SAAS5Q,EAASkQ,EAAsBJ,GACtC,MAAMgB,EAAOhB,EAAoB,IAAM,IACvC,OAAO,EAAAxZ,GAAGC,IAAMua,EAAMZ,CACxB,CAQA,SAASI,EAAOS,EAAeC,GAC7BD,EAAQjf,KAAKuW,MAAM0I,GACnB,IAAIE,EAAM,GACV,IAAK,IAAI9yB,EAAI,EAAGA,EAAI4yB,EAAO5yB,IACzB8yB,GAAOD,EAET,OAAOC,CACT,CApOA,8BAAmCC,EAAiBtB,EAAiBC,EAA+BC,GAClG,MAAM5jB,EAAS2jB,EAAcltB,OAAO8H,EAC9BklB,EAASE,EAAcltB,OAAO+H,EAGpC,IAAKmlB,EAAcltB,OAAOod,cACxB,OAsCJ,SAA0B7T,EAAgByjB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GACzH,OAAqF,IAAjFJ,EAAmBC,EAAQC,EAASC,EAAeC,GAAmB9vB,OACjE,GAEFswB,EAAOrY,EACZ/L,EAAQyjB,EAAQzjB,EAChByjB,EAASI,EAAkBJ,EAAQE,IAAgB,EAAOA,GAC1D7vB,OAAQggB,EAAS,IAAgB8P,GACrC,CA9CWqB,CAAiBjlB,EAAQyjB,EAAQuB,EAAStB,EAASC,EAAeC,GACvEJ,EAAmBC,EAAQC,EAASC,EAAeC,GA+DzD,SAA4B5jB,EAAgByjB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC3H,IAAI/iB,EAEFA,EADE2iB,EAAmBC,EAAQC,EAASC,EAAeC,GAAmB9vB,OAAS,EACtE4vB,EAAUG,EAAkBH,EAASC,GAErCF,EAGb,MAAM3iB,EAAS4iB,EACTM,EAyDR,SAA6BhkB,EAAgByjB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC5H,IAAI/iB,EAOJ,OALEA,EADE2iB,EAAmBwB,EAAStB,EAASC,EAAeC,GAAmB9vB,OAAS,EACvE4vB,EAAUG,EAAkBH,EAASC,GAErCF,EAGRzjB,EAASglB,GACZnkB,GAAY6iB,GACX1jB,GAAUglB,GACXnkB,EAAW6iB,EACJ,IAEF,GACT,CAxEoBwB,CAAoBllB,EAAQyjB,EAAQuB,EAAStB,EAASC,EAAeC,GAEvF,OAAOQ,EAAOrY,EACZ/L,EAAQa,EAAUmkB,EAASlkB,EACb,MAAdkjB,EAA+BL,GAC/B7vB,OAAQggB,EAASkQ,EAAWJ,GAChC,CA7EMuB,CAAmBnlB,EAAQyjB,EAAQuB,EAAStB,EAASC,EAAeC,GAIxE,IAAII,EACJ,GAAIP,IAAWC,EAEb,OADAM,EAAYhkB,EAASglB,EAAU,IAAiB,IACzCZ,EAAOxe,KAAKqO,IAAIjU,EAASglB,GAAUlR,EAASkQ,EAAWJ,IAEhEI,EAAYP,EAASC,EAAU,IAAiB,IAChD,MAAM0B,EAAgBxf,KAAKqO,IAAIwP,EAASC,GAIxC,OAAOU,EAaT,SAAwBiB,EAAe1B,GACrC,OAAOA,EAAcxjB,KAAOklB,CAC9B,CAlBsBC,CAAe7B,EAASC,EAAUsB,EAAUhlB,EAAQ2jB,IACrEyB,EAAgB,GAAKzB,EAAcxjB,KAAO,IACtBsjB,EAASC,EAAU1jB,EAASglB,GAQpC,GAPYlR,EAASkQ,EAAWJ,GACjD,C,kgBCtCA,gBACA,UACA,UACA,UAEA,UAEA,UACA,UACA,SACA,UAEM2B,EAAwB,4BAIxBC,EAAc,cAGpB,IAAIC,EAAiB,EAOR5T,EAAb,cAAiC,EAAAzf,WAc/BC,YACmBwL,EACA6e,EACAtO,EACAsX,EACMC,EACYhX,EACD3L,EACD3G,EACKkS,EACvBwK,GAEfvmB,QAXiB,KAAAqL,SAAAA,EACA,KAAA6e,eAAAA,EACA,KAAAtO,iBAAAA,EACA,KAAAsX,YAAAA,EAEkB,KAAA/W,iBAAAA,EACD,KAAA3L,gBAAAA,EACD,KAAA3G,eAAAA,EACK,KAAAkS,oBAAAA,EArBhC,KAAAqX,eAAyBH,IAKzB,KAAApyB,aAA8B,GAKtB,KAAAqd,gBAAkB9d,KAAK6B,SAAS,IAAI,EAAAkI,cAAqCE,MAevFjK,KAAKO,cAAgBL,SAASC,cAAc,OAC5CH,KAAKO,cAAcH,UAAUC,IAzCL,cA0CxBL,KAAKO,cAAc6F,MAAMsT,WAAa,SACtC1Z,KAAKO,cAAcC,aAAa,cAAe,QAC/CR,KAAKizB,oBAAoBjzB,KAAKyJ,eAAe8D,KAAMvN,KAAKyJ,eAAe/I,MACvEV,KAAKkzB,oBAAsBhzB,SAASC,cAAc,OAClDH,KAAKkzB,oBAAoB9yB,UAAUC,IA1Cf,mBA2CpBL,KAAKkzB,oBAAoB1yB,aAAa,cAAe,QAErDR,KAAKgG,YAAa,IAAAmtB,0BAClBnzB,KAAKozB,oBACLpzB,KAAK6B,SAAS7B,KAAKoQ,gBAAgBijB,gBAAe,IAAMrzB,KAAKszB,2BAE7DtzB,KAAK6B,SAASskB,EAAasB,gBAAe3mB,GAAKd,KAAKuzB,WAAWzyB,MAC/Dd,KAAKuzB,WAAWpN,EAAa7O,QAE7BtX,KAAKwzB,YAAcT,EAAqBrd,eAAe,EAAA+d,sBAAuBvzB,UAE9EF,KAAKiL,SAAS7K,UAAUC,IAAIsyB,EAAwB3yB,KAAKgzB,gBACzDhzB,KAAK8pB,eAAelpB,YAAYZ,KAAKO,eACrCP,KAAK8pB,eAAelpB,YAAYZ,KAAKkzB,qBAErClzB,KAAK6B,SAAS7B,KAAK8yB,YAAY9oB,qBAAoBlJ,GAAKd,KAAK0zB,iBAAiB5yB,MAC9Ed,KAAK6B,SAAS7B,KAAK8yB,YAAY3oB,qBAAoBrJ,GAAKd,KAAK2zB,iBAAiB7yB,MAE9Ed,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKiL,SAAS7K,UAAUkP,OAAOqjB,EAAwB3yB,KAAKgzB,iBAI5D,IAAAzvB,yBAAwBvD,KAAKO,cAAeP,KAAKkzB,oBAAqBlzB,KAAK4zB,mBAAoB5zB,KAAK6zB,wBAAwB,IAEhI,CAEQT,oBACN,MAAMrL,EAAM/nB,KAAK2b,oBAAoBoM,IACrC/nB,KAAKgG,WAAW8hB,OAAOzlB,KAAKoF,MAAQzH,KAAK+b,iBAAiBtU,MAAQsgB,EAClE/nB,KAAKgG,WAAW8hB,OAAOzlB,KAAK8D,OAAS6M,KAAKgb,KAAKhuB,KAAK+b,iBAAiB5V,OAAS4hB,GAC9E/nB,KAAKgG,WAAW8hB,OAAO5hB,KAAKuB,MAAQzH,KAAKgG,WAAW8hB,OAAOzlB,KAAKoF,MAAQuL,KAAKkV,MAAMloB,KAAKoQ,gBAAgBM,WAAWojB,eACnH9zB,KAAKgG,WAAW8hB,OAAO5hB,KAAKC,OAAS6M,KAAKuW,MAAMvpB,KAAKgG,WAAW8hB,OAAOzlB,KAAK8D,OAASnG,KAAKoQ,gBAAgBM,WAAWgJ,YACrH1Z,KAAKgG,WAAW8hB,OAAOzlB,KAAKgF,KAAO,EACnCrH,KAAKgG,WAAW8hB,OAAOzlB,KAAKkF,IAAM,EAClCvH,KAAKgG,WAAW8hB,OAAO7C,OAAOxd,MAAQzH,KAAKgG,WAAW8hB,OAAO5hB,KAAKuB,MAAQzH,KAAKyJ,eAAe8D,KAC9FvN,KAAKgG,WAAW8hB,OAAO7C,OAAO9e,OAASnG,KAAKgG,WAAW8hB,OAAO5hB,KAAKC,OAASnG,KAAKyJ,eAAe/I,KAChGV,KAAKgG,WAAWC,IAAIgf,OAAOxd,MAAQuL,KAAKkV,MAAMloB,KAAKgG,WAAW8hB,OAAO7C,OAAOxd,MAAQsgB,GACpF/nB,KAAKgG,WAAWC,IAAIgf,OAAO9e,OAAS6M,KAAKkV,MAAMloB,KAAKgG,WAAW8hB,OAAO7C,OAAO9e,OAAS4hB,GACtF/nB,KAAKgG,WAAWC,IAAIC,KAAKuB,MAAQzH,KAAKgG,WAAWC,IAAIgf,OAAOxd,MAAQzH,KAAKyJ,eAAe8D,KACxFvN,KAAKgG,WAAWC,IAAIC,KAAKC,OAASnG,KAAKgG,WAAWC,IAAIgf,OAAO9e,OAASnG,KAAKyJ,eAAe/I,KAE1F,IAAK,MAAMgB,KAAW1B,KAAKS,aACzBiB,EAAQ0E,MAAMqB,MAAQ,GAAGzH,KAAKgG,WAAWC,IAAIgf,OAAOxd,UACpD/F,EAAQ0E,MAAMD,OAAS,GAAGnG,KAAKgG,WAAWC,IAAIC,KAAKC,WACnDzE,EAAQ0E,MAAMsT,WAAa,GAAG1Z,KAAKgG,WAAWC,IAAIC,KAAKC,WAEvDzE,EAAQ0E,MAAM2tB,SAAW,SAGtB/zB,KAAK6zB,0BACR7zB,KAAK6zB,wBAA0B3zB,SAASC,cAAc,SACtDH,KAAK8pB,eAAelpB,YAAYZ,KAAK6zB,0BAGvC,MAAMG,EACJ,GAAGh0B,KAAKi0B,yGAIGj0B,KAAKgG,WAAWC,IAAIC,KAAKuB,WAGtCzH,KAAK6zB,wBAAwB7uB,YAAcgvB,EAE3Ch0B,KAAKkzB,oBAAoB9sB,MAAMD,OAASnG,KAAKwb,iBAAiBpV,MAAMD,OACpEnG,KAAK8pB,eAAe1jB,MAAMqB,MAAQ,GAAGzH,KAAKgG,WAAWC,IAAIgf,OAAOxd,UAChEzH,KAAK8pB,eAAe1jB,MAAMD,OAAS,GAAGnG,KAAKgG,WAAWC,IAAIgf,OAAO9e,UACnE,CAEQotB,WAAWjc,GACZtX,KAAK4zB,qBACR5zB,KAAK4zB,mBAAqB1zB,SAASC,cAAc,SACjDH,KAAK8pB,eAAelpB,YAAYZ,KAAK4zB,qBAIvC,IAAII,EACF,GAAGh0B,KAAKi0B,0CACG3c,EAAO4c,WAAWjuB,qBACZjG,KAAKoQ,gBAAgBM,WAAWif,0BAClC3vB,KAAKoQ,gBAAgBM,WAAWkf,eAGjDoE,GACE,GAAGh0B,KAAKi0B,+BAA+B,EAAAE,8BACtBn0B,KAAKoQ,gBAAgBM,WAAW0jB,eAE9Cp0B,KAAKi0B,0BAA0B,EAAAE,6BACjBn0B,KAAKoQ,gBAAgBM,WAAW2jB,mBAE9Cr0B,KAAKi0B,0BAA0B,EAAAK,sCAIpCN,GACE,+BAAsCh0B,KAAKgzB,eAA3C,iCAKFgB,GACE,0BAAiCh0B,KAAKgzB,eAAtC,UAEA,uBAAuB1b,EAAOid,OAAOtuB,OACrC,YAAYqR,EAAOkd,aAAavuB,eAGhC,uBAAuBqR,EAAOkd,aAAavuB,OAC3C,YAAYqR,EAAOid,OAAOtuB,UAI5B+tB,GACE,GAAGh0B,KAAKi0B,oDAAmE,EAAAQ,gBAAgB,EAAAC,iDACpEpd,EAAOid,OAAOtuB,8BAGlCjG,KAAKi0B,8CAA6D,EAAAQ,gBAAgB,EAAAE,2BAA2B,EAAAD,2DACzE10B,KAAKgzB,eAL5C,0BAOA,GAAGhzB,KAAKi0B,8CAA6D,EAAAQ,gBAAgB,EAAAE,sBAAsB,EAAAD,qDACzE10B,KAAKgzB,eARvC,0BAUA,GAAGhzB,KAAKi0B,8CAA6D,EAAAQ,gBAAgB,EAAAC,6BACrF,sBAAsBpd,EAAOid,OAAOtuB,OACpC,WAAWqR,EAAOkd,aAAavuB,QAE/B,GAAGjG,KAAKi0B,kCAA8C,EAAAQ,gBAAgB,EAAAG,2BACtE,gBAAgB50B,KAAKoQ,gBAAgBM,WAAWmkB,qBAAqBvd,EAAOid,OAAOtuB,cAEnF,GAAGjG,KAAKi0B,kCAA8C,EAAAQ,gBAAgB,EAAAK,iCACtE,yBAAyBxd,EAAOid,OAAOtuB,cAGzC+tB,GACE,GAAGh0B,KAAKi0B,+GAOLj0B,KAAKi0B,wFAEc3c,EAAOyd,0BAA0B9uB,QAEpDjG,KAAKi0B,kFAEc3c,EAAO0d,kCAAkC/uB,QAGjE,IAAK,MAAO5G,EAAG41B,KAAM3d,EAAOC,KAAK/K,UAC/BwnB,GACE,GAAGh0B,KAAKi0B,+BAAwC50B,cAAc41B,EAAEhvB,SAC7DjG,KAAKi0B,+BAAwC50B,yBAAyB41B,EAAEhvB,SAE/E+tB,GACE,GAAGh0B,KAAKi0B,+BAAwC,EAAAiB,mCAAmC,EAAA9d,MAAM+d,OAAO7d,EAAOqQ,YAAY1hB,SAChHjG,KAAKi0B,+BAAwC,EAAAiB,8CAA8C5d,EAAO4c,WAAWjuB,SAElHjG,KAAK4zB,mBAAmB5uB,YAAcgvB,CACxC,CAEOoB,+BACLp1B,KAAKozB,mBACP,CAEQH,oBAAoB1lB,EAAc7M,GAExC,IAAK,IAAIrB,EAAIW,KAAKS,aAAaS,OAAQ7B,GAAKqB,EAAMrB,IAAK,CACrD,MAAMwgB,EAAM3f,SAASC,cAAc,OACnCH,KAAKO,cAAcK,YAAYif,GAC/B7f,KAAKS,aAAa+D,KAAKqb,E,CAGzB,KAAO7f,KAAKS,aAAaS,OAASR,GAChCV,KAAKO,cAAc4D,YAAYnE,KAAKS,aAAayD,MAErD,CAEOqZ,aAAahQ,EAAc7M,GAChCV,KAAKizB,oBAAoB1lB,EAAM7M,GAC/BV,KAAKozB,mBACP,CAEOiC,wBACLr1B,KAAKozB,mBACP,CAEO5V,aACLxd,KAAKO,cAAcH,UAAUkP,OAAOsjB,EACtC,CAEOnV,cACLzd,KAAKO,cAAcH,UAAUC,IAAIuyB,EACnC,CAEO7U,uBAAuB9b,EAAqCC,EAAmC8b,GAEpG,KAAOhe,KAAKkzB,oBAAoBruB,SAAS3D,QACvClB,KAAKkzB,oBAAoB/uB,YAAYnE,KAAKkzB,oBAAoBruB,SAAS,IAOzE,GAJA7E,KAAKwzB,YAAYzV,uBAAuB9b,EAAOC,EAAK8b,GACpDhe,KAAKs1B,WAAW,EAAGt1B,KAAKyJ,eAAe/I,KAAO,IAGzCuB,IAAUC,EACb,OAIF,MAAMqzB,EAAmBtzB,EAAM,GAAKjC,KAAKyJ,eAAe5F,OAAO+B,MACzD4vB,EAAiBtzB,EAAI,GAAKlC,KAAKyJ,eAAe5F,OAAO+B,MACrD6vB,EAAyBziB,KAAKG,IAAIoiB,EAAkB,GACpDG,EAAuB1iB,KAAKC,IAAIuiB,EAAgBx1B,KAAKyJ,eAAe/I,KAAO,GAGjF,GAAI+0B,GAA0Bz1B,KAAKyJ,eAAe/I,MAAQg1B,EAAuB,EAC/E,OAIF,MAAMC,EAAmBz1B,SAASqb,yBAElC,GAAIyC,EAAkB,CACpB,MAAM4X,EAAa3zB,EAAM,GAAKC,EAAI,GAClCyzB,EAAiB/0B,YACfZ,KAAK61B,wBAAwBJ,EAAwBG,EAAa1zB,EAAI,GAAKD,EAAM,GAAI2zB,EAAa3zB,EAAM,GAAKC,EAAI,GAAIwzB,EAAuBD,EAAyB,G,KAElK,CAEL,MAAM9D,EAAW4D,IAAqBE,EAAyBxzB,EAAM,GAAK,EACpE2vB,EAAS6D,IAA2BD,EAAiBtzB,EAAI,GAAKlC,KAAKyJ,eAAe8D,KACxFooB,EAAiB/0B,YAAYZ,KAAK61B,wBAAwBJ,EAAwB9D,EAAUC,IAE5F,MAAMkE,EAAkBJ,EAAuBD,EAAyB,EAGxE,GAFAE,EAAiB/0B,YAAYZ,KAAK61B,wBAAwBJ,EAAyB,EAAG,EAAGz1B,KAAKyJ,eAAe8D,KAAMuoB,IAE/GL,IAA2BC,EAAsB,CAEnD,MAAM9D,EAAS4D,IAAmBE,EAAuBxzB,EAAI,GAAKlC,KAAKyJ,eAAe8D,KACtFooB,EAAiB/0B,YAAYZ,KAAK61B,wBAAwBH,EAAsB,EAAG9D,G,EAGvF5xB,KAAKkzB,oBAAoBtyB,YAAY+0B,EACvC,CAQQE,wBAAwBhW,EAAakW,EAAkBC,EAAgBnjB,EAAmB,GAChG,MAAMnR,EAAUxB,SAASC,cAAc,OAKvC,OAJAuB,EAAQ0E,MAAMD,OAAY0M,EAAW7S,KAAKgG,WAAWC,IAAIC,KAAKC,OAAvC,KACvBzE,EAAQ0E,MAAMmB,IAASsY,EAAM7f,KAAKgG,WAAWC,IAAIC,KAAKC,OAAlC,KACpBzE,EAAQ0E,MAAMiB,KAAU0uB,EAAW/1B,KAAKgG,WAAWC,IAAIC,KAAKuB,MAAvC,KACrB/F,EAAQ0E,MAAMqB,MAAWzH,KAAKgG,WAAWC,IAAIC,KAAKuB,OAASuuB,EAASD,GAA9C,KACfr0B,CACT,CAEO4b,mBAEP,CAEQgW,wBAENtzB,KAAKozB,mBACP,CAEOrqB,QACL,IAAK,MAAMjI,KAAKd,KAAKS,aAQnBK,EAAEm1B,iBAEN,CAEOX,WAAWrzB,EAAeC,GAC/B,MAAMg0B,EAAkBl2B,KAAKyJ,eAAe5F,OAAOqV,MAAQlZ,KAAKyJ,eAAe5F,OAAO+H,EAChFwN,EAAUpG,KAAKC,IAAIjT,KAAKyJ,eAAe5F,OAAO8H,EAAG3L,KAAKyJ,eAAe8D,KAAO,GAC5E4oB,EAAcn2B,KAAKoQ,gBAAgBM,WAAWylB,YAEpD,IAAK,IAAIvqB,EAAI3J,EAAO2J,GAAK1J,EAAK0J,IAAK,CACjC,MAAMwqB,EAAap2B,KAAKS,aAAamL,GAC/BiU,EAAMjU,EAAI5L,KAAKyJ,eAAe5F,OAAO+B,MACrCF,EAAW1F,KAAKyJ,eAAe5F,OAAOC,MAAM8E,IAAIiX,GAChDwW,EAAcr2B,KAAKoQ,gBAAgBM,WAAW2lB,YACpDD,EAAWH,gBAAgBj2B,KAAKwzB,YAAY8C,UAAU5wB,EAAWma,EAAKA,IAAQqW,EAAiBG,EAAajd,EAAS+c,EAAan2B,KAAKgG,WAAWC,IAAIC,KAAKuB,MAAOzH,KAAKyJ,eAAe8D,M,CAE1L,CAEY0mB,wBACV,MAAO,IAAItB,IAAwB3yB,KAAKgzB,gBAC1C,CAEQU,iBAAiB5yB,GACvBd,KAAKu2B,kBAAkBz1B,EAAE+O,GAAI/O,EAAEiP,GAAIjP,EAAEgP,GAAIhP,EAAEkP,GAAIlP,EAAEyM,MAAM,EACzD,CAEQomB,iBAAiB7yB,GACvBd,KAAKu2B,kBAAkBz1B,EAAE+O,GAAI/O,EAAEiP,GAAIjP,EAAEgP,GAAIhP,EAAEkP,GAAIlP,EAAEyM,MAAM,EACzD,CAEQgpB,kBAAkB5qB,EAAWoE,EAAYnE,EAAWoE,EAAYzC,EAAcipB,GACpF,KAAO7qB,IAAMoE,GAAMnE,IAAMoE,GAAI,CAC3B,MAAM6P,EAAM7f,KAAKS,aAAamL,GAC9B,IAAKiU,EACH,OAEF,MAAM4W,EAAO5W,EAAIhb,SAAS8G,GACtB8qB,IACFA,EAAKrwB,MAAMswB,eAAiBF,EAAU,YAAc,UAEhD7qB,GAAK4B,IACT5B,EAAI,EACJC,I,CAGN,GAzWWqT,EAAW,GAmBnB,MAAA0X,uBACA,MAAA1a,kBACA,MAAAhK,iBACA,MAAAhC,gBACA,MAAA6L,qBACA,MAAAK,gBAxBQ8C,GAAA,EAAAA,YAAAA,C,mtBCzBb,gBACA,SACA,SACA,UACA,UAEA,UACA,UACA,UACA,UAEa,EAAAkV,WAAa,aACb,EAAAyC,UAAY,YACZ,EAAAtC,aAAe,eACf,EAAAuC,gBAAkB,kBAClB,EAAAC,oBAAsB,sBACtB,EAAArC,aAAe,eACf,EAAAE,mBAAqB,qBACrB,EAAAD,yBAA2B,qBAC3B,EAAAE,uBAAyB,mBACzB,EAAAE,6BAA+B,yBAE5C,IAAarB,EAAb,MAOEh0B,YACmB0b,EACyBiB,EACRhM,EACIuL,EACPiT,EACMjZ,EACLoB,GANf,KAAAoE,UAAAA,EACyB,KAAAiB,wBAAAA,EACR,KAAAhM,gBAAAA,EACI,KAAAuL,oBAAAA,EACP,KAAAiT,aAAAA,EACM,KAAAjZ,mBAAAA,EACL,KAAAoB,cAAAA,EAb1B,KAAAggB,UAAsB,IAAI,EAAApmB,SAI1B,KAAAqmB,mBAA6B,CAWrC,CAEOjZ,uBAAuB9b,EAAqCC,EAAmC8b,GACpGhe,KAAKi3B,gBAAkBh1B,EACvBjC,KAAKk3B,cAAgBh1B,EACrBlC,KAAKg3B,kBAAoBhZ,CAC3B,CAEOsY,UAAU5wB,EAAuBma,EAAasX,EAAsBd,EAAiCjd,EAAiB+c,EAAsB5c,EAAmBhM,GACpK,MAAM+N,EAAWtb,KAAKmb,UAAUI,yBAE1B6b,EAAep3B,KAAKoc,wBAAwBib,oBAAoBxX,GAMtE,IAAIjP,EAAa,EACjB,IAAK,IAAIjF,EAAIqH,KAAKC,IAAIvN,EAASxE,OAAQqM,GAAQ,EAAG5B,GAAK,EAAGA,IACxD,GAAIjG,EAASwL,SAASvF,EAAG3L,KAAK+2B,WAAWO,YAAc,EAAAC,gBAAmBJ,GAAexrB,IAAMyN,EAAU,CACvGxI,EAAajF,EAAI,EACjB,K,CAIJ,MAAM2L,EAAStX,KAAK+W,cAAcO,OAElC,IAAK,IAAI3L,EAAI,EAAGA,EAAIiF,EAAYjF,IAAK,CACnCjG,EAASwL,SAASvF,EAAG3L,KAAK+2B,WAC1B,IAAItvB,EAAQzH,KAAK+2B,UAAUzd,WAG3B,GAAc,IAAV7R,EACF,SAIF,IAAI+vB,GAAW,EACXC,EAAY9rB,EAKZzF,EAAOlG,KAAK+2B,UAChB,GAAIK,EAAal2B,OAAS,GAAKyK,IAAMyrB,EAAa,GAAG,GAAI,CACvDI,GAAW,EACX,MAAMnqB,EAAQ+pB,EAAahzB,QAI3B8B,EAAO,IAAI,EAAAwxB,eACT13B,KAAK+2B,UACLrxB,EAASiyB,mBAAkB,EAAMtqB,EAAM,GAAIA,EAAM,IACjDA,EAAM,GAAKA,EAAM,IAInBoqB,EAAYpqB,EAAM,GAAK,EAGvB5F,EAAQvB,EAAKoT,U,CAGf,MAAMse,EAAc53B,KAAKmb,UAAUhb,cAAc,QAkBjD,GAjBIsH,EAAQ,IACVmwB,EAAYxxB,MAAMqB,MAAW8R,EAAY9R,EAAf,MAGxB+vB,IAGFI,EAAYxxB,MAAM0kB,QAAU,SAKxB1R,GAAWzN,GAAKyN,GAAWqe,IAC7Bre,EAAUzN,KAIT3L,KAAK4uB,aAAaiJ,gBAAkBV,GAAexrB,IAAMyN,EAO5D,OANAwe,EAAYx3B,UAAUC,IAAI,EAAAo0B,cAEtB0B,GACFyB,EAAYx3B,UAAUC,IAAI,EAAAs0B,oBAGpB0B,GACN,IAAK,MACHuB,EAAYx3B,UAAUC,IAAI,EAAAu0B,wBAC1B,MACF,IAAK,YACHgD,EAAYx3B,UAAUC,IAAI,EAAAy0B,8BAC1B,MACF,QACE8C,EAAYx3B,UAAUC,IAAI,EAAAq0B,0BAuBhC,GAlBIxuB,EAAK4xB,UACPF,EAAYx3B,UAAUC,IAAI,EAAA8zB,YAGxBjuB,EAAK6xB,YACPH,EAAYx3B,UAAUC,IAAI,EAAAi0B,cAGxBpuB,EAAK8xB,SACPJ,EAAYx3B,UAAUC,IAAI,EAAAu2B,WAGxB1wB,EAAK+xB,cACPL,EAAY5yB,YAAc,EAAAkzB,qBAE1BN,EAAY5yB,YAAckB,EAAKiyB,YAAc,EAAAD,qBAG3ChyB,EAAKkyB,gBACPR,EAAYx3B,UAAUC,IAAI,GAAG,EAAAw2B,mBAAmB3wB,EAAKkL,SAASinB,kBAC9B,MAA5BT,EAAY5yB,cACd4yB,EAAY5yB,YAAc,MAEvBkB,EAAKoyB,2BACR,GAAIpyB,EAAKqyB,sBACPX,EAAYxxB,MAAMoyB,oBAAsB,OAAO,EAAAC,cAAcphB,WAAWnR,EAAKwyB,qBAAqBC,KAAK,YAClG,CACL,IAAIlwB,EAAKvC,EAAKwyB,oBACV14B,KAAKoQ,gBAAgBM,WAAWkoB,4BAA8B1yB,EAAK4xB,UAAYrvB,EAAK,IACtFA,GAAM,GAERmvB,EAAYxxB,MAAMoyB,oBAAsBlhB,EAAOC,KAAK9O,GAAIxC,G,CAK1DC,EAAK2yB,mBACPjB,EAAYx3B,UAAUC,IAAI,EAAAy2B,qBAG5B,IAAIruB,EAAKvC,EAAK4yB,aACVC,EAAc7yB,EAAK8yB,iBACnBxwB,EAAKtC,EAAK+yB,aACVC,EAAchzB,EAAKizB,iBACvB,MAAMC,IAAclzB,EAAKkzB,YACzB,GAAIA,EAAW,CACb,MAAMC,EAAO5wB,EACbA,EAAKD,EACLA,EAAK6wB,EACL,MAAMC,EAAQP,EACdA,EAAcG,EACdA,EAAcI,C,CAKhB,IAAIC,EACAC,EACAC,GAAQ,EACZz5B,KAAK2V,mBAAmB+jB,wBAAwB/tB,EAAGkU,OAAKvV,GAAWqvB,IACzC,QAApBA,EAAEtwB,QAAQuwB,OAAmBH,IAG7BE,EAAEE,qBACJX,EAAc,SACd1wB,EAAKmxB,EAAEE,mBAAmB/hB,MAAQ,EAAI,SACtCyhB,EAAaI,EAAEE,oBAEbF,EAAEG,qBACJf,EAAc,SACdtwB,EAAKkxB,EAAEG,mBAAmBhiB,MAAQ,EAAI,SACtC0hB,EAAaG,EAAEG,oBAEjBL,EAA4B,QAApBE,EAAEtwB,QAAQuwB,MAAe,IAInC,MAAMG,EAAgB/5B,KAAKg6B,mBAAmBruB,EAAGkU,GAsBjD,IAAIoa,EACJ,OAtBKR,GACCniB,EAAO4iB,qBAAuBH,IAChChB,EAAc,SACdtwB,EAAK6O,EAAO4iB,oBAAoBpiB,MAAQ,EAAI,SAC5C0hB,EAAaliB,EAAO4iB,qBAMpBH,IACFR,EAAav5B,KAAK2b,oBAAoBwe,UAAY7iB,EAAOyd,0BAA4Bzd,EAAO0d,kCAC5FyE,GAAQ,GAINA,GACF7B,EAAYx3B,UAAUC,IAAI,wBAKpB64B,GACN,KAAK,SACL,KAAK,SACHe,EAAa3iB,EAAOC,KAAK/O,GACzBovB,EAAYx3B,UAAUC,IAAI,YAAYmI,KACtC,MACF,KAAK,SACHyxB,EAAa,EAAAniB,KAAKC,QAAQvP,GAAM,GAAIA,GAAM,EAAI,IAAW,IAALA,GACpDxI,KAAKo6B,UAAUxC,EAAa,qBAAqByC,GAAU7xB,IAAO,GAAG/C,SAAS,IAAK,IAAK,MACxF,MAEF,QACM2zB,GACFa,EAAa3iB,EAAO4c,WACpB0D,EAAYx3B,UAAUC,IAAI,YAAY,EAAA60B,2BAEtC+E,EAAa3iB,EAAOqQ,WAY1B,OAPK4R,GACCrzB,EAAK8xB,UACPuB,EAAa,EAAAniB,MAAMkjB,gBAAgBL,EAAY,KAK3ClB,GACN,KAAK,SACL,KAAK,SACC7yB,EAAK4xB,UAAYrvB,EAAK,GAAKzI,KAAKoQ,gBAAgBM,WAAWkoB,6BAC7DnwB,GAAM,GAEHzI,KAAKu6B,sBAAsB3C,EAAaqC,EAAY3iB,EAAOC,KAAK9O,GAAKvC,EAAMqzB,OAAYjvB,IAC1FstB,EAAYx3B,UAAUC,IAAI,YAAYoI,KAExC,MACF,KAAK,SACH,MAAM2O,EAAQ,EAAAU,KAAKC,QAChBtP,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAb,GAEGzI,KAAKu6B,sBAAsB3C,EAAaqC,EAAY7iB,EAAOlR,EAAMqzB,EAAYC,IAChFx5B,KAAKo6B,UAAUxC,EAAa,UAAUyC,EAAS5xB,EAAGhD,SAAS,IAAK,IAAK,MAEvE,MAEF,QACOzF,KAAKu6B,sBAAsB3C,EAAaqC,EAAY3iB,EAAO4c,WAAYhuB,EAAMqzB,OAAYjvB,IACxF8uB,GACFxB,EAAYx3B,UAAUC,IAAI,YAAY,EAAA60B,0BAK9C5Z,EAAS1a,YAAYg3B,GAErBjsB,EAAI8rB,C,CAEN,OAAOnc,CACT,CAEQif,sBAAsB74B,EAAsB8G,EAAYC,EAAYvC,EAAiBqzB,EAAgCC,GAC3H,GAA6D,IAAzDx5B,KAAKoQ,gBAAgBM,WAAW8pB,uBAA8B,IAAAC,iCAAgCv0B,EAAKoxB,WACrG,OAAO,EAIT,IAAIoD,EAWJ,OAVKnB,GAAeC,IAClBkB,EAAgB16B,KAAK+W,cAAcO,OAAOqjB,cAAc7xB,SAASN,EAAGsP,KAAMrP,EAAGqP,YAIzDxN,IAAlBowB,IACFA,EAAgB,EAAAtjB,MAAMwjB,oBAAoBrB,GAAc/wB,EAAIgxB,GAAc/wB,EAAIzI,KAAKoQ,gBAAgBM,WAAW8pB,sBAC9Gx6B,KAAK+W,cAAcO,OAAOqjB,cAAc9xB,UAAU0wB,GAAc/wB,GAAIsP,MAAO0hB,GAAc/wB,GAAIqP,KAAM4iB,QAAAA,EAAiB,SAGlHA,IACF16B,KAAKo6B,UAAU14B,EAAS,SAASg5B,EAAcz0B,QACxC,EAIX,CAEQm0B,UAAU14B,EAAsB0E,GACtC1E,EAAQlB,aAAa,QAAS,GAAGkB,EAAQkC,aAAa,UAAY,KAAKwC,KACzE,CAEQ4zB,mBAAmBruB,EAAWC,GACpC,MAAM3J,EAAQjC,KAAKi3B,gBACb/0B,EAAMlC,KAAKk3B,cACjB,SAAKj1B,IAAUC,KAGXlC,KAAKg3B,kBACH/0B,EAAM,IAAMC,EAAI,GACXyJ,GAAK1J,EAAM,IAAM2J,GAAK3J,EAAM,IACjC0J,EAAIzJ,EAAI,IAAM0J,GAAK1J,EAAI,GAEpByJ,EAAI1J,EAAM,IAAM2J,GAAK3J,EAAM,IAChC0J,GAAKzJ,EAAI,IAAM0J,GAAK1J,EAAI,GAEpB0J,EAAI3J,EAAM,IAAM2J,EAAI1J,EAAI,IAC3BD,EAAM,KAAOC,EAAI,IAAM0J,IAAM3J,EAAM,IAAM0J,GAAK1J,EAAM,IAAM0J,EAAIzJ,EAAI,IAClED,EAAM,GAAKC,EAAI,IAAM0J,IAAM1J,EAAI,IAAMyJ,EAAIzJ,EAAI,IAC7CD,EAAM,GAAKC,EAAI,IAAM0J,IAAM3J,EAAM,IAAM0J,GAAK1J,EAAM,GACzD,GAGF,SAASo4B,EAAS/zB,EAAcu0B,EAAiB35B,GAC/C,KAAOoF,EAAKpF,OAASA,GACnBoF,EAAOu0B,EAAUv0B,EAEnB,OAAOA,CACT,CAhVamtB,EAAqB,GAS7B,MAAAnX,yBACA,MAAArK,iBACA,MAAA6J,qBACA,MAAAgU,cACA,MAAAha,oBACA,MAAAqG,gBAdQsX,GAAA,EAAAA,sBAAAA,C,gICvBb,gBAEa,EAAAyB,uBAAyB,IAEzB,EAAA4F,YAAc,GAId,EAAAC,cAAoC,EAAA7gB,WAAa,EAAA8gB,aAAe,SAAW,a,eCCxF,SAAgBC,EAAiBC,GAI/B,OAAO,OAAUA,GAAaA,GAAa,KAC7C,C,kLAZA,wBAAgCn0B,GAC9B,IAAKA,EACH,MAAM,IAAIpF,MAAM,2BAElB,OAAOoF,CACT,EAEA,qBAOA,sCAA2Cm0B,GACzC,OAAO,OAAUA,GAAaA,GAAa,KAC7C,EAMA,2CAAgDA,GAC9C,OAAOD,EAAiBC,IAL1B,SAA2BA,GACzB,OAAO,MAAUA,GAAaA,GAAa,IAC7C,CAGwCC,CAAkBD,EAC1D,EAEA,oCACE,MAAO,CACLj1B,IAAK,CACHgf,OAiBG,CACLxd,MAAO,EACPtB,OAAQ,GAlBND,KAgBG,CACLuB,MAAO,EACPtB,OAAQ,IAhBR2hB,OAAQ,CACN7C,OAaG,CACLxd,MAAO,EACPtB,OAAQ,GAdND,KAYG,CACLuB,MAAO,EACPtB,OAAQ,GAbN9D,KAAM,CACJoF,MAAO,EACPtB,OAAQ,EACRkB,KAAM,EACNE,IAAK,IAIb,C,uFCvCA,uBAuBE9H,YACUgK,GAAA,KAAAA,eAAAA,EApBH,KAAA2xB,mBAA6B,EAO7B,KAAAC,qBAA+B,CAetC,CAKOtY,iBACL/iB,KAAK6iB,oBAAiBvY,EACtBtK,KAAK8iB,kBAAexY,EACpBtK,KAAKo7B,mBAAoB,EACzBp7B,KAAKq7B,qBAAuB,CAC9B,CAKWC,0BACT,OAAIt7B,KAAKo7B,kBACA,CAAC,EAAG,GAGRp7B,KAAK8iB,cAAiB9iB,KAAK6iB,gBAIzB7iB,KAAKu7B,6BAA+Bv7B,KAAK8iB,aAHvC9iB,KAAK6iB,cAIhB,CAMW2Y,wBACT,GAAIx7B,KAAKo7B,kBACP,MAAO,CAACp7B,KAAKyJ,eAAe8D,KAAMvN,KAAKyJ,eAAe5F,OAAOqV,MAAQlZ,KAAKyJ,eAAe/I,KAAO,GAGlG,GAAKV,KAAK6iB,eAAV,CAKA,IAAK7iB,KAAK8iB,cAAgB9iB,KAAKu7B,6BAA8B,CAC3D,MAAME,EAAkBz7B,KAAK6iB,eAAe,GAAK7iB,KAAKq7B,qBACtD,OAAII,EAAkBz7B,KAAKyJ,eAAe8D,KAEpCkuB,EAAkBz7B,KAAKyJ,eAAe8D,MAAS,EAC1C,CAACvN,KAAKyJ,eAAe8D,KAAMvN,KAAK6iB,eAAe,GAAK7P,KAAKuW,MAAMkS,EAAkBz7B,KAAKyJ,eAAe8D,MAAQ,GAE/G,CAACkuB,EAAkBz7B,KAAKyJ,eAAe8D,KAAMvN,KAAK6iB,eAAe,GAAK7P,KAAKuW,MAAMkS,EAAkBz7B,KAAKyJ,eAAe8D,OAEzH,CAACkuB,EAAiBz7B,KAAK6iB,eAAe,G,CAI/C,GAAI7iB,KAAKq7B,sBAEHr7B,KAAK8iB,aAAa,KAAO9iB,KAAK6iB,eAAe,GAAI,CAEnD,MAAM4Y,EAAkBz7B,KAAK6iB,eAAe,GAAK7iB,KAAKq7B,qBACtD,OAAII,EAAkBz7B,KAAKyJ,eAAe8D,KACjC,CAACkuB,EAAkBz7B,KAAKyJ,eAAe8D,KAAMvN,KAAK6iB,eAAe,GAAK7P,KAAKuW,MAAMkS,EAAkBz7B,KAAKyJ,eAAe8D,OAEzH,CAACyF,KAAKG,IAAIsoB,EAAiBz7B,KAAK8iB,aAAa,IAAK9iB,KAAK8iB,aAAa,G,CAG/E,OAAO9iB,KAAK8iB,Y,CACd,CAKOyY,6BACL,MAAMt5B,EAAQjC,KAAK6iB,eACb3gB,EAAMlC,KAAK8iB,aACjB,SAAK7gB,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,GACrE,CAOOw5B,WAAWve,GAUhB,OARInd,KAAK6iB,iBACP7iB,KAAK6iB,eAAe,IAAM1F,GAExBnd,KAAK8iB,eACP9iB,KAAK8iB,aAAa,IAAM3F,GAItBnd,KAAK8iB,cAAgB9iB,KAAK8iB,aAAa,GAAK,GAC9C9iB,KAAK+iB,kBACE,IAIL/iB,KAAK6iB,gBAAkB7iB,KAAK6iB,eAAe,GAAK,IAClD7iB,KAAK6iB,eAAe,GAAK,IAEpB,EACT,E,qgBCzIF,gBACA,UAEA,SAGA,IAAa7G,EAAb,cAAqC,EAAAxc,WAYnCC,YACES,EACA+I,EACkCmH,GAElCxQ,QAFkC,KAAAwQ,gBAAAA,EAZ7B,KAAA3I,MAAgB,EAChB,KAAAtB,OAAiB,EAKP,KAAAw1B,kBAAoB37B,KAAK6B,SAAS,IAAI,EAAAkI,cACvC,KAAA6xB,iBAAmB57B,KAAK27B,kBAAkB1xB,MAQxDjK,KAAK67B,iBAAmB,IAAIC,EAAmB57B,EAAU+I,EAAejJ,KAAKoQ,iBAC7EpQ,KAAK6B,SAAS7B,KAAKoQ,gBAAgB2rB,uBAAuB,CAAC,aAAc,aAAa,IAAM/7B,KAAK+e,YACnG,CAbW0F,mBAA0B,OAAOzkB,KAAKyH,MAAQ,GAAKzH,KAAKmG,OAAS,CAAG,CAexE4Y,UACL,MAAMvO,EAASxQ,KAAK67B,iBAAiB9c,UACjCvO,EAAO/I,QAAUzH,KAAKyH,OAAS+I,EAAOrK,SAAWnG,KAAKmG,SACxDnG,KAAKyH,MAAQ+I,EAAO/I,MACpBzH,KAAKmG,OAASqK,EAAOrK,OACrBnG,KAAK27B,kBAAkBtsB,OAE3B,GA7BW2M,EAAe,GAevB,MAAA/J,kBAfQ+J,GAAA,EAAAA,gBAAAA,EA+Cb,MAAM8f,EAIJr8B,YACU0b,EACA6gB,EACA5rB,GAFA,KAAA+K,UAAAA,EACA,KAAA6gB,eAAAA,EACA,KAAA5rB,gBAAAA,EANF,KAAA6rB,QAA0B,CAAEx0B,MAAO,EAAGtB,OAAQ,GAQpDnG,KAAKk8B,gBAAkBl8B,KAAKmb,UAAUhb,cAAc,QACpDH,KAAKk8B,gBAAgB97B,UAAUC,IAAI,8BACnCL,KAAKk8B,gBAAgBl3B,YAAc,IACnChF,KAAKk8B,gBAAgB17B,aAAa,cAAe,QACjDR,KAAKg8B,eAAep7B,YAAYZ,KAAKk8B,gBACvC,CAEOnd,UACL/e,KAAKk8B,gBAAgB91B,MAAMupB,WAAa3vB,KAAKoQ,gBAAgBM,WAAWif,WACxE3vB,KAAKk8B,gBAAgB91B,MAAMwpB,SAAW,GAAG5vB,KAAKoQ,gBAAgBM,WAAWkf,aAGzE,MAAMuM,EAAWn8B,KAAKk8B,gBAAgB90B,wBAStC,OALuB,IAAnB+0B,EAAS10B,OAAmC,IAApB00B,EAASh2B,SACnCnG,KAAKi8B,QAAQx0B,MAAQ00B,EAAS10B,MAC9BzH,KAAKi8B,QAAQ91B,OAAS6M,KAAKgb,KAAKmO,EAASh2B,SAGpCnG,KAAKi8B,OACd,E,8hBClFF,gBACA,SACA,SACA,UAGA,MAAavE,UAAuB,EAAAe,cASlCh5B,YAAY28B,EAAsBC,EAAe50B,GAC/C7H,QANK,KAAA08B,QAAkB,EAGlB,KAAAC,aAAuB,GAI5Bv8B,KAAKyI,GAAK2zB,EAAU3zB,GACpBzI,KAAKwI,GAAK4zB,EAAU5zB,GACpBxI,KAAKu8B,aAAeF,EACpBr8B,KAAKutB,OAAS9lB,CAChB,CAEO+0B,aAEL,OAAO,OACT,CAEOljB,WACL,OAAOtZ,KAAKutB,MACd,CAEO4K,WACL,OAAOn4B,KAAKu8B,YACd,CAEOjF,UAGL,OAAO,OACT,CAEOmF,gBAAgB11B,GACrB,MAAM,IAAIpF,MAAM,kBAClB,CAEO+6B,gBACL,MAAO,CAAC18B,KAAKyI,GAAIzI,KAAKm4B,WAAYn4B,KAAKsZ,WAAYtZ,KAAKs3B,UAC1D,EA1CF,mBA6CA,IAAajb,EAAb,MAAaA,EAOX5c,YAC0BgK,GAAA,KAAAA,eAAAA,EALlB,KAAAkzB,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAA7F,UAAsB,IAAI,EAAApmB,QAI9B,CAEG9O,SAASuH,GACd,MAAMyzB,EAA2B,CAC/BC,GAAI98B,KAAK48B,yBACTxzB,WAIF,OADApJ,KAAK28B,kBAAkBn4B,KAAKq4B,GACrBA,EAAOC,EAChB,CAEO3a,WAAWF,GAChB,IAAK,IAAI5iB,EAAI,EAAGA,EAAIW,KAAK28B,kBAAkBz7B,OAAQ7B,IACjD,GAAIW,KAAK28B,kBAAkBt9B,GAAGy9B,KAAO7a,EAEnC,OADAjiB,KAAK28B,kBAAkB9xB,OAAOxL,EAAG,IAC1B,EAIX,OAAO,CACT,CAEOg4B,oBAAoBxX,GACzB,GAAsC,IAAlC7f,KAAK28B,kBAAkBz7B,OACzB,MAAO,GAGT,MAAMqP,EAAOvQ,KAAKyJ,eAAe5F,OAAOC,MAAM8E,IAAIiX,GAClD,IAAKtP,GAAwB,IAAhBA,EAAKrP,OAChB,MAAO,GAGT,MAAM67B,EAA6B,GAC7BC,EAAUzsB,EAAKonB,mBAAkB,GAMvC,IAAIsF,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAc7sB,EAAK8sB,MAAM,GACzBC,EAAc/sB,EAAKgtB,MAAM,GAE7B,IAAK,IAAI5xB,EAAI,EAAGA,EAAI4E,EAAKM,mBAAoBlF,IAG3C,GAFA4E,EAAKW,SAASvF,EAAG3L,KAAK+2B,WAEY,IAA9B/2B,KAAK+2B,UAAUzd,WAAnB,CAMA,GAAItZ,KAAK+2B,UAAUtuB,KAAO20B,GAAep9B,KAAK+2B,UAAUvuB,KAAO80B,EAAa,CAG1E,GAAI3xB,EAAIsxB,EAAmB,EAAG,CAC5B,MAAM7F,EAAep3B,KAAKw9B,iBACxBR,EACAG,EACAD,EACA3sB,EACA0sB,GAEF,IAAK,IAAI59B,EAAI,EAAGA,EAAI+3B,EAAal2B,OAAQ7B,IACvC09B,EAAOv4B,KAAK4yB,EAAa/3B,G,CAK7B49B,EAAmBtxB,EACnBwxB,EAAwBD,EACxBE,EAAcp9B,KAAK+2B,UAAUtuB,GAC7B60B,EAAct9B,KAAK+2B,UAAUvuB,E,CAG/B00B,GAAsBl9B,KAAK+2B,UAAUoB,WAAWj3B,QAAU,EAAAg3B,qBAAqBh3B,M,CAIjF,GAAIlB,KAAKyJ,eAAe8D,KAAO0vB,EAAmB,EAAG,CACnD,MAAM7F,EAAep3B,KAAKw9B,iBACxBR,EACAG,EACAD,EACA3sB,EACA0sB,GAEF,IAAK,IAAI59B,EAAI,EAAGA,EAAI+3B,EAAal2B,OAAQ7B,IACvC09B,EAAOv4B,KAAK4yB,EAAa/3B,G,CAI7B,OAAO09B,CACT,CAUQS,iBAAiBjtB,EAAcktB,EAAoBC,EAAkBh4B,EAAuBisB,GAClG,MAAMrrB,EAAOiK,EAAK+e,UAAUmO,EAAYC,GAIxC,IAAIC,EAAsC,GAC1C,IACEA,EAAkB39B,KAAK28B,kBAAkB,GAAGvzB,QAAQ9C,E,CACpD,MAAOs3B,GACP7rB,QAAQ6rB,MAAMA,E,CAEhB,IAAK,IAAIv+B,EAAI,EAAGA,EAAIW,KAAK28B,kBAAkBz7B,OAAQ7B,IAEjD,IACE,MAAMw+B,EAAe79B,KAAK28B,kBAAkBt9B,GAAG+J,QAAQ9C,GACvD,IAAK,IAAIqH,EAAI,EAAGA,EAAIkwB,EAAa38B,OAAQyM,IACvC0O,EAAuByhB,aAAaH,EAAiBE,EAAalwB,G,CAEpE,MAAOiwB,GACP7rB,QAAQ6rB,MAAMA,E,CAIlB,OADA59B,KAAK+9B,0BAA0BJ,EAAiBj4B,EAAUisB,GACnDgM,CACT,CAUQI,0BAA0BhB,EAA4BxsB,EAAmBohB,GAC/E,IAAIqM,EAAoB,EACpBC,GAAsB,EACtBf,EAAqB,EACrBgB,EAAenB,EAAOiB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAIvyB,EAAIgmB,EAAUhmB,EAAI3L,KAAKyJ,eAAe8D,KAAM5B,IAAK,CACxD,MAAMlE,EAAQ8I,EAAK+I,SAAS3N,GACtBzK,EAASqP,EAAK4tB,UAAUxyB,GAAGzK,QAAU,EAAAg3B,qBAAqBh3B,OAIhE,GAAc,IAAVuG,EAAJ,CAWA,IANKw2B,GAAuBC,EAAa,IAAMhB,IAC7CgB,EAAa,GAAKvyB,EAClBsyB,GAAsB,GAIpBC,EAAa,IAAMhB,EAAoB,CAOzC,GANAgB,EAAa,GAAKvyB,EAGlBuyB,EAAenB,IAASiB,IAGnBE,EACH,MAOEA,EAAa,IAAMhB,GACrBgB,EAAa,GAAKvyB,EAClBsyB,GAAsB,GAEtBA,GAAsB,C,CAM1Bf,GAAsBh8B,C,EAKpBg9B,IACFA,EAAa,GAAKl+B,KAAKyJ,eAAe8D,K,CAE1C,CAUQ6wB,oBAAoBrB,EAA4BsB,GACtD,IAAIC,GAAU,EACd,IAAK,IAAIj/B,EAAI,EAAGA,EAAI09B,EAAO77B,OAAQ7B,IAAK,CACtC,MAAMgO,EAAQ0vB,EAAO19B,GACrB,GAAKi/B,EAAL,CAwBE,GAAID,EAAS,IAAMhxB,EAAM,GAIvB,OADA0vB,EAAO19B,EAAI,GAAG,GAAKg/B,EAAS,GACrBtB,EAGT,GAAIsB,EAAS,IAAMhxB,EAAM,GAKvB,OAFA0vB,EAAO19B,EAAI,GAAG,GAAK2T,KAAKG,IAAIkrB,EAAS,GAAIhxB,EAAM,IAC/C0vB,EAAOlyB,OAAOxL,EAAG,GACV09B,EAKTA,EAAOlyB,OAAOxL,EAAG,GACjBA,G,KA1CF,CACE,GAAIg/B,EAAS,IAAMhxB,EAAM,GAGvB,OADA0vB,EAAOlyB,OAAOxL,EAAG,EAAGg/B,GACbtB,EAGT,GAAIsB,EAAS,IAAMhxB,EAAM,GAIvB,OADAA,EAAM,GAAK2F,KAAKC,IAAIorB,EAAS,GAAIhxB,EAAM,IAChC0vB,EAGLsB,EAAS,GAAKhxB,EAAM,KAGtBA,EAAM,GAAK2F,KAAKC,IAAIorB,EAAS,GAAIhxB,EAAM,IACvCixB,GAAU,E,EAoChB,OARIA,EAEFvB,EAAOA,EAAO77B,OAAS,GAAG,GAAKm9B,EAAS,GAGxCtB,EAAOv4B,KAAK65B,GAGPtB,CACT,GAvRW1gB,EAAsB,GAQ9B,MAAApM,iBARQoM,GAAA,EAAAA,uBAAAA,C,4FCnDb,2BAME5c,YACUkvB,EACQxrB,GADR,KAAAwrB,UAAAA,EACQ,KAAAxrB,OAAAA,EALV,KAAAo7B,YAAa,EACb,KAAAC,sBAAwCl0B,EAM9CtK,KAAK2uB,UAAU1tB,iBAAiB,SAAS,IAAMjB,KAAKu+B,YAAa,IACjEv+B,KAAK2uB,UAAU1tB,iBAAiB,QAAQ,IAAMjB,KAAKu+B,YAAa,GAClE,CAEWxW,UACT,OAAO/nB,KAAKmD,OAAOmQ,gBACrB,CAEW6mB,gBAKT,YAJ8B7vB,IAA1BtK,KAAKw+B,mBACPx+B,KAAKw+B,iBAAmBx+B,KAAKu+B,YAAcv+B,KAAK2uB,UAAUvT,cAAcqjB,WACxEC,gBAAe,IAAM1+B,KAAKw+B,sBAAmBl0B,KAExCtK,KAAKw+B,gBACd,E,mgBC1BF,gBACA,UAEA,IAAazhB,EAAb,MAGEtd,YACmCE,EACEoc,GADF,KAAApc,eAAAA,EACE,KAAAoc,iBAAAA,CAErC,CAEOnM,UAAU3F,EAA2CvI,EAAsB6uB,EAAkB1d,EAAkB8d,GACpH,OAAO,IAAA/gB,WACLzM,OACA8G,EACAvI,EACA6uB,EACA1d,EACA7S,KAAK+b,iBAAiB0I,aACtBzkB,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,MACxCzH,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,OACxCwqB,EAEJ,CAEOvR,qBAAqBnV,EAAmBvI,GAC7C,MAAMiO,GAAS,IAAAogB,4BAA2B5sB,OAAQ8G,EAAOvI,GAIzD,MAAK1B,KAAK+b,iBAAiB0I,cACtB9U,EAAO,GAAK,GACZA,EAAO,GAAK,GACZA,EAAO,IAAM3P,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAOxd,OACvDkI,EAAO,IAAM3P,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAO9e,QAI5D,MAAO,CACLyZ,IAAK5M,KAAKuW,MAAM5Z,EAAO,GAAK3P,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKuB,OACpEoY,IAAK7M,KAAKuW,MAAM5Z,EAAO,GAAK3P,KAAKL,eAAeqG,WAAWC,IAAIC,KAAKC,QACpEwF,EAAGqH,KAAKuW,MAAM5Z,EAAO,IACrB/D,EAAGoH,KAAKuW,MAAM5Z,EAAO,IAEzB,GA1CWoN,EAAY,GAIpB,MAAAP,gBACA,MAAAP,mBALQc,GAAA,EAAAA,aAAAA,C,ogBCFb,gBACA,UACA,SACA,UACA,UAEA,UACA,UACA,UASA,IAAaR,EAAb,cAAmC,EAAA/c,WA+BjCC,YACUqT,EACR5L,EACiBwX,EACkB3C,EACf4iB,EACJ5N,EACK6N,EACNzY,GAuDf,GArDAvmB,QATQ,KAAAkT,UAAAA,EAG2B,KAAAiJ,iBAAAA,EA7B7B,KAAA8iB,kBAAoB,IAAI,EAAAC,kBAExB,KAAAC,WAAqB,EACrB,KAAAC,mBAA6B,EAC7B,KAAAC,yBAAmC,EACnC,KAAAC,wBAAkC,EAClC,KAAAC,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,gBAAmC,CACzCp9B,WAAOqI,EACPpI,SAAKoI,EACL0T,kBAAkB,GAGH,KAAAshB,oBAAsBt/B,KAAK6B,SAAS,IAAI,EAAAkI,cACzC,KAAA/G,mBAAsBhD,KAAKs/B,oBAAoBr1B,MAC9C,KAAAs1B,0BAA4Bv/B,KAAK6B,SAAS,IAAI,EAAAkI,cAC/C,KAAAiF,yBAA2BhP,KAAKu/B,0BAA0Bt1B,MACzD,KAAA0K,UAAY3U,KAAK6B,SAAS,IAAI,EAAAkI,cAC/B,KAAA/H,SAAWhC,KAAK2U,UAAU1K,MACzB,KAAAu1B,kBAAoBx/B,KAAK6B,SAAS,IAAI,EAAAkI,cACvC,KAAA01B,iBAAmBz/B,KAAKw/B,kBAAkBv1B,MAgBxDjK,KAAK6B,SAAS,CAAE0H,QAAS,KAAK,MAAC,OAAc,QAAd,EAAAvJ,KAAK0/B,iBAAS,eAAEn2B,SAAS,IAExDvJ,KAAK2/B,iBAAmB,IAAI,EAAAC,gBAAgBhB,EAAmBz7B,QAAQ,CAAClB,EAAOC,IAAQlC,KAAKsB,YAAYW,EAAOC,KAC/GlC,KAAK6B,SAAS7B,KAAK2/B,kBAEnB3/B,KAAKiD,kBAAoB,IAAI,EAAAC,iBAAiB07B,EAAmBz7B,QACjEnD,KAAKiD,kBAAkBG,aAAY,IAAMpD,KAAKo1B,iCAC9Cp1B,KAAK6B,SAAS7B,KAAKiD,mBAEnBjD,KAAK6B,SAASkvB,EAAcjvB,UAAS,IAAM9B,KAAK6/B,kBAChD7/B,KAAK6B,SAASkvB,EAAc7Y,QAAQmP,kBAAiB,KAAK,MAAC,OAAc,QAAd,EAAArnB,KAAK0/B,iBAAS,eAAE32B,OAAO,KAClF/I,KAAK6B,SAAS6c,EAAe2U,gBAAe,IAAMrzB,KAAKszB,2BACvDtzB,KAAK6B,SAAS7B,KAAK+b,iBAAiB6f,kBAAiB,IAAM57B,KAAKq1B,2BAKhEr1B,KAAK6B,SAAS88B,EAAkBtU,wBAAuB,IAAMrqB,KAAK6/B,kBAClE7/B,KAAK6B,SAAS88B,EAAkBrU,qBAAoB,IAAMtqB,KAAK6/B,kBAG/D7/B,KAAK6B,SAAS6c,EAAeqd,uBAAuB,CAClD,eACA,6BACA,gBACA,aACA,aACA,WACA,aACA,iBACA,yBACC,KACD/7B,KAAK+I,QACL/I,KAAKud,aAAawT,EAAcxjB,KAAMwjB,EAAcrwB,MACpDV,KAAK6/B,cAAc,KAIrB7/B,KAAK6B,SAAS6c,EAAeqd,uBAAuB,CAClD,cACA,gBACC,IAAM/7B,KAAKyhB,YAAYsP,EAAcltB,OAAO+H,EAAGmlB,EAAcltB,OAAO+H,GAAG,MAI1E5L,KAAK6B,UAAS,IAAAwB,0BAAyBu7B,EAAmBz7B,OAAQ,UAAU,IAAMnD,KAAKo1B,kCAEvFp1B,KAAK6B,SAASskB,EAAasB,gBAAe,IAAMznB,KAAK6/B,kBAIjD,yBAA0BjB,EAAmBz7B,OAAQ,CACvD,MAAM28B,EAAW,IAAIlB,EAAmBz7B,OAAO48B,sBAAqBj/B,GAAKd,KAAKggC,0BAA0Bl/B,EAAEA,EAAEI,OAAS,KAAK,CAAE++B,UAAW,IACvIH,EAASI,QAAQh5B,GACjBlH,KAAK6B,SAAS,CAAE0H,QAAS,IAAMu2B,EAASK,c,CAE5C,CAtEWn6B,iBAAkC,OAAOhG,KAAK0/B,UAAW15B,UAAY,CAwExEg6B,0BAA0BI,GAChCpgC,KAAK++B,eAAqCz0B,IAAzB81B,EAAMC,eAA4D,IAA5BD,EAAME,mBAA4BF,EAAMC,eAG1FrgC,KAAK++B,WAAc/+B,KAAK+b,iBAAiB0I,cAC5CzkB,KAAK+b,iBAAiBgD,WAGnB/e,KAAK++B,WAAa/+B,KAAKg/B,oBAC1Bh/B,KAAK6+B,kBAAkB0B,QACvBvgC,KAAKyhB,YAAY,EAAGzhB,KAAK8S,UAAY,GACrC9S,KAAKg/B,mBAAoB,EAE7B,CAEOvd,YAAYxf,EAAeC,EAAas+B,GAAwB,GACjExgC,KAAK++B,UACP/+B,KAAKg/B,mBAAoB,GAGtBwB,IACHxgC,KAAKi/B,yBAA0B,GAEjCj/B,KAAK2/B,iBAAiBp6B,QAAQtD,EAAOC,EAAKlC,KAAK8S,WACjD,CAEQxR,YAAYW,EAAeC,GAC5BlC,KAAK0/B,YAGV1/B,KAAK0/B,UAAUpK,WAAWrzB,EAAOC,GAG7BlC,KAAKk/B,yBACPl/B,KAAK0/B,UAAU3hB,uBAAuB/d,KAAKq/B,gBAAgBp9B,MAAOjC,KAAKq/B,gBAAgBn9B,IAAKlC,KAAKq/B,gBAAgBrhB,kBACjHhe,KAAKk/B,wBAAyB,GAI3Bl/B,KAAKi/B,yBACRj/B,KAAKu/B,0BAA0BlwB,KAAK,CAAEpN,QAAOC,QAE/ClC,KAAK2U,UAAUtF,KAAK,CAAEpN,QAAOC,QAC7BlC,KAAKi/B,yBAA0B,EACjC,CAEOxiB,OAAOlP,EAAc7M,GAC1BV,KAAK8S,UAAYpS,EACjBV,KAAKygC,qBACP,CAEQnN,wBACDtzB,KAAK0/B,YAGV1/B,KAAKyhB,YAAY,EAAGzhB,KAAK8S,UAAY,GACrC9S,KAAKygC,sBACP,CAEQA,sBACDzgC,KAAK0/B,YAIN1/B,KAAK0/B,UAAU15B,WAAWC,IAAIgf,OAAOxd,QAAUzH,KAAKm/B,cAAgBn/B,KAAK0/B,UAAU15B,WAAWC,IAAIgf,OAAO9e,SAAWnG,KAAKo/B,eAG7Hp/B,KAAKs/B,oBAAoBjwB,KAAKrP,KAAK0/B,UAAU15B,YAC/C,CAEO4W,cACL,QAAS5c,KAAK0/B,SAChB,CAEO7iB,YAAY6jB,G,MAEH,QAAd,EAAA1gC,KAAK0/B,iBAAS,SAAEn2B,UAChBvJ,KAAK0/B,UAAYgB,EACjB1gC,KAAK0/B,UAAU5hB,iBAAgBhd,GAAKd,KAAKyhB,YAAY3gB,EAAEmB,MAAOnB,EAAEoB,KAAK,KAGrElC,KAAKk/B,wBAAyB,EAC9Bl/B,KAAK6/B,cACP,CAEOrtB,mBAAmBlC,GACxB,OAAOtQ,KAAK2/B,iBAAiBntB,mBAAmBlC,EAClD,CAEQuvB,eACF7/B,KAAK++B,UACP/+B,KAAKg/B,mBAAoB,EAEzBh/B,KAAKyhB,YAAY,EAAGzhB,KAAK8S,UAAY,EAEzC,CAEO+R,oB,QACA7kB,KAAK0/B,YAGsB,QAAhC,KAAA1/B,KAAK0/B,WAAU7a,yBAAiB,iBAChC7kB,KAAK6/B,eACP,CAEOzK,+BAGLp1B,KAAK+b,iBAAiBgD,UAEjB/e,KAAK0/B,YAGV1/B,KAAK0/B,UAAUtK,+BACfp1B,KAAKyhB,YAAY,EAAGzhB,KAAK8S,UAAY,GACvC,CAEOyK,aAAahQ,EAAc7M,GAC3BV,KAAK0/B,YAGN1/B,KAAK++B,UACP/+B,KAAK6+B,kBAAkBn2B,KAAI,IAAM1I,KAAK0/B,UAAWniB,aAAahQ,EAAM7M,KAEpEV,KAAK0/B,UAAUniB,aAAahQ,EAAM7M,GAEpCV,KAAK6/B,eACP,CAGOxK,wB,MACS,QAAd,EAAAr1B,KAAK0/B,iBAAS,SAAErK,uBAClB,CAEO7X,a,MACS,QAAd,EAAAxd,KAAK0/B,iBAAS,SAAEliB,YAClB,CAEOC,c,MACS,QAAd,EAAAzd,KAAK0/B,iBAAS,SAAEjiB,aAClB,CAEOM,uBAAuB9b,EAAqCC,EAAmC8b,G,MACpGhe,KAAKq/B,gBAAgBp9B,MAAQA,EAC7BjC,KAAKq/B,gBAAgBn9B,IAAMA,EAC3BlC,KAAKq/B,gBAAgBrhB,iBAAmBA,EAC1B,QAAd,EAAAhe,KAAK0/B,iBAAS,SAAE3hB,uBAAuB9b,EAAOC,EAAK8b,EACrD,CAEOV,mB,MACS,QAAd,EAAAtd,KAAK0/B,iBAAS,SAAEpiB,kBAClB,CAEOvU,Q,MACS,QAAd,EAAA/I,KAAK0/B,iBAAS,SAAE32B,OAClB,GAhQWwT,EAAa,GAkCrB,MAAAtK,iBACA,MAAAgK,kBACA,MAAAnG,oBACA,MAAA7F,gBACA,MAAA6L,qBACA,MAAAK,gBAvCQI,GAAA,EAAAA,cAAAA,C,ugBCfb,gBACA,SACA,SACA,UACA,UAEA,UACA,UACA,UACA,SACA,UAwBMokB,EAA0Btc,OAAOC,aAAa,KAC9Csc,EAA+B,IAAIC,OAAOF,EAAyB,KA4BzE,IAAajjB,EAAb,cAAsC,EAAAle,WAmDpCC,YACmBwL,EACA6e,EACAgX,EACgBr3B,EACFmlB,EACC1jB,EACEkF,EACDzQ,EACKgc,GAEtC/b,QAViB,KAAAqL,SAAAA,EACA,KAAA6e,eAAAA,EACA,KAAAgX,WAAAA,EACgB,KAAAr3B,eAAAA,EACF,KAAAmlB,aAAAA,EACC,KAAA1jB,cAAAA,EACE,KAAAkF,gBAAAA,EACD,KAAAzQ,eAAAA,EACK,KAAAgc,oBAAAA,EAnDhC,KAAAolB,kBAA4B,EAqB5B,KAAAC,UAAW,EAKX,KAAAjK,UAAsB,IAAI,EAAApmB,SAE1B,KAAAswB,oBAA8B,EAC9B,KAAAC,kBAA4B,EAC5B,KAAAC,wBAAmD72B,EACnD,KAAA82B,sBAAiD92B,EAExC,KAAA+2B,uBAAyBrhC,KAAK6B,SAAS,IAAI,EAAAkI,cAC5C,KAAAkU,sBAAwBje,KAAKqhC,uBAAuBp3B,MACnD,KAAAq3B,iBAAmBthC,KAAK6B,SAAS,IAAI,EAAAkI,cACtC,KAAA+T,gBAAkB9d,KAAKshC,iBAAiBr3B,MACvC,KAAA2K,mBAAqB5U,KAAK6B,SAAS,IAAI,EAAAkI,cACxC,KAAA8K,kBAAoB7U,KAAK4U,mBAAmB3K,MAC3C,KAAAs3B,sBAAwBvhC,KAAK6B,SAAS,IAAI,EAAAkI,cAC3C,KAAA6T,qBAAuB5d,KAAKuhC,sBAAsBt3B,MAgBhEjK,KAAKwhC,mBAAqBv3B,GAASjK,KAAKoL,iBAAiBnB,GACzDjK,KAAKyhC,iBAAmBx3B,GAASjK,KAAKsL,eAAerB,GACrDjK,KAAK4uB,aAAa8S,aAAY,KACxB1hC,KAAK6Z,cACP7Z,KAAK+iB,gB,IAGT/iB,KAAK2hC,cAAgB3hC,KAAKyJ,eAAe5F,OAAOC,MAAM89B,QAAOzkB,GAAUnd,KAAK6hC,YAAY1kB,KACxFnd,KAAK6B,SAAS7B,KAAKyJ,eAAeyO,QAAQmP,kBAAiBvmB,GAAKd,KAAK8hC,sBAAsBhhC,MAE3Fd,KAAKwe,SAELxe,KAAK+hC,OAAS,IAAI,EAAAC,eAAehiC,KAAKyJ,gBACtCzJ,KAAKiiC,qBAAuB,EAE5BjiC,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKkiC,2BAA2B,IAEpC,CAEO7rB,QACLrW,KAAK+iB,gBACP,CAMOxE,UACLve,KAAK+iB,iBACL/iB,KAAKghC,UAAW,CAClB,CAKOxiB,SACLxe,KAAKghC,UAAW,CAClB,CAEWne,qBAAiD,OAAO7iB,KAAK+hC,OAAOzG,mBAAqB,CACzFxY,mBAA+C,OAAO9iB,KAAK+hC,OAAOvG,iBAAmB,CAKrF3hB,mBACT,MAAM5X,EAAQjC,KAAK+hC,OAAOzG,oBACpBp5B,EAAMlC,KAAK+hC,OAAOvG,kBACxB,SAAKv5B,IAAUC,GAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,GACjD,CAKW4F,oBACT,MAAM7F,EAAQjC,KAAK+hC,OAAOzG,oBACpBp5B,EAAMlC,KAAK+hC,OAAOvG,kBACxB,IAAKv5B,IAAUC,EACb,MAAO,GAGT,MAAM2B,EAAS7D,KAAKyJ,eAAe5F,OAC7B2M,EAAmB,GAEzB,GAAkC,IAA9BxQ,KAAKiiC,qBAA+C,CAEtD,GAAIhgC,EAAM,KAAOC,EAAI,GACnB,MAAO,GAKT,MAAMyvB,EAAW1vB,EAAM,GAAKC,EAAI,GAAKD,EAAM,GAAKC,EAAI,GAC9C0vB,EAAS3vB,EAAM,GAAKC,EAAI,GAAKA,EAAI,GAAKD,EAAM,GAClD,IAAK,IAAI5C,EAAI4C,EAAM,GAAI5C,GAAK6C,EAAI,GAAI7C,IAAK,CACvC,MAAM8iC,EAAWt+B,EAAO8B,4BAA4BtG,GAAG,EAAMsyB,EAAUC,GACvEphB,EAAOhM,KAAK29B,E,MAET,CAEL,MAAMC,EAAiBngC,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAKoI,EACtDkG,EAAOhM,KAAKX,EAAO8B,4BAA4B1D,EAAM,IAAI,EAAMA,EAAM,GAAImgC,IAGzE,IAAK,IAAI/iC,EAAI4C,EAAM,GAAK,EAAG5C,GAAK6C,EAAI,GAAK,EAAG7C,IAAK,CAC/C,MAAM8Z,EAAatV,EAAOC,MAAM8E,IAAIvJ,GAC9B8iC,EAAWt+B,EAAO8B,4BAA4BtG,GAAG,IACnD8Z,aAAU,EAAVA,EAAYmY,WACd9gB,EAAOA,EAAOtP,OAAS,IAAMihC,EAE7B3xB,EAAOhM,KAAK29B,E,CAKhB,GAAIlgC,EAAM,KAAOC,EAAI,GAAI,CACvB,MAAMiX,EAAatV,EAAOC,MAAM8E,IAAI1G,EAAI,IAClCigC,EAAWt+B,EAAO8B,4BAA4BzD,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrEiX,GAAcA,EAAYmY,UAC5B9gB,EAAOA,EAAOtP,OAAS,IAAMihC,EAE7B3xB,EAAOhM,KAAK29B,E,EAWlB,OAJwB3xB,EAAO3D,KAAI0D,GAC1BA,EAAKhK,QAAQq6B,EAA8B,OACjDjI,KAAKxkB,EAAQ4P,UAAY,OAAS,KAGvC,CAKOhB,iBACL/iB,KAAK+hC,OAAOhf,iBACZ/iB,KAAKkiC,4BACLliC,KAAKuF,UACLvF,KAAK4U,mBAAmBvF,MAC1B,CAOO9J,QAAQ88B,GAERriC,KAAK6mB,yBACR7mB,KAAK6mB,uBAAyB7mB,KAAK2b,oBAAoBxY,OAAOsP,uBAAsB,IAAMzS,KAAK4nB,cAK7FzT,EAAQmG,SAAW+nB,GACCriC,KAAK8H,cACT5G,QAChBlB,KAAKqhC,uBAAuBhyB,KAAKrP,KAAK8H,cAG5C,CAMQ8f,WACN5nB,KAAK6mB,4BAAyBvc,EAC9BtK,KAAKshC,iBAAiBjyB,KAAK,CACzBpN,MAAOjC,KAAK+hC,OAAOzG,oBACnBp5B,IAAKlC,KAAK+hC,OAAOvG,kBACjBxd,iBAAgD,IAA9Bhe,KAAKiiC,sBAE3B,CAMQK,oBAAoBr4B,GAC1B,MAAM0F,EAAS3P,KAAKuiC,sBAAsBt4B,GACpChI,EAAQjC,KAAK+hC,OAAOzG,oBACpBp5B,EAAMlC,KAAK+hC,OAAOvG,kBAExB,SAAKv5B,GAAUC,GAAQyN,IAIhB3P,KAAKwiC,sBAAsB7yB,EAAQ1N,EAAOC,EACnD,CAEOugC,kBAAkB92B,EAAWC,GAClC,MAAM3J,EAAQjC,KAAK+hC,OAAOzG,oBACpBp5B,EAAMlC,KAAK+hC,OAAOvG,kBACxB,SAAKv5B,IAAUC,IAGRlC,KAAKwiC,sBAAsB,CAAC72B,EAAGC,GAAI3J,EAAOC,EACnD,CAEUsgC,sBAAsB7yB,EAA0B1N,EAAyBC,GACjF,OAAQyN,EAAO,GAAK1N,EAAM,IAAM0N,EAAO,GAAKzN,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAMyN,EAAO,KAAO1N,EAAM,IAAM0N,EAAO,IAAM1N,EAAM,IAAM0N,EAAO,GAAKzN,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAMyN,EAAO,KAAOzN,EAAI,IAAMyN,EAAO,GAAKzN,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAMyN,EAAO,KAAO1N,EAAM,IAAM0N,EAAO,IAAM1N,EAAM,EACzE,CAMQygC,oBAAoBz4B,EAAmB04B,G,QAE7C,MAAMt1B,EAAyC,QAAjC,EAA2B,QAA3B,EAAArN,KAAK8gC,WAAWv2B,mBAAW,eAAEyB,YAAI,eAAEqB,MACjD,GAAIA,EAIF,OAHArN,KAAK+hC,OAAOlf,eAAiB,CAACxV,EAAMpL,MAAM0J,EAAI,EAAG0B,EAAMpL,MAAM2J,EAAI,GACjE5L,KAAK+hC,OAAO1G,sBAAuB,IAAAuH,gBAAev1B,EAAOrN,KAAKyJ,eAAe8D,MAC7EvN,KAAK+hC,OAAOjf,kBAAexY,GACpB,EAGT,MAAMqF,EAAS3P,KAAKuiC,sBAAsBt4B,GAC1C,QAAI0F,IACF3P,KAAK6iC,cAAclzB,EAAQgzB,GAC3B3iC,KAAK+hC,OAAOjf,kBAAexY,GACpB,EAGX,CAKO0Y,YACLhjB,KAAK+hC,OAAO3G,mBAAoB,EAChCp7B,KAAKuF,UACLvF,KAAK4U,mBAAmBvF,MAC1B,CAEO4T,YAAYhhB,EAAeC,GAChClC,KAAK+hC,OAAOhf,iBACZ9gB,EAAQ+Q,KAAKG,IAAIlR,EAAO,GACxBC,EAAM8Q,KAAKC,IAAI/Q,EAAKlC,KAAKyJ,eAAe5F,OAAOC,MAAM5C,OAAS,GAC9DlB,KAAK+hC,OAAOlf,eAAiB,CAAC,EAAG5gB,GACjCjC,KAAK+hC,OAAOjf,aAAe,CAAC9iB,KAAKyJ,eAAe8D,KAAMrL,GACtDlC,KAAKuF,UACLvF,KAAK4U,mBAAmBvF,MAC1B,CAMQwyB,YAAY1kB,GACGnd,KAAK+hC,OAAOrG,WAAWve,IAE1Cnd,KAAKuF,SAET,CAMQg9B,sBAAsBt4B,GAC5B,MAAM0F,EAAS3P,KAAKkL,cAAc0E,UAAU3F,EAAOjK,KAAK8pB,eAAgB9pB,KAAKyJ,eAAe8D,KAAMvN,KAAKyJ,eAAe/I,MAAM,GAC5H,GAAKiP,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAM3P,KAAKyJ,eAAe5F,OAAO+B,MACjC+J,CACT,CAOQmzB,2BAA2B74B,GACjC,IAAI84B,GAAS,IAAAhT,4BAA2B/vB,KAAK2b,oBAAoBxY,OAAQ8G,EAAOjK,KAAK8pB,gBAAgB,GACrG,MAAMkZ,EAAiBhjC,KAAKL,eAAeqG,WAAWC,IAAIgf,OAAO9e,OACjE,OAAI48B,GAAU,GAAKA,GAAUC,EACpB,GAELD,EAASC,IACXD,GAAUC,GAGZD,EAAS/vB,KAAKC,IAAID,KAAKG,IAAI4vB,GA1YG,QA2Y9BA,GA3Y8B,GA4YtBA,EAAS/vB,KAAKqO,IAAI0hB,GAAW/vB,KAAKkV,MAAe,GAAT6a,GAClD,CAOO/hB,qBAAqB/W,GAC1B,OAAIkK,EAAQhP,MACH8E,EAAMgW,QAAUjgB,KAAKoQ,gBAAgBM,WAAWuyB,8BAGlDh5B,EAAMiW,QACf,CAMO9B,gBAAgBnU,GAIrB,GAHAjK,KAAKihC,oBAAsBh3B,EAAMi5B,WAGZ,IAAjBj5B,EAAMkQ,SAAgBna,KAAK6Z,eAKV,IAAjB5P,EAAMkQ,OAAV,CAKA,IAAKna,KAAKghC,SAAU,CAClB,IAAKhhC,KAAKghB,qBAAqB/W,GAC7B,OAIFA,EAAMlC,iB,CAIRkC,EAAMtF,iBAGN3E,KAAK+gC,kBAAoB,EAErB/gC,KAAKghC,UAAY/2B,EAAMiW,SACzBlgB,KAAKmjC,wBAAwBl5B,GAER,IAAjBA,EAAMm5B,OACRpjC,KAAKqjC,mBAAmBp5B,GACE,IAAjBA,EAAMm5B,OACfpjC,KAAKsjC,mBAAmBr5B,GACE,IAAjBA,EAAMm5B,QACfpjC,KAAKujC,mBAAmBt5B,GAI5BjK,KAAKwjC,yBACLxjC,KAAKuF,SAAQ,E,CACf,CAKQi+B,yBAEFxjC,KAAK8pB,eAAe1O,gBACtBpb,KAAK8pB,eAAe1O,cAAcna,iBAAiB,YAAajB,KAAKwhC,oBACrExhC,KAAK8pB,eAAe1O,cAAcna,iBAAiB,UAAWjB,KAAKyhC,mBAErEzhC,KAAKyjC,yBAA2BzjC,KAAK2b,oBAAoBxY,OAAOugC,aAAY,IAAM1jC,KAAK2jC,eA5c9D,GA6c3B,CAKQzB,4BACFliC,KAAK8pB,eAAe1O,gBACtBpb,KAAK8pB,eAAe1O,cAAc/W,oBAAoB,YAAarE,KAAKwhC,oBACxExhC,KAAK8pB,eAAe1O,cAAc/W,oBAAoB,UAAWrE,KAAKyhC,mBAExEzhC,KAAK2b,oBAAoBxY,OAAOygC,cAAc5jC,KAAKyjC,0BACnDzjC,KAAKyjC,8BAA2Bn5B,CAClC,CAOQ64B,wBAAwBl5B,GAC1BjK,KAAK+hC,OAAOlf,iBACd7iB,KAAK+hC,OAAOjf,aAAe9iB,KAAKuiC,sBAAsBt4B,GAE1D,CAOQo5B,mBAAmBp5B,GAOzB,GANAjK,KAAK+hC,OAAO1G,qBAAuB,EACnCr7B,KAAK+hC,OAAO3G,mBAAoB,EAChCp7B,KAAKiiC,qBAAuBjiC,KAAK0hB,mBAAmBzX,GAAS,EAAuB,EAGpFjK,KAAK+hC,OAAOlf,eAAiB7iB,KAAKuiC,sBAAsBt4B,IACnDjK,KAAK+hC,OAAOlf,eACf,OAEF7iB,KAAK+hC,OAAOjf,kBAAexY,EAG3B,MAAMiG,EAAOvQ,KAAKyJ,eAAe5F,OAAOC,MAAM8E,IAAI5I,KAAK+hC,OAAOlf,eAAe,IACxEtS,GAKDA,EAAKrP,SAAWlB,KAAK+hC,OAAOlf,eAAe,IAMM,IAAjDtS,EAAKszB,SAAS7jC,KAAK+hC,OAAOlf,eAAe,KAC3C7iB,KAAK+hC,OAAOlf,eAAe,IAE/B,CAMQygB,mBAAmBr5B,GACrBjK,KAAK0iC,oBAAoBz4B,GAAO,KAClCjK,KAAKiiC,qBAAuB,EAEhC,CAOQsB,mBAAmBt5B,GACzB,MAAM0F,EAAS3P,KAAKuiC,sBAAsBt4B,GACtC0F,IACF3P,KAAKiiC,qBAAuB,EAC5BjiC,KAAK8jC,cAAcn0B,EAAO,IAE9B,CAMO+R,mBAAmBzX,GACxB,OAAOA,EAAMgW,UAAY9L,EAAQhP,OAASnF,KAAKoQ,gBAAgBM,WAAWuyB,8BAC5E,CAOQ73B,iBAAiBnB,GAQvB,GAJAA,EAAMrF,4BAID5E,KAAK+hC,OAAOlf,eACf,OAKF,MAAMkhB,EAAuB/jC,KAAK+hC,OAAOjf,aAAe,CAAC9iB,KAAK+hC,OAAOjf,aAAa,GAAI9iB,KAAK+hC,OAAOjf,aAAa,IAAM,KAIrH,GADA9iB,KAAK+hC,OAAOjf,aAAe9iB,KAAKuiC,sBAAsBt4B,IACjDjK,KAAK+hC,OAAOjf,aAEf,YADA9iB,KAAKuF,SAAQ,GAKmB,IAA9BvF,KAAKiiC,qBACHjiC,KAAK+hC,OAAOjf,aAAa,GAAK9iB,KAAK+hC,OAAOlf,eAAe,GAC3D7iB,KAAK+hC,OAAOjf,aAAa,GAAK,EAE9B9iB,KAAK+hC,OAAOjf,aAAa,GAAK9iB,KAAKyJ,eAAe8D,KAEb,IAA9BvN,KAAKiiC,sBACdjiC,KAAKgkC,gBAAgBhkC,KAAK+hC,OAAOjf,cAInC9iB,KAAK+gC,kBAAoB/gC,KAAK8iC,2BAA2B74B,GAKvB,IAA9BjK,KAAKiiC,uBACHjiC,KAAK+gC,kBAAoB,EAC3B/gC,KAAK+hC,OAAOjf,aAAa,GAAK9iB,KAAKyJ,eAAe8D,KACzCvN,KAAK+gC,kBAAoB,IAClC/gC,KAAK+hC,OAAOjf,aAAa,GAAK,IAOlC,MAAMjf,EAAS7D,KAAKyJ,eAAe5F,OACnC,GAAI7D,KAAK+hC,OAAOjf,aAAa,GAAKjf,EAAOC,MAAM5C,OAAQ,CACrD,MAAMqP,EAAO1M,EAAOC,MAAM8E,IAAI5I,KAAK+hC,OAAOjf,aAAa,IACnDvS,GAAuD,IAA/CA,EAAKszB,SAAS7jC,KAAK+hC,OAAOjf,aAAa,KACjD9iB,KAAK+hC,OAAOjf,aAAa,I,CAKxBihB,GACHA,EAAqB,KAAO/jC,KAAK+hC,OAAOjf,aAAa,IACrDihB,EAAqB,KAAO/jC,KAAK+hC,OAAOjf,aAAa,IACrD9iB,KAAKuF,SAAQ,EAEjB,CAMQo+B,cACN,GAAK3jC,KAAK+hC,OAAOjf,cAAiB9iB,KAAK+hC,OAAOlf,gBAG1C7iB,KAAK+gC,kBAAmB,CAC1B/gC,KAAKuhC,sBAAsBlyB,KAAK,CAAE8N,OAAQnd,KAAK+gC,kBAAmBljB,qBAAqB,IAKvF,MAAMha,EAAS7D,KAAKyJ,eAAe5F,OAC/B7D,KAAK+gC,kBAAoB,GACO,IAA9B/gC,KAAKiiC,uBACPjiC,KAAK+hC,OAAOjf,aAAa,GAAK9iB,KAAKyJ,eAAe8D,MAEpDvN,KAAK+hC,OAAOjf,aAAa,GAAK9P,KAAKC,IAAIpP,EAAO+B,MAAQ5F,KAAKyJ,eAAe/I,KAAMmD,EAAOC,MAAM5C,OAAS,KAEpE,IAA9BlB,KAAKiiC,uBACPjiC,KAAK+hC,OAAOjf,aAAa,GAAK,GAEhC9iB,KAAK+hC,OAAOjf,aAAa,GAAKjf,EAAO+B,OAEvC5F,KAAKuF,S,CAET,CAMQ+F,eAAerB,GACrB,MAAMg6B,EAAch6B,EAAMi5B,UAAYljC,KAAKihC,oBAI3C,GAFAjhC,KAAKkiC,4BAEDliC,KAAK8H,cAAc5G,QAAU,GAAK+iC,EAjpBP,KAipBmDh6B,EAAMgW,QAAUjgB,KAAKoQ,gBAAgBM,WAAWwzB,qBAChI,GAAIlkC,KAAKyJ,eAAe5F,OAAOqV,QAAUlZ,KAAKyJ,eAAe5F,OAAO+B,MAAO,CACzE,MAAMu+B,EAAcnkC,KAAKkL,cAAc0E,UACrC3F,EACAjK,KAAKiL,SACLjL,KAAKyJ,eAAe8D,KACpBvN,KAAKyJ,eAAe/I,MACpB,GAEF,GAAIyjC,QAAkC75B,IAAnB65B,EAAY,SAAuC75B,IAAnB65B,EAAY,GAAkB,CAC/E,MAAMjjB,GAAW,IAAAkjB,oBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGnkC,KAAKyJ,eAAgBzJ,KAAK4uB,aAAa/nB,gBAAgBsa,uBACnInhB,KAAK4uB,aAAa9nB,iBAAiBoa,GAAU,E,QAIjDlhB,KAAKqkC,8BAET,CAEQA,+BACN,MAAMpiC,EAAQjC,KAAK+hC,OAAOzG,oBACpBp5B,EAAMlC,KAAK+hC,OAAOvG,kBAClB3hB,KAAiB5X,IAAWC,GAAQD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,IAE7E2X,EAQA5X,GAAUC,IAIVlC,KAAKmhC,oBAAuBnhC,KAAKohC,kBACpCn/B,EAAM,KAAOjC,KAAKmhC,mBAAmB,IAAMl/B,EAAM,KAAOjC,KAAKmhC,mBAAmB,IAChFj/B,EAAI,KAAOlC,KAAKohC,iBAAiB,IAAMl/B,EAAI,KAAOlC,KAAKohC,iBAAiB,IAExEphC,KAAKskC,uBAAuBriC,EAAOC,EAAK2X,IAfpC7Z,KAAKkhC,kBACPlhC,KAAKskC,uBAAuBriC,EAAOC,EAAK2X,EAgB9C,CAEQyqB,uBAAuBriC,EAAqCC,EAAmC2X,GACrG7Z,KAAKmhC,mBAAqBl/B,EAC1BjC,KAAKohC,iBAAmBl/B,EACxBlC,KAAKkhC,iBAAmBrnB,EACxB7Z,KAAK4U,mBAAmBvF,MAC1B,CAEQyyB,sBAAsBhhC,GAC5Bd,KAAK+iB,iBAKL/iB,KAAK2hC,cAAcp4B,UACnBvJ,KAAK2hC,cAAgB7gC,EAAEwmB,aAAaxjB,MAAM89B,QAAOzkB,GAAUnd,KAAK6hC,YAAY1kB,IAC9E,CAQQonB,oCAAoCprB,EAAyBxN,GACnE,IAAI64B,EAAY74B,EAChB,IAAK,IAAItM,EAAI,EAAGsM,GAAKtM,EAAGA,IAAK,CAC3B,MAAM6B,EAASiY,EAAWjI,SAAS7R,EAAGW,KAAK+2B,WAAWoB,WAAWj3B,OAC/B,IAA9BlB,KAAK+2B,UAAUzd,WAGjBkrB,IACStjC,EAAS,GAAKyK,IAAMtM,IAI7BmlC,GAAatjC,EAAS,E,CAG1B,OAAOsjC,CACT,CAEO9hB,aAAa9C,EAAaC,EAAa3e,GAC5ClB,KAAK+hC,OAAOhf,iBACZ/iB,KAAKkiC,4BACLliC,KAAK+hC,OAAOlf,eAAiB,CAACjD,EAAKC,GACnC7f,KAAK+hC,OAAO1G,qBAAuBn6B,EACnClB,KAAKuF,UACLvF,KAAKqkC,8BACP,CAEOn8B,iBAAiBjB,GACjBjH,KAAKsiC,oBAAoBr7B,KACxBjH,KAAK0iC,oBAAoBz7B,GAAI,IAC/BjH,KAAKuF,SAAQ,GAEfvF,KAAKqkC,+BAET,CAMQI,WAAW90B,EAA0BgzB,EAAuC+B,GAAmC,EAAMC,GAAmC,GAE9J,GAAIh1B,EAAO,IAAM3P,KAAKyJ,eAAe8D,KACnC,OAGF,MAAM1J,EAAS7D,KAAKyJ,eAAe5F,OAC7BsV,EAAatV,EAAOC,MAAM8E,IAAI+G,EAAO,IAC3C,IAAKwJ,EACH,OAGF,MAAM5I,EAAO1M,EAAO8B,4BAA4BgK,EAAO,IAAI,GAG3D,IAAI8tB,EAAaz9B,KAAKukC,oCAAoCprB,EAAYxJ,EAAO,IACzE+tB,EAAWD,EAGf,MAAMmH,EAAaj1B,EAAO,GAAK8tB,EAC/B,IAAIoH,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5Bz0B,EAAK00B,OAAOxH,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCltB,EAAK00B,OAAOxH,EAAa,IAChDA,IAEF,KAAOC,EAAWntB,EAAKrP,QAAwC,MAA9BqP,EAAK00B,OAAOvH,EAAW,IACtDA,G,KAEG,CAKL,IAAI/L,EAAWhiB,EAAO,GAClBiiB,EAASjiB,EAAO,GAIkB,IAAlCwJ,EAAWG,SAASqY,KACtBkT,IACAlT,KAEkC,IAAhCxY,EAAWG,SAASsY,KACtBkT,IACAlT,KAIF,MAAM1wB,EAASiY,EAAWglB,UAAUvM,GAAQ1wB,OAO5C,IANIA,EAAS,IACX8jC,GAAuB9jC,EAAS,EAChCw8B,GAAYx8B,EAAS,GAIhBywB,EAAW,GAAK8L,EAAa,IAAMz9B,KAAKklC,qBAAqB/rB,EAAWjI,SAASygB,EAAW,EAAG3xB,KAAK+2B,aAAa,CACtH5d,EAAWjI,SAASygB,EAAW,EAAG3xB,KAAK+2B,WACvC,MAAM71B,EAASlB,KAAK+2B,UAAUoB,WAAWj3B,OACP,IAA9BlB,KAAK+2B,UAAUzd,YAEjBurB,IACAlT,KACSzwB,EAAS,IAGlB6jC,GAAsB7jC,EAAS,EAC/Bu8B,GAAcv8B,EAAS,GAEzBu8B,IACA9L,G,CAEF,KAAOC,EAASzY,EAAWjY,QAAUw8B,EAAW,EAAIntB,EAAKrP,SAAWlB,KAAKklC,qBAAqB/rB,EAAWjI,SAAS0gB,EAAS,EAAG5xB,KAAK+2B,aAAa,CAC9I5d,EAAWjI,SAAS0gB,EAAS,EAAG5xB,KAAK+2B,WACrC,MAAM71B,EAASlB,KAAK+2B,UAAUoB,WAAWj3B,OACP,IAA9BlB,KAAK+2B,UAAUzd,YAEjBwrB,IACAlT,KACS1wB,EAAS,IAGlB8jC,GAAuB9jC,EAAS,EAChCw8B,GAAYx8B,EAAS,GAEvBw8B,IACA9L,G,EAKJ8L,IAIA,IAAIz7B,EACAw7B,EACEmH,EACAC,EACAE,EAIF7jC,EAAS8R,KAAKC,IAAIjT,KAAKyJ,eAAe8D,KACxCmwB,EACED,EACAoH,EACAC,EACAC,EACAC,GAEJ,GAAKrC,GAA4E,KAA5CpyB,EAAK40B,MAAM1H,EAAYC,GAAU0H,OAAtE,CAKA,GAAIV,GACY,IAAVziC,GAA8C,KAA/BkX,EAAWksB,aAAa,GAAqB,CAC9D,MAAMC,EAAqBzhC,EAAOC,MAAM8E,IAAI+G,EAAO,GAAK,GACxD,GAAI21B,GAAsBnsB,EAAWmY,WAA+E,KAAlEgU,EAAmBD,aAAarlC,KAAKyJ,eAAe8D,KAAO,GAAqB,CAChI,MAAMg4B,EAA2BvlC,KAAKykC,WAAW,CAACzkC,KAAKyJ,eAAe8D,KAAO,EAAGoC,EAAO,GAAK,IAAI,GAAO,GAAM,GAC7G,GAAI41B,EAA0B,CAC5B,MAAMxC,EAAS/iC,KAAKyJ,eAAe8D,KAAOg4B,EAAyBtjC,MACnEA,GAAS8gC,EACT7hC,GAAU6hC,C,GAOlB,GAAI4B,GACE1iC,EAAQf,IAAWlB,KAAKyJ,eAAe8D,MAAkE,KAA1D4L,EAAWksB,aAAarlC,KAAKyJ,eAAe8D,KAAO,GAAqB,CACzH,MAAMi4B,EAAiB3hC,EAAOC,MAAM8E,IAAI+G,EAAO,GAAK,GACpD,IAAI61B,aAAc,EAAdA,EAAgBlU,YAAgD,KAAnCkU,EAAeH,aAAa,GAAqB,CAChF,MAAMI,EAAuBzlC,KAAKykC,WAAW,CAAC,EAAG90B,EAAO,GAAK,IAAI,GAAO,GAAO,GAC3E81B,IACFvkC,GAAUukC,EAAqBvkC,O,EAMvC,MAAO,CAAEe,QAAOf,S,CAClB,CAOU2hC,cAAclzB,EAA0BgzB,GAChD,MAAM+C,EAAe1lC,KAAKykC,WAAW90B,EAAQgzB,GAC7C,GAAI+C,EAAc,CAEhB,KAAOA,EAAazjC,MAAQ,GAC1ByjC,EAAazjC,OAASjC,KAAKyJ,eAAe8D,KAC1CoC,EAAO,KAET3P,KAAK+hC,OAAOlf,eAAiB,CAAC6iB,EAAazjC,MAAO0N,EAAO,IACzD3P,KAAK+hC,OAAO1G,qBAAuBqK,EAAaxkC,M,CAEpD,CAMQ8iC,gBAAgBr0B,GACtB,MAAM+1B,EAAe1lC,KAAKykC,WAAW90B,GAAQ,GAC7C,GAAI+1B,EAAc,CAChB,IAAIx3B,EAASyB,EAAO,GAGpB,KAAO+1B,EAAazjC,MAAQ,GAC1ByjC,EAAazjC,OAASjC,KAAKyJ,eAAe8D,KAC1CW,IAKF,IAAKlO,KAAK+hC,OAAOxG,6BACf,KAAOmK,EAAazjC,MAAQyjC,EAAaxkC,OAASlB,KAAKyJ,eAAe8D,MACpEm4B,EAAaxkC,QAAUlB,KAAKyJ,eAAe8D,KAC3CW,IAIJlO,KAAK+hC,OAAOjf,aAAe,CAAC9iB,KAAK+hC,OAAOxG,6BAA+BmK,EAAazjC,MAAQyjC,EAAazjC,MAAQyjC,EAAaxkC,OAAQgN,E,CAE1I,CAOQg3B,qBAAqBh/B,GAG3B,OAAwB,IAApBA,EAAKoT,YAGFtZ,KAAKoQ,gBAAgBM,WAAWi1B,cAAc/6B,QAAQ1E,EAAKiyB,aAAe,CACnF,CAMU2L,cAAcvzB,GACtB,MAAMq1B,EAAe5lC,KAAKyJ,eAAe5F,OAAOgiC,uBAAuBt1B,GACjElD,EAAsB,CAC1BpL,MAAO,CAAE0J,EAAG,EAAGC,EAAGg6B,EAAaE,OAC/B5jC,IAAK,CAAEyJ,EAAG3L,KAAKyJ,eAAe8D,KAAO,EAAG3B,EAAGg6B,EAAaG,OAE1D/lC,KAAK+hC,OAAOlf,eAAiB,CAAC,EAAG+iB,EAAaE,OAC9C9lC,KAAK+hC,OAAOjf,kBAAexY,EAC3BtK,KAAK+hC,OAAO1G,sBAAuB,IAAAuH,gBAAev1B,EAAOrN,KAAKyJ,eAAe8D,KAC/E,GA57BWmQ,EAAgB,GAuDxB,MAAAzN,gBACA,MAAA6f,cACA,MAAA9S,eACA,MAAA/K,iBACA,MAAAuK,gBACA,MAAAV,sBA5DQ4B,GAAA,EAAAA,iBAAAA,C,iNC9Db,gBAIa,EAAAzB,kBAAmB,IAAA+pB,iBAAkC,mBAarD,EAAAlqB,qBAAsB,IAAAkqB,iBAAqC,sBAiB3D,EAAAhpB,eAAgB,IAAAgpB,iBAA+B,gBAQ/C,EAAAxpB,gBAAiB,IAAAwpB,iBAAgC,iBAmCjD,EAAAroB,mBAAoB,IAAAqoB,iBAAmC,oBA6BvD,EAAA1pB,yBAA0B,IAAA0pB,iBAAyC,0BASnE,EAAA7pB,eAAgB,IAAA6pB,iBAA+B,e,yhBCvH5D,gBAGA,UACA,UACA,SACA,UAWMC,EAAqB,EAAAhgC,IAAI8R,QAAQ,WACjCmuB,EAAqB,EAAAjgC,IAAI8R,QAAQ,WACjCouB,EAAiB,EAAAlgC,IAAI8R,QAAQ,WAC7BquB,EAAwB,EAAAngC,IAAI8R,QAAQ,WACpCsuB,EAAoB,CACxBpgC,IAAK,2BACL6R,KAAM,YAIK,EAAAwuB,oBAAsB33B,OAAO43B,OAAO,MAC/C,MAAMjvB,EAAS,CAEb,EAAArR,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WAEZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,WACZ,EAAA9R,IAAI8R,QAAQ,YAKRlJ,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KACzC,IAAK,IAAIxP,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAMmnC,EAAI33B,EAAGxP,EAAI,GAAM,EAAI,GACrBonC,EAAI53B,EAAGxP,EAAI,EAAK,EAAI,GACpBqnC,EAAI73B,EAAExP,EAAI,GAChBiY,EAAO9S,KAAK,CACVyB,IAAK,EAAAkR,SAASwvB,MAAMH,EAAGC,EAAGC,GAC1B5uB,KAAM,EAAAX,SAASyvB,OAAOJ,EAAGC,EAAGC,I,CAKhC,IAAK,IAAIrnC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM41B,EAAI,EAAQ,GAAJ51B,EACdiY,EAAO9S,KAAK,CACVyB,IAAK,EAAAkR,SAASwvB,MAAM1R,EAAGA,EAAGA,GAC1Bnd,KAAM,EAAAX,SAASyvB,OAAO3R,EAAGA,EAAGA,I,CAIhC,OAAO3d,CACR,EA7CgD,IA+CjD,IAAa4E,EAAb,cAAkC,EAAA1c,WAYhCC,YACoC2Q,GAElCxQ,QAFkC,KAAAwQ,gBAAAA,EAJnB,KAAAy2B,gBAAkB7mC,KAAK6B,SAAS,IAAI,EAAAkI,cACrC,KAAA0d,eAAiBznB,KAAK6mC,gBAAgB58B,MAOpDjK,KAAK8mC,eAAiB,IAAI,EAAAC,mBAC1B/mC,KAAKgnC,QAAU,CACb9S,WAAY+R,EACZte,WAAYue,EACZ3R,OAAQ4R,EACR3R,aAAc4R,EACdlM,yBAAqB5vB,EACrB28B,+BAAgCZ,EAChCtR,0BAA2B,EAAA3d,MAAM8vB,MAAMhB,EAAoBG,GAC3Dc,uCAAwCd,EACxCrR,kCAAmC,EAAA5d,MAAM8vB,MAAMhB,EAAoBG,GACnE9uB,KAAM,EAAA+uB,oBAAoBnB,QAC1BxK,cAAe36B,KAAK8mC,gBAEtB9mC,KAAKonC,uBACLpnC,KAAKqnC,UAAUrnC,KAAKoQ,gBAAgBM,WAAW42B,OAE/CtnC,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,wBAAwB,IAAM3e,KAAK8mC,eAAe/9B,WAC5G/I,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,SAAS,IAAM3e,KAAKqnC,UAAUrnC,KAAKoQ,gBAAgBM,WAAW42B,SAC1H,CA7BWhwB,aAA6B,OAAOtX,KAAKgnC,OAAS,CAoCrDK,UAAUC,EAAgB,CAAC,GACjC,MAAMhwB,EAAStX,KAAKgnC,QAkBpB,GAjBA1vB,EAAO4c,WAAaqT,EAAWD,EAAMpT,WAAY+R,GACjD3uB,EAAOqQ,WAAa4f,EAAWD,EAAM3f,WAAYue,GACjD5uB,EAAOid,OAASgT,EAAWD,EAAM/S,OAAQ4R,GACzC7uB,EAAOkd,aAAe+S,EAAWD,EAAM9S,aAAc4R,GACrD9uB,EAAO2vB,+BAAiCM,EAAWD,EAAME,oBAAqBnB,GAC9E/uB,EAAOyd,0BAA4B,EAAA3d,MAAM8vB,MAAM5vB,EAAOqQ,WAAYrQ,EAAO2vB,gCACzE3vB,EAAO6vB,uCAAyCI,EAAWD,EAAMG,4BAA6BnwB,EAAO2vB,gCACrG3vB,EAAO0d,kCAAoC,EAAA5d,MAAM8vB,MAAM5vB,EAAOqQ,WAAYrQ,EAAO6vB,wCACjF7vB,EAAO4iB,oBAAsBoN,EAAMpN,oBAAsBqN,EAAWD,EAAMpN,oBAAqB,EAAAwN,iBAAcp9B,EACzGgN,EAAO4iB,sBAAwB,EAAAwN,aACjCpwB,EAAO4iB,yBAAsB5vB,GAO3B,EAAA8M,MAAMuwB,SAASrwB,EAAO2vB,gCAAiC,CACzD,MAAMW,EAAU,GAChBtwB,EAAO2vB,+BAAiC,EAAA7vB,MAAMwwB,QAAQtwB,EAAO2vB,+BAAgCW,E,CAE/F,GAAI,EAAAxwB,MAAMuwB,SAASrwB,EAAO6vB,wCAAyC,CACjE,MAAMS,EAAU,GAChBtwB,EAAO6vB,uCAAyC,EAAA/vB,MAAMwwB,QAAQtwB,EAAO6vB,uCAAwCS,E,CAmB/G,GAjBAtwB,EAAOC,KAAO,EAAA+uB,oBAAoBnB,QAClC7tB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMO,MAAO,EAAAvB,oBAAoB,IAC7DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMQ,IAAK,EAAAxB,oBAAoB,IAC3DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMS,MAAO,EAAAzB,oBAAoB,IAC7DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMU,OAAQ,EAAA1B,oBAAoB,IAC9DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMW,KAAM,EAAA3B,oBAAoB,IAC5DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMY,QAAS,EAAA5B,oBAAoB,IAC/DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMa,KAAM,EAAA7B,oBAAoB,IAC5DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMc,MAAO,EAAA9B,oBAAoB,IAC7DhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMe,YAAa,EAAA/B,oBAAoB,IACnEhvB,EAAOC,KAAK,GAAKgwB,EAAWD,EAAMgB,UAAW,EAAAhC,oBAAoB,IACjEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMiB,YAAa,EAAAjC,oBAAoB,KACpEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMkB,aAAc,EAAAlC,oBAAoB,KACrEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMmB,WAAY,EAAAnC,oBAAoB,KACnEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMoB,cAAe,EAAApC,oBAAoB,KACtEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMqB,WAAY,EAAArC,oBAAoB,KACnEhvB,EAAOC,KAAK,IAAMgwB,EAAWD,EAAMsB,YAAa,EAAAtC,oBAAoB,KAChEgB,EAAMuB,aAAc,CACtB,MAAMC,EAAa91B,KAAKC,IAAIqE,EAAOC,KAAKrW,OAAS,GAAIomC,EAAMuB,aAAa3nC,QACxE,IAAK,IAAI7B,EAAI,EAAGA,EAAIypC,EAAYzpC,IAC9BiY,EAAOC,KAAKlY,EAAI,IAAMkoC,EAAWD,EAAMuB,aAAaxpC,GAAI,EAAAinC,oBAAoBjnC,EAAI,I,CAIpFW,KAAK8mC,eAAe/9B,QACpB/I,KAAKonC,uBACLpnC,KAAK6mC,gBAAgBx3B,KAAKrP,KAAKsX,OACjC,CAEOW,aAAa8wB,GAClB/oC,KAAKgpC,cAAcD,GACnB/oC,KAAK6mC,gBAAgBx3B,KAAKrP,KAAKsX,OACjC,CAEQ0xB,cAAcD,GAEpB,QAAaz+B,IAATy+B,EAMJ,OAAQA,GACN,KAAK,IACH/oC,KAAKgnC,QAAQ9S,WAAal0B,KAAKipC,eAAe/U,WAC9C,MACF,KAAK,IACHl0B,KAAKgnC,QAAQrf,WAAa3nB,KAAKipC,eAAethB,WAC9C,MACF,KAAK,IACH3nB,KAAKgnC,QAAQzS,OAASv0B,KAAKipC,eAAe1U,OAC1C,MACF,QACEv0B,KAAKgnC,QAAQzvB,KAAKwxB,GAAQ/oC,KAAKipC,eAAe1xB,KAAKwxB,QAhBrD,IAAK,IAAI1pC,EAAI,EAAGA,EAAIW,KAAKipC,eAAe1xB,KAAKrW,SAAU7B,EACrDW,KAAKgnC,QAAQzvB,KAAKlY,GAAKW,KAAKipC,eAAe1xB,KAAKlY,EAiBtD,CAEOwY,aAAavH,GAClBA,EAAStQ,KAAKgnC,SAEdhnC,KAAK6mC,gBAAgBx3B,KAAKrP,KAAKsX,OACjC,CAEQ8vB,uBACNpnC,KAAKipC,eAAiB,CACpB/U,WAAYl0B,KAAKgnC,QAAQ9S,WACzBvM,WAAY3nB,KAAKgnC,QAAQrf,WACzB4M,OAAQv0B,KAAKgnC,QAAQzS,OACrBhd,KAAMvX,KAAKgnC,QAAQzvB,KAAK4tB,QAE5B,GAGF,SAASoC,EACP2B,EACAC,GAEA,QAAkB7+B,IAAd4+B,EACF,IACE,OAAO,EAAAjjC,IAAI8R,QAAQmxB,E,CACnB,S,CAIJ,OAAOC,CACT,CA3JajtB,EAAY,GAapB,MAAAjK,kBAbQiK,GAAA,EAAAA,aAAAA,C,wFCzEb,gBACA,SAgBA,MAAaktB,UAAwB,EAAA5pC,WAYnCC,YACU4pC,GAERzpC,QAFQ,KAAAypC,WAAAA,EARM,KAAAC,gBAAkBtpC,KAAK6B,SAAS,IAAI,EAAAkI,cACpC,KAAAw/B,SAAWvpC,KAAKspC,gBAAgBr/B,MAChC,KAAAu/B,gBAAkBxpC,KAAK6B,SAAS,IAAI,EAAAkI,cACpC,KAAA0/B,SAAWzpC,KAAKwpC,gBAAgBv/B,MAChC,KAAAy/B,cAAgB1pC,KAAK6B,SAAS,IAAI,EAAAkI,cAClC,KAAA63B,OAAS5hC,KAAK0pC,cAAcz/B,MAM1CjK,KAAK2pC,OAAS,IAAIC,MAAS5pC,KAAKqpC,YAChCrpC,KAAK6pC,YAAc,EACnB7pC,KAAK8pC,QAAU,CACjB,CAEWC,gBACT,OAAO/pC,KAAKqpC,UACd,CAEWU,cAAUC,GAEnB,GAAIhqC,KAAKqpC,aAAeW,EACtB,OAKF,MAAMC,EAAW,IAAIL,MAAqBI,GAC1C,IAAK,IAAI3qC,EAAI,EAAGA,EAAI2T,KAAKC,IAAI+2B,EAAchqC,KAAKkB,QAAS7B,IACvD4qC,EAAS5qC,GAAKW,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgB7qC,IAEjDW,KAAK2pC,OAASM,EACdjqC,KAAKqpC,WAAaW,EAClBhqC,KAAK6pC,YAAc,CACrB,CAEW3oC,aACT,OAAOlB,KAAK8pC,OACd,CAEW5oC,WAAOipC,GAChB,GAAIA,EAAYnqC,KAAK8pC,QACnB,IAAK,IAAIzqC,EAAIW,KAAK8pC,QAASzqC,EAAI8qC,EAAW9qC,IACxCW,KAAK2pC,OAAOtqC,QAAKiL,EAGrBtK,KAAK8pC,QAAUK,CACjB,CAUOvhC,IAAI6E,GACT,OAAOzN,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBz8B,GAC1C,CAUO/E,IAAI+E,EAAe1G,GACxB/G,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBz8B,IAAU1G,CAC7C,CAOOvC,KAAKuC,GACV/G,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBlqC,KAAK8pC,UAAY/iC,EAC9C/G,KAAK8pC,UAAY9pC,KAAKqpC,YACxBrpC,KAAK6pC,cAAgB7pC,KAAK6pC,YAAc7pC,KAAKqpC,WAC7CrpC,KAAK0pC,cAAcr6B,KAAK,IAExBrP,KAAK8pC,SAET,CAOOM,UACL,GAAIpqC,KAAK8pC,UAAY9pC,KAAKqpC,WACxB,MAAM,IAAI1nC,MAAM,4CAIlB,OAFA3B,KAAK6pC,cAAgB7pC,KAAK6pC,YAAc7pC,KAAKqpC,WAC7CrpC,KAAK0pC,cAAcr6B,KAAK,GACjBrP,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBlqC,KAAK8pC,QAAU,GACzD,CAKWO,aACT,OAAOrqC,KAAK8pC,UAAY9pC,KAAKqpC,UAC/B,CAMOnlC,MACL,OAAOlE,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBlqC,KAAK8pC,UAAY,GAC3D,CAWOj/B,OAAO5I,EAAeqoC,KAAwBC,GAEnD,GAAID,EAAa,CACf,IAAK,IAAIjrC,EAAI4C,EAAO5C,EAAIW,KAAK8pC,QAAUQ,EAAajrC,IAClDW,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgB7qC,IAAMW,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgB7qC,EAAIirC,IAE9EtqC,KAAK8pC,SAAWQ,EAChBtqC,KAAKspC,gBAAgBj6B,KAAK,CAAE5B,MAAOxL,EAAOkb,OAAQmtB,G,CAIpD,IAAK,IAAIjrC,EAAIW,KAAK8pC,QAAU,EAAGzqC,GAAK4C,EAAO5C,IACzCW,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgB7qC,EAAIkrC,EAAMrpC,SAAWlB,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgB7qC,IAEzF,IAAK,IAAIA,EAAI,EAAGA,EAAIkrC,EAAMrpC,OAAQ7B,IAChCW,KAAK2pC,OAAO3pC,KAAKkqC,gBAAgBjoC,EAAQ5C,IAAMkrC,EAAMlrC,GAOvD,GALIkrC,EAAMrpC,QACRlB,KAAKwpC,gBAAgBn6B,KAAK,CAAE5B,MAAOxL,EAAOkb,OAAQotB,EAAMrpC,SAItDlB,KAAK8pC,QAAUS,EAAMrpC,OAASlB,KAAKqpC,WAAY,CACjD,MAAMmB,EAAexqC,KAAK8pC,QAAUS,EAAMrpC,OAAUlB,KAAKqpC,WACzDrpC,KAAK6pC,aAAeW,EACpBxqC,KAAK8pC,QAAU9pC,KAAKqpC,WACpBrpC,KAAK0pC,cAAcr6B,KAAKm7B,E,MAExBxqC,KAAK8pC,SAAWS,EAAMrpC,MAE1B,CAMOupC,UAAUxY,GACXA,EAAQjyB,KAAK8pC,UACf7X,EAAQjyB,KAAK8pC,SAEf9pC,KAAK6pC,aAAe5X,EACpBjyB,KAAK8pC,SAAW7X,EAChBjyB,KAAK0pC,cAAcr6B,KAAK4iB,EAC1B,CAEOyY,cAAczoC,EAAegwB,EAAe8Q,GACjD,KAAI9Q,GAAS,GAAb,CAGA,GAAIhwB,EAAQ,GAAKA,GAASjC,KAAK8pC,QAC7B,MAAM,IAAInoC,MAAM,+BAElB,GAAIM,EAAQ8gC,EAAS,EACnB,MAAM,IAAIphC,MAAM,gDAGlB,GAAIohC,EAAS,EAAG,CACd,IAAK,IAAI1jC,EAAI4yB,EAAQ,EAAG5yB,GAAK,EAAGA,IAC9BW,KAAK0I,IAAIzG,EAAQ5C,EAAI0jC,EAAQ/iC,KAAK4I,IAAI3G,EAAQ5C,IAEhD,MAAMsrC,EAAgB1oC,EAAQgwB,EAAQ8Q,EAAU/iC,KAAK8pC,QACrD,GAAIa,EAAe,EAEjB,IADA3qC,KAAK8pC,SAAWa,EACT3qC,KAAK8pC,QAAU9pC,KAAKqpC,YACzBrpC,KAAK8pC,UACL9pC,KAAK6pC,cACL7pC,KAAK0pC,cAAcr6B,KAAK,E,MAI5B,IAAK,IAAIhQ,EAAI,EAAGA,EAAI4yB,EAAO5yB,IACzBW,KAAK0I,IAAIzG,EAAQ5C,EAAI0jC,EAAQ/iC,KAAK4I,IAAI3G,EAAQ5C,G,CAGpD,CAQQ6qC,gBAAgBz8B,GACtB,OAAQzN,KAAK6pC,YAAcp8B,GAASzN,KAAKqpC,UAC3C,EAxNF,gB,+ECfA,iBAAgBuB,EAASC,EAAQC,EAAgB,GAC/C,GAAmB,iBAARD,EACT,OAAOA,EAIT,MAAME,EAAoBnB,MAAMoB,QAAQH,GAAO,GAAK,CAAC,EAErD,IAAK,MAAMhoC,KAAOgoC,EAEhBE,EAAaloC,GAAOioC,GAAS,EAAID,EAAIhoC,GAAQgoC,EAAIhoC,IAAQ+nC,EAAMC,EAAIhoC,GAAMioC,EAAQ,GAGnF,OAAOC,CACT,C,0JCjBA,gBAGA,IAAIE,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAUT,IAAiBj0B,EA2LAk0B,EAoCAvzB,EA8FjB,SAAgBwzB,EAAYrW,GAC1B,MAAMsW,EAAItW,EAAExvB,SAAS,IACrB,OAAO8lC,EAAErqC,OAAS,EAAI,IAAMqqC,EAAIA,CAClC,CAQA,SAAgBC,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,IAC7B,CArVa,EAAAhE,WAAqB,CAChCzhC,IAAK,YACL6R,KAAM,GAMR,SAAiBX,GACC,EAAAwvB,MAAhB,SAAsBH,EAAWC,EAAWC,EAAWtnC,GACrD,YAAUkL,IAANlL,EACK,IAAIksC,EAAY9E,KAAK8E,EAAY7E,KAAK6E,EAAY5E,KAAK4E,EAAYlsC,KAErE,IAAIksC,EAAY9E,KAAK8E,EAAY7E,KAAK6E,EAAY5E,IAC3D,EAEgB,EAAAE,OAAhB,SAAuBJ,EAAWC,EAAWC,EAAWtnC,EAAY,KAIlE,OAAQonC,GAAK,GAAKC,GAAK,GAAKC,GAAK,EAAItnC,KAAO,CAC9C,CACD,CAdD,CAAiB+X,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAmBzB,SAAiB,GAgDf,SAAgBywB,EAAQxwB,EAAewwB,GAGrC,OAFAwD,EAAKp4B,KAAKkV,MAAgB,IAAV0f,IACfqD,EAAIC,EAAIC,GAAMrzB,EAAK6zB,WAAWv0B,EAAMU,MAC9B,CACL7R,IAAKkR,EAASwvB,MAAMsE,EAAIC,EAAIC,EAAIC,GAChCtzB,KAAMX,EAASyvB,OAAOqE,EAAIC,EAAIC,EAAIC,GAEtC,CAtDgB,EAAAlE,MAAhB,SAAsB1+B,EAAYC,GAEhC,GADA2iC,GAAgB,IAAV3iC,EAAGqP,MAAe,IACb,IAAPszB,EACF,MAAO,CACLnlC,IAAKwC,EAAGxC,IACR6R,KAAMrP,EAAGqP,MAGb,MAAM8zB,EAAOnjC,EAAGqP,MAAQ,GAAM,IACxB+zB,EAAOpjC,EAAGqP,MAAQ,GAAM,IACxBg0B,EAAOrjC,EAAGqP,MAAQ,EAAK,IACvBi0B,EAAOvjC,EAAGsP,MAAQ,GAAM,IACxBk0B,EAAOxjC,EAAGsP,MAAQ,GAAM,IACxBm0B,EAAOzjC,EAAGsP,MAAQ,EAAK,IAM7B,OALAmzB,EAAKc,EAAM/4B,KAAKkV,OAAO0jB,EAAMG,GAAOX,GACpCF,EAAKc,EAAMh5B,KAAKkV,OAAO2jB,EAAMG,GAAOZ,GACpCD,EAAKc,EAAMj5B,KAAKkV,OAAO4jB,EAAMG,GAAOb,GAG7B,CAAEnlC,IAFGkR,EAASwvB,MAAMsE,EAAIC,EAAIC,GAErBrzB,KADDX,EAASyvB,OAAOqE,EAAIC,EAAIC,GAEvC,EAEgB,EAAAxD,SAAhB,SAAyBvwB,GACvB,OAA+B,MAAV,IAAbA,EAAMU,KAChB,EAEgB,EAAA8iB,oBAAhB,SAAoCpyB,EAAYC,EAAYyjC,GAC1D,MAAM17B,EAASsH,EAAK8iB,oBAAoBpyB,EAAGsP,KAAMrP,EAAGqP,KAAMo0B,GAC1D,GAAK17B,EAGL,OAAOsH,EAAKC,QACTvH,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,IAEpB,EAEgB,EAAA2kB,OAAhB,SAAuB/d,GACrB,MAAM+0B,GAA0B,IAAb/0B,EAAMU,QAAiB,EAE1C,OADCmzB,EAAIC,EAAIC,GAAMrzB,EAAK6zB,WAAWQ,GACxB,CACLlmC,IAAKkR,EAASwvB,MAAMsE,EAAIC,EAAIC,GAC5BrzB,KAAMq0B,EAEV,EAEgB,EAAAvE,QAAO,EASP,EAAAtN,gBAAhB,SAAgCljB,EAAeg1B,GAE7C,OADAhB,EAAkB,IAAbh0B,EAAMU,KACJ8vB,EAAQxwB,EAAQg0B,EAAKgB,EAAU,IACxC,EAEgB,EAAA/0B,WAAhB,SAA2BD,GACzB,MAAO,CAAEA,EAAMU,MAAQ,GAAM,IAAOV,EAAMU,MAAQ,GAAM,IAAOV,EAAMU,MAAQ,EAAK,IACpF,CACD,CAjED,CAAiB,EAAAV,QAAA,EAAAA,MAAK,KAsEtB,SAAiB,GACf,IAAIi1B,EACAC,EACJ,IAAK,EAAAC,OAAQ,CACX,MAAMtnB,EAAS/kB,SAASC,cAAc,UACtC8kB,EAAOxd,MAAQ,EACfwd,EAAO9e,OAAS,EAChB,MAAM8mB,EAAMhI,EAAOiI,WAAW,KAAM,CAClCsf,oBAAoB,IAElBvf,IACFof,EAAOpf,EACPof,EAAKI,yBAA2B,OAChCH,EAAeD,EAAKK,qBAAqB,EAAG,EAAG,EAAG,G,CAWtC,EAAA30B,QAAhB,SAAwB9R,GAEtB,GAAIA,EAAI0mC,MAAM,kBACZ,OAAQ1mC,EAAI/E,QACV,KAAK,EAIH,OAHA+pC,EAAK7a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IACzC0Z,EAAK9a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IACzC2Z,EAAK/a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IAClC1Z,EAAKC,QAAQkzB,EAAIC,EAAIC,GAE9B,KAAK,EAKH,OAJAF,EAAK7a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IACzC0Z,EAAK9a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IACzC2Z,EAAK/a,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IACzC4Z,EAAKhb,SAASnqB,EAAIk/B,MAAM,EAAG,GAAG3T,OAAO,GAAI,IAClC1Z,EAAKC,QAAQkzB,EAAIC,EAAIC,EAAIC,GAElC,KAAK,EACH,MAAO,CACLnlC,MACA6R,MAAOsY,SAASnqB,EAAIk/B,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACLl/B,MACA6R,KAAMsY,SAASnqB,EAAIk/B,MAAM,GAAI,MAAQ,GAM7C,MAAMyH,EAAY3mC,EAAI0mC,MAAM,sFAC5B,GAAIC,EAKF,OAJA3B,EAAK7a,SAASwc,EAAU,IACxB1B,EAAK9a,SAASwc,EAAU,IACxBzB,EAAK/a,SAASwc,EAAU,IACxBxB,EAAKp4B,KAAKkV,MAAoE,UAA5C5d,IAAjBsiC,EAAU,GAAmB,EAAIC,WAAWD,EAAU,MAChE90B,EAAKC,QAAQkzB,EAAIC,EAAIC,EAAIC,GAIlC,IAAKiB,IAASC,EACZ,MAAM,IAAI3qC,MAAM,uCAOlB,GAFA0qC,EAAK9d,UAAY+d,EACjBD,EAAK9d,UAAYtoB,EACa,iBAAnBomC,EAAK9d,UACd,MAAM,IAAI5sB,MAAM,uCAOlB,GAJA0qC,EAAK7d,SAAS,EAAG,EAAG,EAAG,IACtByc,EAAIC,EAAIC,EAAIC,GAAMiB,EAAKS,aAAa,EAAG,EAAG,EAAG,GAAG1rB,KAGtC,MAAPgqB,EACF,MAAM,IAAIzpC,MAAM,uCAMlB,MAAO,CACLmW,KAAMX,EAASyvB,OAAOqE,EAAIC,EAAIC,EAAIC,GAClCnlC,MAEJ,CACD,CA7FD,CAAiB,EAAAA,MAAA,EAAAA,IAAG,KAkGpB,SAAiB,GAsBf,SAAgB8mC,EAAmBvG,EAAWC,EAAWC,GACvD,MAAMsG,EAAKxG,EAAI,IACTyG,EAAKxG,EAAI,IACTyG,EAAKxG,EAAI,IAIf,MAAY,OAHDsG,GAAM,OAAUA,EAAK,MAAQh6B,KAAKm6B,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQj6B,KAAKm6B,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQl6B,KAAKm6B,KAAKD,EAAK,MAAS,MAAO,KAEzE,CAvBgB,EAAAE,kBAAhB,SAAkC/B,GAChC,OAAO0B,EACJ1B,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd,EACJ,EAUgB,EAAA0B,mBAAkB,CASnC,CA/BD,CAAiB1B,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAoCpB,SAAiBvzB,GAyCf,SAAgBu1B,EAAgBC,EAAgBC,EAAgBrB,GAG9D,MAAMH,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IAC7B,IAAI1B,EAAO2B,GAAU,GAAM,IACvB1B,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAW,EAAK,IACvBC,EAAKhC,EAAcH,EAAI0B,mBAAmBnB,EAAKC,EAAKC,GAAMT,EAAI0B,mBAAmBhB,EAAKC,EAAKC,IAC/F,KAAOuB,EAAKtB,IAAUN,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAO54B,KAAKG,IAAI,EAAGH,KAAKgb,KAAW,GAAN4d,IAC7BC,GAAO74B,KAAKG,IAAI,EAAGH,KAAKgb,KAAW,GAAN6d,IAC7BC,GAAO94B,KAAKG,IAAI,EAAGH,KAAKgb,KAAW,GAAN8d,IAC7B0B,EAAKhC,EAAcH,EAAI0B,mBAAmBnB,EAAKC,EAAKC,GAAMT,EAAI0B,mBAAmBhB,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAEA,SAAgB2B,EAAkBH,EAAgBC,EAAgBrB,GAGhE,MAAMH,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IAC7B,IAAI1B,EAAO2B,GAAU,GAAM,IACvB1B,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAW,EAAK,IACvBC,EAAKhC,EAAcH,EAAI0B,mBAAmBnB,EAAKC,EAAKC,GAAMT,EAAI0B,mBAAmBhB,EAAKC,EAAKC,IAC/F,KAAOuB,EAAKtB,IAAUN,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAM54B,KAAKC,IAAI,IAAM24B,EAAM54B,KAAKgb,KAAmB,IAAb,IAAM4d,KAC5CC,EAAM74B,KAAKC,IAAI,IAAM44B,EAAM74B,KAAKgb,KAAmB,IAAb,IAAM6d,KAC5CC,EAAM94B,KAAKC,IAAI,IAAM64B,EAAM94B,KAAKgb,KAAmB,IAAb,IAAM8d,KAC5C0B,EAAKhC,EAAcH,EAAI0B,mBAAmBnB,EAAKC,EAAKC,GAAMT,EAAI0B,mBAAmBhB,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAjEgB,EAAAlR,oBAAhB,SAAoC0S,EAAgBC,EAAgBrB,GAClE,MAAMwB,EAAMrC,EAAI+B,kBAAkBE,GAAU,GACtCK,EAAMtC,EAAI+B,kBAAkBG,GAAU,GAE5C,GADW/B,EAAckC,EAAKC,GACrBzB,EAAO,CACd,GAAIyB,EAAMD,EAAK,CACb,MAAME,EAAUP,EAAgBC,EAAQC,EAAQrB,GAC1C2B,EAAerC,EAAckC,EAAKrC,EAAI+B,kBAAkBQ,GAAW,IACzE,GAAIC,EAAe3B,EAAO,CACxB,MAAM4B,EAAUL,EAAkBH,EAAQC,EAAQrB,GAElD,OAAO2B,EADcrC,EAAckC,EAAKrC,EAAI+B,kBAAkBU,GAAW,IACpCF,EAAUE,C,CAEjD,OAAOF,C,CAET,MAAMA,EAAUH,EAAkBH,EAAQC,EAAQrB,GAC5C2B,EAAerC,EAAckC,EAAKrC,EAAI+B,kBAAkBQ,GAAW,IACzE,GAAIC,EAAe3B,EAAO,CACxB,MAAM4B,EAAUT,EAAgBC,EAAQC,EAAQrB,GAEhD,OAAO2B,EADcrC,EAAckC,EAAKrC,EAAI+B,kBAAkBU,GAAW,IACpCF,EAAUE,C,CAEjD,OAAOF,C,CAGX,EAEgB,EAAAP,gBAAe,EAoBf,EAAAI,kBAAiB,EAqBjB,EAAA9B,WAAhB,SAA2B5kC,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EAC3E,EAEgB,EAAAgR,QAAhB,SAAwByuB,EAAWC,EAAWC,EAAWtnC,GACvD,MAAO,CACL6G,IAAKkR,EAASwvB,MAAMH,EAAGC,EAAGC,EAAGtnC,GAC7B0Y,KAAMX,EAASyvB,OAAOJ,EAAGC,EAAGC,EAAGtnC,GAEnC,CACD,CA5FD,CAAiB0Y,EAAA,EAAAA,OAAA,EAAAA,KAAI,KA8FrB,gBAWA,iB,wFCtUA,eACA,UACA,UACA,UACA,SACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAGA,UACA,UACA,UAGA,IAAIi2B,GAA2B,EAE/B,MAAsB95B,UAAqB,EAAAzU,WAqDzCC,YACE4J,GAEAzJ,QAxCe,KAAAouC,UAAYhuC,KAAK6B,SAAS,IAAI,EAAAkI,cAC/B,KAAAkkC,SAAWjuC,KAAKguC,UAAU/jC,MACzB,KAAAikC,QAAUluC,KAAK6B,SAAS,IAAI,EAAAkI,cAC7B,KAAAokC,OAASnuC,KAAKkuC,QAAQjkC,MAC5B,KAAAmkC,YAAcpuC,KAAK6B,SAAS,IAAI,EAAAkI,cAC1B,KAAAxH,WAAavC,KAAKouC,YAAYnkC,MAC7B,KAAAokC,UAAYruC,KAAK6B,SAAS,IAAI,EAAAkI,cAC/B,KAAAjI,SAAW9B,KAAKquC,UAAUpkC,MACvB,KAAAqkC,eAAiBtuC,KAAK6B,SAAS,IAAI,EAAAkI,cACtC,KAAAwkC,cAAgBvuC,KAAKsuC,eAAerkC,MAO1C,KAAAiU,UAAYle,KAAK6B,SAAS,IAAI,EAAAkI,cA2BtC/J,KAAKyV,sBAAwB,IAAI,EAAA+4B,qBACjCxuC,KAAK0e,eAAiB1e,KAAK6B,SAAS,IAAI,EAAA4sC,eAAeplC,IACvDrJ,KAAKyV,sBAAsBI,WAAW,EAAA5D,gBAAiBjS,KAAK0e,gBAC5D1e,KAAKyJ,eAAiBzJ,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAg5B,gBAC9E1uC,KAAKyV,sBAAsBI,WAAW,EAAA5F,eAAgBjQ,KAAKyJ,gBAC3DzJ,KAAKib,YAAcjb,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAi5B,aAC3E3uC,KAAKyV,sBAAsBI,WAAW,EAAA+4B,YAAa5uC,KAAKib,aACxDjb,KAAK4G,YAAc5G,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAm5B,aAAa,IAAM7uC,KAAKqjB,oBACnGrjB,KAAKyV,sBAAsBI,WAAW,EAAAia,aAAc9vB,KAAK4G,aACzD5G,KAAKqe,iBAAmBre,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAo5B,mBAChF9uC,KAAKyV,sBAAsBI,WAAW,EAAAk5B,kBAAmB/uC,KAAKqe,kBAC9Dre,KAAKgvC,eAAiBhvC,KAAK6B,SAAS7B,KAAKyV,sBAAsBC,eAAe,EAAAu5B,iBAC9EjvC,KAAKyV,sBAAsBI,WAAW,EAAAq5B,gBAAiBlvC,KAAKgvC,gBAC5DhvC,KAAKmvC,gBAAkBnvC,KAAKyV,sBAAsBC,eAAe,EAAA05B,gBACjEpvC,KAAKyV,sBAAsBI,WAAW,EAAAw5B,gBAAiBrvC,KAAKmvC,iBAC5DnvC,KAAKqQ,gBAAkBrQ,KAAKyV,sBAAsBC,eAAe,EAAA45B,gBACjEtvC,KAAKyV,sBAAsBI,WAAW,EAAA3D,gBAAiBlS,KAAKqQ,iBAG5DrQ,KAAK+V,cAAgB/V,KAAK6B,SAAS,IAAI,EAAA0tC,aAAavvC,KAAKyJ,eAAgBzJ,KAAKmvC,gBAAiBnvC,KAAK4G,YAAa5G,KAAKib,YAAajb,KAAK0e,eAAgB1e,KAAKqQ,gBAAiBrQ,KAAKqe,iBAAkBre,KAAKgvC,iBAC1MhvC,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK+V,cAAcxT,WAAYvC,KAAKouC,cAC/DpuC,KAAK6B,SAAS7B,KAAK+V,eAGnB/V,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAKyJ,eAAe3H,SAAU9B,KAAKquC,YAC9DruC,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK4G,YAAYunC,OAAQnuC,KAAKkuC,UACzDluC,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAK4G,YAAYqnC,SAAUjuC,KAAKguC,YAC3DhuC,KAAK6B,SAAS7B,KAAK4G,YAAY86B,aAAY,IAAO1hC,KAAKwvC,aAAaC,qBACpEzvC,KAAK6B,SAAS7B,KAAK0e,eAAeC,uBAAuB,eAAe7d,GAAKd,KAAK0vC,+BAA+B5uC,MACjHd,KAAK6B,SAAS7B,KAAKyJ,eAAetH,UAAS8H,IACzCjK,KAAKke,UAAU7O,KAAK,CAAE7L,SAAUxD,KAAKyJ,eAAe5F,OAAO+B,MAAOic,OAAQ,IAC1E7hB,KAAK+V,cAAc45B,eAAe3vC,KAAKyJ,eAAe5F,OAAOskB,UAAWnoB,KAAKyJ,eAAe5F,OAAO+rC,aAAa,KAElH5vC,KAAK6B,SAAS7B,KAAK+V,cAAc5T,UAAS8H,IACxCjK,KAAKke,UAAU7O,KAAK,CAAE7L,SAAUxD,KAAKyJ,eAAe5F,OAAO+B,MAAOic,OAAQ,IAC1E7hB,KAAK+V,cAAc45B,eAAe3vC,KAAKyJ,eAAe5F,OAAOskB,UAAWnoB,KAAKyJ,eAAe5F,OAAO+rC,aAAa,KAIlH5vC,KAAKwvC,aAAexvC,KAAK6B,SAAS,IAAI,EAAAguC,aAAY,CAACzuB,EAAM0uB,IAAkB9vC,KAAK+V,cAAcg6B,MAAM3uB,EAAM0uB,MAC1G9vC,KAAK6B,UAAS,IAAA6U,cAAa1W,KAAKwvC,aAAajB,cAAevuC,KAAKsuC,iBAEjEtuC,KAAK6B,UAAS,IAAAyB,eAAa,K,MACR,QAAjB,EAAAtD,KAAKgwC,oBAAY,SAAEzmC,UACnBvJ,KAAKgwC,kBAAe1lC,CAAS,IAEjC,CAxEWnI,eAOT,OANKnC,KAAKiwC,eACRjwC,KAAKiwC,aAAejwC,KAAK6B,SAAS,IAAI,EAAAkI,cACtC/J,KAAKke,UAAUjU,OAAMhD,I,MACF,QAAjB,EAAAjH,KAAKiwC,oBAAY,SAAE5gC,KAAKpI,EAAGzD,SAAS,KAGjCxD,KAAKiwC,aAAahmC,KAC3B,CAEWsD,WAAiB,OAAOvN,KAAKyJ,eAAe8D,IAAM,CAClD7M,WAAiB,OAAOV,KAAKyJ,eAAe/I,IAAM,CAClDwX,cAAwB,OAAOlY,KAAKyJ,eAAeyO,OAAS,CAC5D7O,cAAwC,OAAOrJ,KAAK0e,eAAerV,OAAS,CAC5EA,YAAQA,GACjB,IAAK,MAAMxG,KAAOwG,EAChBrJ,KAAK0e,eAAerV,QAAQxG,GAAOwG,EAAQxG,EAE/C,CAwDOqtC,MAAM9uB,EAA2B9Q,GACtCtQ,KAAKwvC,aAAaU,MAAM9uB,EAAM9Q,EAChC,CAWO6/B,UAAU/uB,EAA2BgvB,GACtCpwC,KAAKib,YAAY2F,UAAY,EAAAyvB,aAAaC,OAASvC,IACrD/tC,KAAKib,YAAYjJ,KAAK,qDACtB+7B,GAA2B,GAE7B/tC,KAAKwvC,aAAaW,UAAU/uB,EAAMgvB,EACpC,CAEO3zB,OAAO9Q,EAAWC,GACnB2kC,MAAM5kC,IAAM4kC,MAAM3kC,KAItBD,EAAIqH,KAAKG,IAAIxH,EAAG,EAAA6kC,cAChB5kC,EAAIoH,KAAKG,IAAIvH,EAAG,EAAA6kC,cAEhBzwC,KAAKyJ,eAAegT,OAAO9Q,EAAGC,GAChC,CAOO8kC,OAAOC,EAA2Brf,GAAqB,GAC5DtxB,KAAKyJ,eAAeinC,OAAOC,EAAWrf,EACxC,CASO7sB,YAAYmd,EAAc/D,EAA+BgE,GAC9D7hB,KAAKyJ,eAAehF,YAAYmd,EAAM/D,EAAqBgE,EAC7D,CAMO+uB,YAAYC,GACjB7wC,KAAKyJ,eAAemnC,YAAYC,EAClC,CAKOC,cACL9wC,KAAKyJ,eAAeqnC,aACtB,CAKOztB,iBACLrjB,KAAKyJ,eAAe4Z,gBACtB,CAEO0tB,aAAaxgC,GAClBvQ,KAAKyJ,eAAesnC,aAAaxgC,EACnC,CAGOygC,mBAAmBlU,EAAyBxsB,GACjD,OAAOtQ,KAAK+V,cAAci7B,mBAAmBlU,EAAIxsB,EACnD,CAGO2gC,mBAAmBnU,EAAyBxsB,GACjD,OAAOtQ,KAAK+V,cAAck7B,mBAAmBnU,EAAIxsB,EACnD,CAGO4gC,mBAAmBpU,EAAyBxsB,GACjD,OAAOtQ,KAAK+V,cAAcm7B,mBAAmBpU,EAAIxsB,EACnD,CAGO6gC,mBAAmBj6B,EAAe5G,GACvC,OAAOtQ,KAAK+V,cAAco7B,mBAAmBj6B,EAAO5G,EACtD,CAEUiF,SACJvV,KAAK0e,eAAehO,WAAW0gC,aACjCpxC,KAAKqxC,oBAET,CAEOh7B,QACLrW,KAAK+V,cAAcM,QACnBrW,KAAKyJ,eAAe4M,QACpBrW,KAAKmvC,gBAAgB94B,QACrBrW,KAAK4G,YAAYyP,QACjBrW,KAAKqe,iBAAiBhI,OACxB,CAEQq5B,+BAA+B3oC,G,MACjCA,EACF/G,KAAKqxC,sBAEY,QAAjB,EAAArxC,KAAKgwC,oBAAY,SAAEzmC,UACnBvJ,KAAKgwC,kBAAe1lC,EAExB,CAEU+mC,qBACR,IAAKrxC,KAAKgwC,aAAc,CACtB,MAAMsB,EAA6B,GACnCA,EAAY9sC,KAAKxE,KAAKuC,WAAW,EAAAgvC,8BAA8BhwC,KAAK,KAAMvB,KAAKyJ,kBAC/E6nC,EAAY9sC,KAAKxE,KAAKkxC,mBAAmB,CAAEM,MAAO,MAAO,MACvD,IAAAD,+BAA8BvxC,KAAKyJ,iBAC5B,MAETzJ,KAAKgwC,aAAe,CAClBzmC,QAAS,KACP,IAAK,MAAMowB,KAAK2X,EACd3X,EAAEpwB,S,GAKZ,EApPF,gB,qGCxBA,mCACU,KAAAkoC,WAAgC,GAEhC,KAAAC,WAAqB,CAwC/B,CAtCaznC,YAmBT,OAlBKjK,KAAK2xC,SACR3xC,KAAK2xC,OAAUn+B,IACbxT,KAAKyxC,WAAWjtC,KAAKgP,GACF,CACjBjK,QAAS,KACP,IAAKvJ,KAAK0xC,UACR,IAAK,IAAIryC,EAAI,EAAGA,EAAIW,KAAKyxC,WAAWvwC,OAAQ7B,IAC1C,GAAIW,KAAKyxC,WAAWpyC,KAAOmU,EAEzB,YADAxT,KAAKyxC,WAAW5mC,OAAOxL,EAAG,E,KAUjCW,KAAK2xC,MACd,CAEOtiC,KAAKuiC,EAASC,GACnB,MAAMC,EAA2B,GACjC,IAAK,IAAIzyC,EAAI,EAAGA,EAAIW,KAAKyxC,WAAWvwC,OAAQ7B,IAC1CyyC,EAAMttC,KAAKxE,KAAKyxC,WAAWpyC,IAE7B,IAAK,IAAIA,EAAI,EAAGA,EAAIyyC,EAAM5wC,OAAQ7B,IAChCyyC,EAAMzyC,GAAG0yC,UAAKznC,EAAWsnC,EAAMC,EAEnC,CAEOtoC,UACDvJ,KAAKyxC,aACPzxC,KAAKyxC,WAAWvwC,OAAS,GAE3BlB,KAAK0xC,WAAY,CACnB,GAGF,wBAAgCM,EAAiBC,GAC/C,OAAOD,GAAKlxC,GAAKmxC,EAAG5iC,KAAKvO,IAC3B,C,8hBC7DA,gBACA,UACA,UACA,SACA,SACA,UACA,UAEA,SACA,SACA,UACA,UACA,UACA,UAEA,UAKMoxC,EAAoC,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAgCnFC,EAAyB,OAQ/B,SAASC,EAAoBC,EAAWC,GACtC,GAAID,EAAI,GACN,OAAOC,EAAKC,cAAe,EAE7B,OAAQF,GACN,KAAK,EAAG,QAASC,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,CACT,CAEA,IAAYztB,GAAZ,SAAYA,GACV,iDACA,kDACD,CAHD,CAAYA,EAAA,EAAAA,2BAAA,EAAAA,yBAAwB,KASpC,IAAI+uB,EAAQ,EASZ,MAAatE,UAAqB,EAAA/vC,WAqDhCC,YACmBgK,EACA0lC,EACAvgB,EACA3T,EACA7K,EACAC,EACAyjC,EACAC,EACAC,EAAiC,IAAI,EAAAC,sBAEtDr0C,QAViB,KAAA6J,eAAAA,EACA,KAAA0lC,gBAAAA,EACA,KAAAvgB,aAAAA,EACA,KAAA3T,YAAAA,EACA,KAAA7K,gBAAAA,EACA,KAAAC,gBAAAA,EACA,KAAAyjC,kBAAAA,EACA,KAAAC,gBAAAA,EACA,KAAAC,QAAAA,EA7DX,KAAAE,aAA4B,IAAIC,YAAY,MAC5C,KAAAC,eAAgC,IAAI,EAAAC,cACpC,KAAAC,aAA4B,IAAI,EAAAC,YAChC,KAAAxd,UAAsB,IAAI,EAAApmB,SAC1B,KAAA6jC,aAAe,GACf,KAAAC,UAAY,GAEV,KAAAC,kBAA8B,GAC9B,KAAAC,eAA2B,GAE7B,KAAAC,aAA+B,EAAAhwB,kBAAkBgmB,QAEjD,KAAAiK,uBAAyC,EAAAjwB,kBAAkBgmB,QAIlD,KAAAkK,eAAiB90C,KAAK6B,SAAS,IAAI,EAAAkI,cACpC,KAAAiM,cAAgBhW,KAAK80C,eAAe7qC,MACnC,KAAA8qC,sBAAwB/0C,KAAK6B,SAAS,IAAI,EAAAkI,cAC3C,KAAAkM,qBAAuBjW,KAAK+0C,sBAAsB9qC,MACjD,KAAA+qC,gBAAkBh1C,KAAK6B,SAAS,IAAI,EAAAkI,cACrC,KAAAqM,eAAiBpW,KAAKg1C,gBAAgB/qC,MACrC,KAAAgrC,oBAAsBj1C,KAAK6B,SAAS,IAAI,EAAAkI,cACzC,KAAAmM,mBAAqBlW,KAAKi1C,oBAAoBhrC,MAC7C,KAAAirC,wBAA0Bl1C,KAAK6B,SAAS,IAAI,EAAAkI,cAC7C,KAAAqT,uBAAyBpd,KAAKk1C,wBAAwBjrC,MACrD,KAAAkrC,+BAAiCn1C,KAAK6B,SAAS,IAAI,EAAAkI,cACpD,KAAAuM,8BAAgCtW,KAAKm1C,+BAA+BlrC,MAEnE,KAAAmrC,YAAcp1C,KAAK6B,SAAS,IAAI,EAAAkI,cACjC,KAAA3H,WAAapC,KAAKo1C,YAAYnrC,MAC7B,KAAAorC,WAAar1C,KAAK6B,SAAS,IAAI,EAAAkI,cAChC,KAAAvH,UAAYxC,KAAKq1C,WAAWprC,MAC3B,KAAAuK,cAAgBxU,KAAK6B,SAAS,IAAI,EAAAkI,cACnC,KAAA0K,aAAezU,KAAKwU,cAAcvK,MACjC,KAAAmkC,YAAcpuC,KAAK6B,SAAS,IAAI,EAAAkI,cACjC,KAAAxH,WAAavC,KAAKouC,YAAYnkC,MAC7B,KAAAiU,UAAYle,KAAK6B,SAAS,IAAI,EAAAkI,cAC/B,KAAA5H,SAAWnC,KAAKke,UAAUjU,MACzB,KAAA6K,eAAiB9U,KAAK6B,SAAS,IAAI,EAAAkI,cACpC,KAAAgL,cAAgB/U,KAAK8U,eAAe7K,MACnC,KAAAqrC,SAAWt1C,KAAK6B,SAAS,IAAI,EAAAkI,cAC9B,KAAAyM,QAAUxW,KAAKs1C,SAASrrC,MAEhC,KAAAsrC,YAA2B,CACjCC,QAAQ,EACRC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfnyC,SAAU,GAsvFJ,KAAAoyC,eAAiB,CAAC,IAAD,SAvuFvB51C,KAAK6B,SAAS7B,KAAKg0C,SACnBh0C,KAAK61C,iBAAmB,IAAIC,EAAgB91C,KAAKyJ,gBAGjDzJ,KAAKonB,cAAgBpnB,KAAKyJ,eAAe5F,OACzC7D,KAAK6B,SAAS7B,KAAKyJ,eAAeyO,QAAQmP,kBAAiBvmB,GAAKd,KAAKonB,cAAgBtmB,EAAEwmB,gBAKvFtnB,KAAKg0C,QAAQ+B,uBAAsB,CAAC7+B,EAAO8+B,KACzCh2C,KAAKib,YAAYC,MAAM,qBAAsB,CAAE+6B,WAAYj2C,KAAKg0C,QAAQkC,cAAch/B,GAAQ8+B,OAAQA,EAAOG,WAAY,IAE3Hn2C,KAAKg0C,QAAQoC,uBAAsBl/B,IACjClX,KAAKib,YAAYC,MAAM,qBAAsB,CAAE+6B,WAAYj2C,KAAKg0C,QAAQkC,cAAch/B,IAAS,IAEjGlX,KAAKg0C,QAAQqC,2BAA0BC,IACrCt2C,KAAKib,YAAYC,MAAM,yBAA0B,CAAEo7B,QAAO,IAE5Dt2C,KAAKg0C,QAAQuC,uBAAsB,CAACN,EAAY32B,EAAQ8B,KACtDphB,KAAKib,YAAYC,MAAM,qBAAsB,CAAE+6B,aAAY32B,SAAQ8B,QAAO,IAE5EphB,KAAKg0C,QAAQwC,uBAAsB,CAACt/B,EAAOoI,EAAQm3B,KAClC,SAAXn3B,IACFm3B,EAAUA,EAAQN,WAEpBn2C,KAAKib,YAAYC,MAAM,qBAAsB,CAAE+6B,WAAYj2C,KAAKg0C,QAAQkC,cAAch/B,GAAQoI,SAAQm3B,WAAU,IAMlHz2C,KAAKg0C,QAAQ0C,iBAAgB,CAACt1B,EAAMnf,EAAOC,IAAQlC,KAAK22C,MAAMv1B,EAAMnf,EAAOC,KAK3ElC,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK42C,YAAYZ,KAC3Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAK82C,WAAWd,KAC9Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK+2C,SAASf,KACxEh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAKg3C,YAAYhB,KAC/Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKi3C,WAAWjB,KAC1Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKk3C,cAAclB,KAC7Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKm3C,eAAenB,KAC9Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKo3C,eAAepB,KAC9Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKq3C,oBAAoBrB,KACnFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKs3C,mBAAmBtB,KAClFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKu3C,eAAevB,KAC9Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKw3C,iBAAiBxB,KAChFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKy3C,eAAezB,GAAQ,KACtFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAKy3C,eAAezB,GAAQ,KACnGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK23C,YAAY3B,GAAQ,KACnFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAK23C,YAAY3B,GAAQ,KAChGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK43C,YAAY5B,KAC3Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK63C,YAAY7B,KAC3Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK83C,YAAY9B,KAC3Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK+3C,SAAS/B,KACxEh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKg4C,WAAWhC,KAC1Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKi4C,WAAWjC,KAC1Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKk4C,kBAAkBlC,KACjFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKm4C,gBAAgBnC,KAC/Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKo4C,kBAAkBpC,KACjFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKq4C,yBAAyBrC,KACxFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKs4C,4BAA4BtC,KAC3Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAKu4C,8BAA8BvC,KAC1Gh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKw4C,gBAAgBxC,KAC/Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKy4C,kBAAkBzC,KACjFh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK04C,WAAW1C,KAC1Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK24C,SAAS3C,KACxEh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK44C,QAAQ5C,KACvEh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAK64C,eAAe7C,KAC3Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAK84C,UAAU9C,KACzEh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAK+4C,iBAAiB/C,KAC7Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKg5C,eAAehD,KAC9Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKi5C,aAAajD,KAC5Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKlG,MAAO,MAAOwE,GAAUh2C,KAAKk5C,oBAAoBlD,KAChGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAKm5C,UAAUnD,KAC7Fh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAKo5C,eAAepD,KAClGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKq5C,gBAAgBrD,KAC/Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKs5C,WAAWtD,KAC1Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKu5C,cAAcvD,KAC7Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEM,MAAO,MAAOwE,GAAUh2C,KAAKw5C,cAAcxD,KAC7Eh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAMrF,MAAO,MAAOwE,GAAUh2C,KAAKy5C,cAAczD,KAClGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAMrF,MAAO,MAAOwE,GAAUh2C,KAAK05C,cAAc1D,KAClGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAK25C,gBAAgB3D,KACnGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAE2F,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAK45C,YAAY5D,GAAQ,KACvGh2C,KAAKg0C,QAAQ9C,mBAAmB,CAAEwG,OAAQ,IAAKb,cAAe,IAAKrF,MAAO,MAAOwE,GAAUh2C,KAAK45C,YAAY5D,GAAQ,KAKpHh2C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAGsiC,KAAK,IAAM95C,KAAK+5C,SAClD/5C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAGwiC,IAAI,IAAMh6C,KAAKi6C,aACjDj6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAG0iC,IAAI,IAAMl6C,KAAKi6C,aACjDj6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAG2iC,IAAI,IAAMn6C,KAAKi6C,aACjDj6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAGoM,IAAI,IAAM5jB,KAAKo6C,mBACjDp6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAG6iC,IAAI,IAAMr6C,KAAKs6C,cACjDt6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAG+iC,IAAI,IAAMv6C,KAAKw6C,QACjDx6C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAGijC,IAAI,IAAMz6C,KAAK06C,aACjD16C,KAAKg0C,QAAQ6F,kBAAkB,EAAAriC,GAAGmjC,IAAI,IAAM36C,KAAK46C,YAGjD56C,KAAKg0C,QAAQ6F,kBAAkB,EAAAgB,GAAGC,KAAK,IAAM96C,KAAKyN,UAClDzN,KAAKg0C,QAAQ6F,kBAAkB,EAAAgB,GAAGE,KAAK,IAAM/6C,KAAKg7C,aAClDh7C,KAAKg0C,QAAQ6F,kBAAkB,EAAAgB,GAAGI,KAAK,IAAMj7C,KAAKk7C,WAMlDl7C,KAAKg0C,QAAQ7C,mBAAmB,EAAG,IAAI,EAAAgK,YAAW/5B,IAAUphB,KAAKo7C,SAASh6B,GAAOphB,KAAKq7C,YAAYj6B,IAAc,MAEhHphB,KAAKg0C,QAAQ7C,mBAAmB,EAAG,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKq7C,YAAYj6B,MAE3EphB,KAAKg0C,QAAQ7C,mBAAmB,EAAG,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKo7C,SAASh6B,MAGxEphB,KAAKg0C,QAAQ7C,mBAAmB,EAAG,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKs7C,wBAAwBl6B,MAKvFphB,KAAKg0C,QAAQ7C,mBAAmB,EAAG,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKu7C,aAAan6B,MAE5EphB,KAAKg0C,QAAQ7C,mBAAmB,GAAI,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKw7C,mBAAmBp6B,MAEnFphB,KAAKg0C,QAAQ7C,mBAAmB,GAAI,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAKy7C,mBAAmBr6B,MAEnFphB,KAAKg0C,QAAQ7C,mBAAmB,GAAI,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAK07C,uBAAuBt6B,MAavFphB,KAAKg0C,QAAQ7C,mBAAmB,IAAK,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAK27C,oBAAoBv6B,MAIrFphB,KAAKg0C,QAAQ7C,mBAAmB,IAAK,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAK47C,eAAex6B,MAEhFphB,KAAKg0C,QAAQ7C,mBAAmB,IAAK,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAK67C,eAAez6B,MAEhFphB,KAAKg0C,QAAQ7C,mBAAmB,IAAK,IAAI,EAAAgK,YAAW/5B,GAAQphB,KAAK87C,mBAAmB16B,MAYpFphB,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKs5C,eAC3Dt5C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKw5C,kBAC3Dx5C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKyN,UAC3DzN,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKg7C,aAC3Dh7C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKk7C,WAC3Dl7C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAK+7C,iBAC3D/7C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKg8C,0BAC3Dh8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKi8C,sBAC3Dj8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKk8C,cAC3Dl8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKm8C,UAAU,KACrEn8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKm8C,UAAU,KACrEn8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKm8C,UAAU,KACrEn8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKm8C,UAAU,KACrEn8C,KAAKg0C,QAAQhD,mBAAmB,CAAEQ,MAAO,MAAO,IAAMxxC,KAAKm8C,UAAU,KACrEn8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO,MAAO,IAAMxxC,KAAKo8C,yBAC/Ep8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO,MAAO,IAAMxxC,KAAKo8C,yBAC/E,IAAK,MAAMC,KAAQ,EAAAC,SACjBt8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KACpGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO6K,IAAQ,IAAMr8C,KAAKu8C,cAAc,IAAMF,KAEtGr8C,KAAKg0C,QAAQhD,mBAAmB,CAAE6F,cAAe,IAAKrF,MAAO,MAAO,IAAMxxC,KAAKw8C,2BAK/Ex8C,KAAKg0C,QAAQyI,iBAAiBpuC,IAC5BrO,KAAKib,YAAY2iB,MAAM,kBAAmBvvB,GACnCA,KAMTrO,KAAKg0C,QAAQ/C,mBAAmB,CAAE4F,cAAe,IAAKrF,MAAO,KAAO,IAAI,EAAAkL,YAAW,CAACt7B,EAAM40B,IAAWh2C,KAAK28C,oBAAoBv7B,EAAM40B,KACtI,CA7PO4G,cAAgC,OAAO58C,KAAK40C,YAAc,CAkQzDiI,eAAepH,EAAsBC,EAAsBC,EAAuBnyC,GACxFxD,KAAKu1C,YAAYC,QAAS,EAC1Bx1C,KAAKu1C,YAAYE,aAAeA,EAChCz1C,KAAKu1C,YAAYG,aAAeA,EAChC11C,KAAKu1C,YAAYI,cAAgBA,EACjC31C,KAAKu1C,YAAY/xC,SAAWA,CAC9B,CAEQs5C,uBAAuBC,GAEzB/8C,KAAKib,YAAY2F,UAAY,EAAAyvB,aAAaC,MAC5C0M,QAAQC,KAAK,CAACF,EAAG,IAAIC,SAAQ,CAACE,EAAKC,IAAQ93C,YAAW,IAAM83C,EAAI,kBArS7C,SAsShBC,OAAMC,IACL,GAAY,kBAARA,EACF,MAAMA,EAERtrC,QAAQC,KAAK,kDAAiE,GAGtF,CAEQsrC,oBACN,OAAOt9C,KAAK40C,aAAaxjC,SAASC,KACpC,CAeO0+B,MAAM3uB,EAA2B0uB,GACtC,IAAIt/B,EACAilC,EAAez1C,KAAKonB,cAAczb,EAClC+pC,EAAe11C,KAAKonB,cAAcxb,EAClC3J,EAAQ,EACZ,MAAMs7C,EAAYv9C,KAAKu1C,YAAYC,OAEnC,GAAI+H,EAAW,CAEb,GAAI/sC,EAASxQ,KAAKg0C,QAAQjE,MAAM/vC,KAAKk0C,aAAcl0C,KAAKu1C,YAAYI,cAAe7F,GAEjF,OADA9vC,KAAK88C,uBAAuBtsC,GACrBA,EAETilC,EAAez1C,KAAKu1C,YAAYE,aAChCC,EAAe11C,KAAKu1C,YAAYG,aAChC11C,KAAKu1C,YAAYC,QAAS,EACtBp0B,EAAKlgB,OAASixC,IAChBlwC,EAAQjC,KAAKu1C,YAAY/xC,SAAW2uC,E,CA0BxC,GArBInyC,KAAKib,YAAY2F,UAAY,EAAAyvB,aAAamN,OAC5Cx9C,KAAKib,YAAYC,MAAM,gBAA+B,iBAATkG,EAAoB,KAAKA,KAAU,KAAKwoB,MAAM6T,UAAU5wC,IAAIklC,KAAK3wB,GAAMtgB,GAAKujB,OAAOC,aAAaxjB,KAAI63B,KAAK,QAA0B,iBAATvX,EACnKA,EAAKs8B,MAAM,IAAI7wC,KAAI/L,GAAKA,EAAE4iB,WAAW,KACrCtC,GAKFphB,KAAKk0C,aAAahzC,OAASkgB,EAAKlgB,QAC9BlB,KAAKk0C,aAAahzC,OAASixC,IAC7BnyC,KAAKk0C,aAAe,IAAIC,YAAYnhC,KAAKC,IAAImO,EAAKlgB,OAAQixC,KAMzDoL,GACHv9C,KAAK61C,iBAAiB8H,aAIpBv8B,EAAKlgB,OAASixC,EAChB,IAAK,IAAI9yC,EAAI4C,EAAO5C,EAAI+hB,EAAKlgB,OAAQ7B,GAAK8yC,EAAwB,CAChE,MAAMjwC,EAAM7C,EAAI8yC,EAAyB/wB,EAAKlgB,OAAS7B,EAAI8yC,EAAyB/wB,EAAKlgB,OACnF08C,EAAuB,iBAATx8B,EAChBphB,KAAKo0C,eAAeyJ,OAAOz8B,EAAKkO,UAAUjwB,EAAG6C,GAAMlC,KAAKk0C,cACxDl0C,KAAKs0C,aAAauJ,OAAOz8B,EAAK08B,SAASz+C,EAAG6C,GAAMlC,KAAKk0C,cACzD,GAAI1jC,EAASxQ,KAAKg0C,QAAQjE,MAAM/vC,KAAKk0C,aAAc0J,GAGjD,OAFA59C,KAAK68C,eAAepH,EAAcC,EAAckI,EAAKv+C,GACrDW,KAAK88C,uBAAuBtsC,GACrBA,C,MAIX,IAAK+sC,EAAW,CACd,MAAMK,EAAuB,iBAATx8B,EAChBphB,KAAKo0C,eAAeyJ,OAAOz8B,EAAMphB,KAAKk0C,cACtCl0C,KAAKs0C,aAAauJ,OAAOz8B,EAAMphB,KAAKk0C,cACxC,GAAI1jC,EAASxQ,KAAKg0C,QAAQjE,MAAM/vC,KAAKk0C,aAAc0J,GAGjD,OAFA59C,KAAK68C,eAAepH,EAAcC,EAAckI,EAAK,GACrD59C,KAAK88C,uBAAuBtsC,GACrBA,C,CAKTxQ,KAAKonB,cAAczb,IAAM8pC,GAAgBz1C,KAAKonB,cAAcxb,IAAM8pC,GACpE11C,KAAKwU,cAAcnF,OAIrBrP,KAAK+0C,sBAAsB1lC,KAAKrP,KAAK61C,iBAAiB5zC,MAAOjC,KAAK61C,iBAAiB3zC,IACrF,CAEOy0C,MAAMv1B,EAAmBnf,EAAeC,GAC7C,IAAIo0C,EACAyH,EACJ,MAAMC,EAAUh+C,KAAKmvC,gBAAgB6O,QAC/Bv/B,EAAmBze,KAAKoQ,gBAAgBM,WAAW+N,iBACnDlR,EAAOvN,KAAKyJ,eAAe8D,KAC3B0wC,EAAiBj+C,KAAK4uB,aAAa/nB,gBAAgBq3C,WACnDC,EAAan+C,KAAK4uB,aAAawvB,MAAMD,WACrCE,EAAUr+C,KAAK40C,aACrB,IAAI0J,EAAYt+C,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAE3F5L,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,GAG/C5L,KAAKonB,cAAczb,GAAKzJ,EAAMD,EAAQ,GAAsD,IAAjDq8C,EAAUhlC,SAAStZ,KAAKonB,cAAczb,EAAI,IACvF2yC,EAAUE,qBAAqBx+C,KAAKonB,cAAczb,EAAI,EAAG,EAAG,EAAG0yC,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,UAGjG,IAAK,IAAIjK,EAAMlF,EAAOkF,EAAMjF,IAAOiF,EAAK,CAUtC,GATAmvC,EAAOl1B,EAAKja,GAIZ42C,EAAU/9C,KAAK+zC,gBAAgB0K,QAAQnI,GAKnCA,EAAO,KAAO0H,EAAS,CACzB,MAAMU,EAAKV,EAAQ35B,OAAOC,aAAagyB,IACnCoI,IACFpI,EAAOoI,EAAGh7B,WAAW,G,CAezB,GAXIjF,GACFze,KAAKo1C,YAAY/lC,MAAK,IAAAsvC,qBAAoBrI,IAExCt2C,KAAKs9C,qBACPt9C,KAAKqQ,gBAAgBuuC,cAAc5+C,KAAKs9C,oBAAqBt9C,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAOxGmyC,IAAW/9C,KAAKonB,cAAczb,EAAnC,CAeA,GAAI3L,KAAKonB,cAAczb,EAAIoyC,EAAU,GAAKxwC,EAGxC,GAAI0wC,EAAgB,CAElB,KAAOj+C,KAAKonB,cAAczb,EAAI4B,GAC5B+wC,EAAUE,qBAAqBx+C,KAAKonB,cAAczb,IAAK,EAAG,EAAG0yC,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,UAE/FpR,KAAKonB,cAAczb,EAAI,EACvB3L,KAAKonB,cAAcxb,IACf5L,KAAKonB,cAAcxb,IAAM5L,KAAKonB,cAAcwoB,aAAe,GAC7D5vC,KAAKonB,cAAcxb,IACnB5L,KAAKyJ,eAAeinC,OAAO1wC,KAAK6+C,kBAAkB,KAE9C7+C,KAAKonB,cAAcxb,GAAK5L,KAAKyJ,eAAe/I,OAC9CV,KAAKonB,cAAcxb,EAAI5L,KAAKyJ,eAAe/I,KAAO,GAIpDV,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAAI0lB,WAAY,GAG7FgtB,EAAYt+C,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,E,MAGvF,GADA5L,KAAKonB,cAAczb,EAAI4B,EAAO,EACd,IAAZwwC,EAGF,SAuBN,GAjBII,IAEFG,EAAUQ,YAAY9+C,KAAKonB,cAAczb,EAAGoyC,EAAS/9C,KAAKonB,cAAc23B,YAAYV,GAAUA,GAIzD,IAAjCC,EAAUhlC,SAAS/L,EAAO,IAC5B+wC,EAAUE,qBAAqBjxC,EAAO,EAAG,EAAAgqB,eAAgB,EAAAynB,gBAAiBX,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,WAK9GktC,EAAUE,qBAAqBx+C,KAAKonB,cAAczb,IAAK2qC,EAAMyH,EAASM,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,UAKlG2sC,EAAU,EACZ,OAASA,GAEPO,EAAUE,qBAAqBx+C,KAAKonB,cAAczb,IAAK,EAAG,EAAG0yC,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,S,MApE1FktC,EAAUhlC,SAAStZ,KAAKonB,cAAczb,EAAI,GAM7C2yC,EAAUW,mBAAmBj/C,KAAKonB,cAAczb,EAAI,EAAG2qC,GAFvDgI,EAAUW,mBAAmBj/C,KAAKonB,cAAczb,EAAI,EAAG2qC,E,CAwEzDp0C,EAAMD,EAAQ,IAChBq8C,EAAUptC,SAASlR,KAAKonB,cAAczb,EAAI,EAAG3L,KAAK+2B,WAChB,IAA9B/2B,KAAK+2B,UAAUzd,YAAoBtZ,KAAK+2B,UAAUO,UAAY,MAChEt3B,KAAKg0C,QAAQkL,mBAAqB,EACzBl/C,KAAK+2B,UAAUyF,aACxBx8B,KAAKg0C,QAAQkL,mBAAqBl/C,KAAK+2B,UAAUoB,WAAWzU,WAAW,GAEvE1jB,KAAKg0C,QAAQkL,mBAAqBl/C,KAAK+2B,UAAUuF,SAKjDt8B,KAAKonB,cAAczb,EAAI4B,GAAQrL,EAAMD,EAAQ,GAAkD,IAA7Cq8C,EAAUhlC,SAAStZ,KAAKonB,cAAczb,KAAa2yC,EAAUrtC,WAAWjR,KAAKonB,cAAczb,IAC/I2yC,EAAUE,qBAAqBx+C,KAAKonB,cAAczb,EAAG,EAAG,EAAG0yC,EAAQ51C,GAAI41C,EAAQ71C,GAAI61C,EAAQjtC,UAG7FpR,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,EACrD,CAKOslC,mBAAmBpU,EAAyBxsB,GACjD,MAAiB,MAAbwsB,EAAG0U,OAAkB1U,EAAG4a,QAAW5a,EAAG+Z,cASnC72C,KAAKg0C,QAAQ9C,mBAAmBpU,EAAIxsB,GAPlCtQ,KAAKg0C,QAAQ9C,mBAAmBpU,GAAIkZ,IACpC5D,EAAoB4D,EAAOA,OAAO,GAAIh2C,KAAKoQ,gBAAgBM,WAAW6oC,gBAGpEjpC,EAAS0lC,IAItB,CAKO/E,mBAAmBnU,EAAyBxsB,GACjD,OAAOtQ,KAAKg0C,QAAQ/C,mBAAmBnU,EAAI,IAAI,EAAA4f,WAAWpsC,GAC5D,CAKO0gC,mBAAmBlU,EAAyBxsB,GACjD,OAAOtQ,KAAKg0C,QAAQhD,mBAAmBlU,EAAIxsB,EAC7C,CAKO6gC,mBAAmBj6B,EAAe5G,GACvC,OAAOtQ,KAAKg0C,QAAQ7C,mBAAmBj6B,EAAO,IAAI,EAAAikC,WAAW7qC,GAC/D,CAUOypC,OAEL,OADA/5C,KAAK80C,eAAezlC,QACb,CACT,CAYO4qC,WAmBL,OAlBAj6C,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,GAC/C5L,KAAKoQ,gBAAgBM,WAAWyuC,aAClCn/C,KAAKonB,cAAczb,EAAI,GAEzB3L,KAAKonB,cAAcxb,IACf5L,KAAKonB,cAAcxb,IAAM5L,KAAKonB,cAAcwoB,aAAe,GAC7D5vC,KAAKonB,cAAcxb,IACnB5L,KAAKyJ,eAAeinC,OAAO1wC,KAAK6+C,mBACvB7+C,KAAKonB,cAAcxb,GAAK5L,KAAKyJ,eAAe/I,OACrDV,KAAKonB,cAAcxb,EAAI5L,KAAKyJ,eAAe/I,KAAO,GAGhDV,KAAKonB,cAAczb,GAAK3L,KAAKyJ,eAAe8D,MAC9CvN,KAAKonB,cAAczb,IAErB3L,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,GAEnD5L,KAAKouC,YAAY/+B,QACV,CACT,CAQO+qC,iBAEL,OADAp6C,KAAKonB,cAAczb,EAAI,GAChB,CACT,CAaO2uC,Y,MAEL,IAAKt6C,KAAK4uB,aAAa/nB,gBAAgBu4C,kBAKrC,OAJAp/C,KAAKq/C,kBACDr/C,KAAKonB,cAAczb,EAAI,GACzB3L,KAAKonB,cAAczb,KAEd,EAQT,GAFA3L,KAAKq/C,gBAAgBr/C,KAAKyJ,eAAe8D,MAErCvN,KAAKonB,cAAczb,EAAI,EACzB3L,KAAKonB,cAAczb,SAUnB,GAA6B,IAAzB3L,KAAKonB,cAAczb,GAClB3L,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,WAC1CnoB,KAAKonB,cAAcxb,GAAK5L,KAAKonB,cAAcwoB,eACkC,QAA7E,EAAA5vC,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,UAAE,eAAE0lB,WAAW,CAC7FtxB,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAAI0lB,WAAY,EAC3FtxB,KAAKonB,cAAcxb,IACnB5L,KAAKonB,cAAczb,EAAI3L,KAAKyJ,eAAe8D,KAAO,EAKlD,MAAMgD,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GACpF2E,EAAKszB,SAAS7jC,KAAKonB,cAAczb,KAAO4E,EAAKU,WAAWjR,KAAKonB,cAAczb,IAC7E3L,KAAKonB,cAAczb,G,CAQzB,OADA3L,KAAKq/C,mBACE,CACT,CAQO7E,MACL,GAAIx6C,KAAKonB,cAAczb,GAAK3L,KAAKyJ,eAAe8D,KAC9C,OAAO,EAET,MAAM+xC,EAAYt/C,KAAKonB,cAAczb,EAKrC,OAJA3L,KAAKonB,cAAczb,EAAI3L,KAAKonB,cAAcm4B,WACtCv/C,KAAKoQ,gBAAgBM,WAAW+N,kBAClCze,KAAKq1C,WAAWhmC,KAAKrP,KAAKonB,cAAczb,EAAI2zC,IAEvC,CACT,CASO5E,WAEL,OADA16C,KAAKmvC,gBAAgBgN,UAAU,IACxB,CACT,CASOvB,UAEL,OADA56C,KAAKmvC,gBAAgBgN,UAAU,IACxB,CACT,CAKQkD,gBAAgBG,EAAiBx/C,KAAKyJ,eAAe8D,KAAO,GAClEvN,KAAKonB,cAAczb,EAAIqH,KAAKC,IAAIusC,EAAQxsC,KAAKG,IAAI,EAAGnT,KAAKonB,cAAczb,IACvE3L,KAAKonB,cAAcxb,EAAI5L,KAAK4uB,aAAa/nB,gBAAgBogB,OACrDjU,KAAKC,IAAIjT,KAAKonB,cAAcwoB,aAAc58B,KAAKG,IAAInT,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcxb,IACpGoH,KAAKC,IAAIjT,KAAKyJ,eAAe/I,KAAO,EAAGsS,KAAKG,IAAI,EAAGnT,KAAKonB,cAAcxb,IAC1E5L,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,EACrD,CAKQ6zC,WAAW9zC,EAAWC,GAC5B5L,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,GAC/C5L,KAAK4uB,aAAa/nB,gBAAgBogB,QACpCjnB,KAAKonB,cAAczb,EAAIA,EACvB3L,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UAAYvc,IAEtD5L,KAAKonB,cAAczb,EAAIA,EACvB3L,KAAKonB,cAAcxb,EAAIA,GAEzB5L,KAAKq/C,kBACLr/C,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,EACrD,CAKQ8zC,YAAY/zC,EAAWC,GAG7B5L,KAAKq/C,kBACLr/C,KAAKy/C,WAAWz/C,KAAKonB,cAAczb,EAAIA,EAAG3L,KAAKonB,cAAcxb,EAAIA,EACnE,CASOmrC,SAASf,GAEd,MAAM2J,EAAY3/C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UAM5D,OALIw3B,GAAa,EACf3/C,KAAK0/C,YAAY,GAAI1sC,KAAKC,IAAI0sC,EAAW3J,EAAOA,OAAO,IAAM,IAE7Dh2C,KAAK0/C,YAAY,IAAK1J,EAAOA,OAAO,IAAM,KAErC,CACT,CASOiB,WAAWjB,GAEhB,MAAM4J,EAAe5/C,KAAKonB,cAAcwoB,aAAe5vC,KAAKonB,cAAcxb,EAM1E,OALIg0C,GAAgB,EAClB5/C,KAAK0/C,YAAY,EAAG1sC,KAAKC,IAAI2sC,EAAc5J,EAAOA,OAAO,IAAM,IAE/Dh2C,KAAK0/C,YAAY,EAAG1J,EAAOA,OAAO,IAAM,IAEnC,CACT,CAQOkB,cAAclB,GAEnB,OADAh2C,KAAK0/C,YAAY1J,EAAOA,OAAO,IAAM,EAAG,IACjC,CACT,CAQOmB,eAAenB,GAEpB,OADAh2C,KAAK0/C,cAAc1J,EAAOA,OAAO,IAAM,GAAI,IACpC,CACT,CAUOoB,eAAepB,GAGpB,OAFAh2C,KAAKi3C,WAAWjB,GAChBh2C,KAAKonB,cAAczb,EAAI,GAChB,CACT,CAUO0rC,oBAAoBrB,GAGzB,OAFAh2C,KAAK+2C,SAASf,GACdh2C,KAAKonB,cAAczb,EAAI,GAChB,CACT,CAQO2rC,mBAAmBtB,GAExB,OADAh2C,KAAKy/C,YAAYzJ,EAAOA,OAAO,IAAM,GAAK,EAAGh2C,KAAKonB,cAAcxb,IACzD,CACT,CAWO2rC,eAAevB,GAOpB,OANAh2C,KAAKy/C,WAEFzJ,EAAO90C,QAAU,GAAM80C,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,IAErB,CACT,CASOmC,gBAAgBnC,GAErB,OADAh2C,KAAKy/C,YAAYzJ,EAAOA,OAAO,IAAM,GAAK,EAAGh2C,KAAKonB,cAAcxb,IACzD,CACT,CAQOwsC,kBAAkBpC,GAEvB,OADAh2C,KAAK0/C,YAAY1J,EAAOA,OAAO,IAAM,EAAG,IACjC,CACT,CAQOwC,gBAAgBxC,GAErB,OADAh2C,KAAKy/C,WAAWz/C,KAAKonB,cAAczb,GAAIqqC,EAAOA,OAAO,IAAM,GAAK,IACzD,CACT,CASOyC,kBAAkBzC,GAEvB,OADAh2C,KAAK0/C,YAAY,EAAG1J,EAAOA,OAAO,IAAM,IACjC,CACT,CAUO0C,WAAW1C,GAEhB,OADAh2C,KAAKu3C,eAAevB,IACb,CACT,CAaO2C,SAAS3C,GACd,MAAM6J,EAAQ7J,EAAOA,OAAO,GAM5B,OALc,IAAV6J,SACK7/C,KAAKonB,cAAc04B,KAAK9/C,KAAKonB,cAAczb,GAC/B,IAAVk0C,IACT7/C,KAAKonB,cAAc04B,KAAO,CAAC,IAEtB,CACT,CAQOtI,iBAAiBxB,GACtB,GAAIh2C,KAAKonB,cAAczb,GAAK3L,KAAKyJ,eAAe8D,KAC9C,OAAO,EAET,IAAIsyC,EAAQ7J,EAAOA,OAAO,IAAM,EAChC,KAAO6J,KACL7/C,KAAKonB,cAAczb,EAAI3L,KAAKonB,cAAcm4B,WAE5C,OAAO,CACT,CAOOrH,kBAAkBlC,GACvB,GAAIh2C,KAAKonB,cAAczb,GAAK3L,KAAKyJ,eAAe8D,KAC9C,OAAO,EAET,IAAIsyC,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACL7/C,KAAKonB,cAAczb,EAAI3L,KAAKonB,cAAc24B,WAE5C,OAAO,CACT,CAOOpG,gBAAgB3D,GACrB,MAAM+G,EAAI/G,EAAOA,OAAO,GAGxB,OAFU,IAAN+G,IAAS/8C,KAAK40C,aAAapsC,IAAM,WAC3B,IAANu0C,GAAiB,IAANA,IAAS/8C,KAAK40C,aAAapsC,KAAM,YACzC,CACT,CAYQw3C,mBAAmBp0C,EAAW3J,EAAeC,EAAa+9C,GAAqB,EAAOC,GAA0B,GACtH,MAAM3vC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAK4vC,aACHl+C,EACAC,EACAlC,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBACpC7+C,KAAK6+C,iBACLqB,GAEED,IACF1vC,EAAK+gB,WAAY,EAErB,CAOQ8uB,iBAAiBx0C,EAAWs0C,GAA0B,GAC5D,MAAM3vC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAK8vC,KAAKrgD,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBAAmBqB,GACjElgD,KAAKyJ,eAAe5F,OAAOy8C,aAAatgD,KAAKonB,cAAclO,MAAQtN,GACnE2E,EAAK+gB,WAAY,CACnB,CA0BOmmB,eAAezB,EAAiBkK,GAA0B,GAE/D,IAAIvyC,EACJ,OAFA3N,KAAKq/C,gBAAgBr/C,KAAKyJ,eAAe8D,MAEjCyoC,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHAroC,EAAI3N,KAAKonB,cAAcxb,EACvB5L,KAAK61C,iBAAiB0I,UAAU5wC,GAChC3N,KAAKggD,mBAAmBryC,IAAK3N,KAAKonB,cAAczb,EAAG3L,KAAKyJ,eAAe8D,KAA+B,IAAzBvN,KAAKonB,cAAczb,EAASu0C,GAClGvyC,EAAI3N,KAAKyJ,eAAe/I,KAAMiN,IACnC3N,KAAKogD,iBAAiBzyC,EAAGuyC,GAE3BlgD,KAAK61C,iBAAiB0I,UAAU5wC,GAChC,MACF,KAAK,EASH,IARAA,EAAI3N,KAAKonB,cAAcxb,EACvB5L,KAAK61C,iBAAiB0I,UAAU5wC,GAEhC3N,KAAKggD,mBAAmBryC,EAAG,EAAG3N,KAAKonB,cAAczb,EAAI,GAAG,EAAMu0C,GAC1DlgD,KAAKonB,cAAczb,EAAI,GAAK3L,KAAKyJ,eAAe8D,OAElDvN,KAAKonB,cAActjB,MAAM8E,IAAI+E,EAAI,GAAI2jB,WAAY,GAE5C3jB,KACL3N,KAAKogD,iBAAiBzyC,EAAGuyC,GAE3BlgD,KAAK61C,iBAAiB0I,UAAU,GAChC,MACF,KAAK,EAGH,IAFA5wC,EAAI3N,KAAKyJ,eAAe/I,KACxBV,KAAK61C,iBAAiB0I,UAAU5wC,EAAI,GAC7BA,KACL3N,KAAKogD,iBAAiBzyC,EAAGuyC,GAE3BlgD,KAAK61C,iBAAiB0I,UAAU,GAChC,MACF,KAAK,EAEH,MAAMgC,EAAiBvgD,KAAKonB,cAActjB,MAAM5C,OAASlB,KAAKyJ,eAAe/I,KACzE6/C,EAAiB,IACnBvgD,KAAKonB,cAActjB,MAAM2mC,UAAU8V,GACnCvgD,KAAKonB,cAAclO,MAAQlG,KAAKG,IAAInT,KAAKonB,cAAclO,MAAQqnC,EAAgB,GAC/EvgD,KAAKonB,cAAcxhB,MAAQoN,KAAKG,IAAInT,KAAKonB,cAAcxhB,MAAQ26C,EAAgB,GAE/EvgD,KAAKke,UAAU7O,KAAK,IAI1B,OAAO,CACT,CAwBOsoC,YAAY3B,EAAiBkK,GAA0B,GAE5D,OADAlgD,KAAKq/C,gBAAgBr/C,KAAKyJ,eAAe8D,MACjCyoC,EAAOA,OAAO,IACpB,KAAK,EACHh2C,KAAKggD,mBAAmBhgD,KAAKonB,cAAcxb,EAAG5L,KAAKonB,cAAczb,EAAG3L,KAAKyJ,eAAe8D,KAA+B,IAAzBvN,KAAKonB,cAAczb,EAASu0C,GAC1H,MACF,KAAK,EACHlgD,KAAKggD,mBAAmBhgD,KAAKonB,cAAcxb,EAAG,EAAG5L,KAAKonB,cAAczb,EAAI,GAAG,EAAOu0C,GAClF,MACF,KAAK,EACHlgD,KAAKggD,mBAAmBhgD,KAAKonB,cAAcxb,EAAG,EAAG5L,KAAKyJ,eAAe8D,MAAM,EAAM2yC,GAIrF,OADAlgD,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,IAC5C,CACT,CAWOgsC,YAAY5B,GACjBh2C,KAAKq/C,kBACL,IAAIQ,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAGT,MAAMtI,EAAc7f,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAE5D40C,EAAyBxgD,KAAKyJ,eAAe/I,KAAO,EAAIV,KAAKonB,cAAcwoB,aAC3E6Q,EAAuBzgD,KAAKyJ,eAAe/I,KAAO,EAAIV,KAAKonB,cAAclO,MAAQsnC,EAAyB,EAChH,KAAOX,KAGL7/C,KAAKonB,cAActjB,MAAM+G,OAAO41C,EAAuB,EAAG,GAC1DzgD,KAAKonB,cAActjB,MAAM+G,OAAOgV,EAAK,EAAG7f,KAAKonB,cAAczC,aAAa3kB,KAAK6+C,mBAK/E,OAFA7+C,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAcxb,EAAG5L,KAAKonB,cAAcwoB,cAC9E5vC,KAAKonB,cAAczb,EAAI,GAChB,CACT,CAWOksC,YAAY7B,GACjBh2C,KAAKq/C,kBACL,IAAIQ,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAGT,MAAMtI,EAAc7f,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAElE,IAAI+B,EAGJ,IAFAA,EAAI3N,KAAKyJ,eAAe/I,KAAO,EAAIV,KAAKonB,cAAcwoB,aACtDjiC,EAAI3N,KAAKyJ,eAAe/I,KAAO,EAAIV,KAAKonB,cAAclO,MAAQvL,EACvDkyC,KAGL7/C,KAAKonB,cAActjB,MAAM+G,OAAOgV,EAAK,GACrC7f,KAAKonB,cAActjB,MAAM+G,OAAO8C,EAAG,EAAG3N,KAAKonB,cAAczC,aAAa3kB,KAAK6+C,mBAK7E,OAFA7+C,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAcxb,EAAG5L,KAAKonB,cAAcwoB,cAC9E5vC,KAAKonB,cAAczb,EAAI,GAChB,CACT,CAaOirC,YAAYZ,GACjBh2C,KAAKq/C,kBACL,MAAM9uC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAUxF,OATI2E,IACFA,EAAKuuC,YACH9+C,KAAKonB,cAAczb,EACnBqqC,EAAOA,OAAO,IAAM,EACpBh2C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBACpC7+C,KAAK6+C,kBAEP7+C,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,KAE9C,CACT,CAaOksC,YAAY9B,GACjBh2C,KAAKq/C,kBACL,MAAM9uC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAUxF,OATI2E,IACFA,EAAKmwC,YACH1gD,KAAKonB,cAAczb,EACnBqqC,EAAOA,OAAO,IAAM,EACpBh2C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBACpC7+C,KAAK6+C,kBAEP7+C,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,KAE9C,CACT,CAUOmsC,SAAS/B,GACd,IAAI6J,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACL7/C,KAAKonB,cAActjB,MAAM+G,OAAO7K,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAce,UAAW,GACzFnoB,KAAKonB,cAActjB,MAAM+G,OAAO7K,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcwoB,aAAc,EAAG5vC,KAAKonB,cAAczC,aAAa3kB,KAAK6+C,mBAGtI,OADA7+C,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAOOoI,WAAWhC,GAChB,IAAI6J,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACL7/C,KAAKonB,cAActjB,MAAM+G,OAAO7K,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcwoB,aAAc,GAC5F5vC,KAAKonB,cAActjB,MAAM+G,OAAO7K,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAce,UAAW,EAAGnoB,KAAKonB,cAAczC,aAAa,EAAAC,oBAG9H,OADA5kB,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAoBOkH,WAAWd,GAChB,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAET,MAAM03B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAIpqC,EAAI5L,KAAKonB,cAAce,UAAWvc,GAAK5L,KAAKonB,cAAcwoB,eAAgBhkC,EAAG,CACpF,MAAM2E,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAKmwC,YAAY,EAAGb,EAAO7/C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBAAmB7+C,KAAK6+C,kBACvFtuC,EAAK+gB,WAAY,C,CAGnB,OADAtxB,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAqBOoH,YAAYhB,GACjB,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAET,MAAM03B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAIpqC,EAAI5L,KAAKonB,cAAce,UAAWvc,GAAK5L,KAAKonB,cAAcwoB,eAAgBhkC,EAAG,CACpF,MAAM2E,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAKuuC,YAAY,EAAGe,EAAO7/C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBAAmB7+C,KAAK6+C,kBACvFtuC,EAAK+gB,WAAY,C,CAGnB,OADAtxB,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAWO6J,cAAczD,GACnB,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAET,MAAM03B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAIpqC,EAAI5L,KAAKonB,cAAce,UAAWvc,GAAK5L,KAAKonB,cAAcwoB,eAAgBhkC,EAAG,CACpF,MAAM2E,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAKuuC,YAAY9+C,KAAKonB,cAAczb,EAAGk0C,EAAO7/C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBAAmB7+C,KAAK6+C,kBAC1GtuC,EAAK+gB,WAAY,C,CAGnB,OADAtxB,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAWO8J,cAAc1D,GACnB,GAAIh2C,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAcwoB,cAAgB5vC,KAAKonB,cAAcxb,EAAI5L,KAAKonB,cAAce,UACtG,OAAO,EAET,MAAM03B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAIpqC,EAAI5L,KAAKonB,cAAce,UAAWvc,GAAK5L,KAAKonB,cAAcwoB,eAAgBhkC,EAAG,CACpF,MAAM2E,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQtN,GACrE2E,EAAKmwC,YAAY1gD,KAAKonB,cAAczb,EAAGk0C,EAAO7/C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBAAmB7+C,KAAK6+C,kBAC1GtuC,EAAK+gB,WAAY,C,CAGnB,OADAtxB,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,eAC/E,CACT,CAUOqI,WAAWjC,GAChBh2C,KAAKq/C,kBACL,MAAM9uC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAI5I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,GAUxF,OATI2E,IACFA,EAAK4vC,aACHngD,KAAKonB,cAAczb,EACnB3L,KAAKonB,cAAczb,GAAKqqC,EAAOA,OAAO,IAAM,GAC5Ch2C,KAAKonB,cAAc23B,YAAY/+C,KAAK6+C,kBACpC7+C,KAAK6+C,kBAEP7+C,KAAK61C,iBAAiB0I,UAAUv+C,KAAKonB,cAAcxb,KAE9C,CACT,CA6BOysC,yBAAyBrC,GAC9B,IAAKh2C,KAAKg0C,QAAQkL,mBAChB,OAAO,EAGT,MAAMh+C,EAAS80C,EAAOA,OAAO,IAAM,EAC7B50B,EAAO,IAAI+yB,YAAYjzC,GAC7B,IAAK,IAAI7B,EAAI,EAAGA,EAAI6B,IAAU7B,EAC5B+hB,EAAK/hB,GAAKW,KAAKg0C,QAAQkL,mBAGzB,OADAl/C,KAAK22C,MAAMv1B,EAAM,EAAGA,EAAKlgB,SAClB,CACT,CA2BOo3C,4BAA4BtC,GACjC,OAAIA,EAAOA,OAAO,GAAK,IAGnBh2C,KAAK2gD,IAAI,UAAY3gD,KAAK2gD,IAAI,iBAAmB3gD,KAAK2gD,IAAI,UAC5D3gD,KAAK4uB,aAAa9nB,iBAAiB,EAAA0Q,GAAGC,IAAM,UACnCzX,KAAK2gD,IAAI,UAClB3gD,KAAK4uB,aAAa9nB,iBAAiB,EAAA0Q,GAAGC,IAAM,UALrC,CAQX,CA0BO8gC,8BAA8BvC,GACnC,OAAIA,EAAOA,OAAO,GAAK,IAMnBh2C,KAAK2gD,IAAI,SACX3gD,KAAK4uB,aAAa9nB,iBAAiB,EAAA0Q,GAAGC,IAAM,cACnCzX,KAAK2gD,IAAI,gBAClB3gD,KAAK4uB,aAAa9nB,iBAAiB,EAAA0Q,GAAGC,IAAM,cACnCzX,KAAK2gD,IAAI,SAGlB3gD,KAAK4uB,aAAa9nB,iBAAiBkvC,EAAOA,OAAO,GAAK,KAC7Ch2C,KAAK2gD,IAAI,WAClB3gD,KAAK4uB,aAAa9nB,iBAAiB,EAAA0Q,GAAGC,IAAM,mBAdrC,CAiBX,CAMQkpC,IAAIC,GACV,OAAyE,KAAjE5gD,KAAKoQ,gBAAgBM,WAAWmwC,SAAW,IAAIj2C,QAAQg2C,EACjE,CAmBOhI,QAAQ5C,GACb,IAAK,IAAI32C,EAAI,EAAGA,EAAI22C,EAAO90C,OAAQ7B,IACjC,OAAQ22C,EAAOA,OAAO32C,IACpB,KAAK,EACHW,KAAK4uB,aAAawvB,MAAMD,YAAa,EACrC,MACF,KAAK,GACHn+C,KAAKoQ,gBAAgB/G,QAAQ81C,YAAa,EAIhD,OAAO,CACT,CAoHOtG,eAAe7C,GACpB,IAAK,IAAI32C,EAAI,EAAGA,EAAI22C,EAAO90C,OAAQ7B,IACjC,OAAQ22C,EAAOA,OAAO32C,IACpB,KAAK,EACHW,KAAK4uB,aAAa/nB,gBAAgBsa,uBAAwB,EAC1D,MACF,KAAK,EACHnhB,KAAKmvC,gBAAgB2R,YAAY,EAAG,EAAAC,iBACpC/gD,KAAKmvC,gBAAgB2R,YAAY,EAAG,EAAAC,iBACpC/gD,KAAKmvC,gBAAgB2R,YAAY,EAAG,EAAAC,iBACpC/gD,KAAKmvC,gBAAgB2R,YAAY,EAAG,EAAAC,iBAEpC,MACF,KAAK,EAMC/gD,KAAKoQ,gBAAgBM,WAAW6oC,cAAchH,cAChDvyC,KAAKyJ,eAAegT,OAAO,IAAKzc,KAAKyJ,eAAe/I,MACpDV,KAAKg1C,gBAAgB3lC,QAEvB,MACF,KAAK,EACHrP,KAAK4uB,aAAa/nB,gBAAgBogB,QAAS,EAC3CjnB,KAAKy/C,WAAW,EAAG,GACnB,MACF,KAAK,EACHz/C,KAAK4uB,aAAa/nB,gBAAgBq3C,YAAa,EAC/C,MACF,KAAK,GACHl+C,KAAKoQ,gBAAgB/G,QAAQ8sB,aAAc,EAC3C,MACF,KAAK,GACHn2B,KAAK4uB,aAAa/nB,gBAAgBu4C,mBAAoB,EACtD,MACF,KAAK,GACHp/C,KAAKib,YAAYC,MAAM,6CACvBlb,KAAK4uB,aAAa/nB,gBAAgBm6C,mBAAoB,EACtDhhD,KAAKk1C,wBAAwB7lC,OAC7B,MACF,KAAK,EAEHrP,KAAK8zC,kBAAkB/yB,eAAiB,MACxC,MACF,KAAK,IAEH/gB,KAAK8zC,kBAAkB/yB,eAAiB,QACxC,MACF,KAAK,KACH/gB,KAAK8zC,kBAAkB/yB,eAAiB,OACxC,MACF,KAAK,KAGH/gB,KAAK8zC,kBAAkB/yB,eAAiB,MACxC,MACF,KAAK,KAGH/gB,KAAK4uB,aAAa/nB,gBAAgB2R,WAAY,EAC9CxY,KAAKi1C,oBAAoB5lC,OACzB,MACF,KAAK,KACHrP,KAAKib,YAAYC,MAAM,yCACvB,MACF,KAAK,KACHlb,KAAK8zC,kBAAkBmN,eAAiB,MACxC,MACF,KAAK,KACHjhD,KAAKib,YAAYC,MAAM,yCACvB,MACF,KAAK,KACHlb,KAAK8zC,kBAAkBmN,eAAiB,aACxC,MACF,KAAK,GACHjhD,KAAK4uB,aAAaiJ,gBAAiB,EACnC,MACF,KAAK,KACH73B,KAAKs5C,aACL,MACF,KAAK,KACHt5C,KAAKs5C,aAEP,KAAK,GACL,KAAK,KACHt5C,KAAKyJ,eAAeyO,QAAQgpC,kBAAkBlhD,KAAK6+C,kBACnD7+C,KAAK4uB,aAAajN,qBAAsB,EACxC3hB,KAAK+0C,sBAAsB1lC,KAAK,EAAGrP,KAAKyJ,eAAe/I,KAAO,GAC9DV,KAAKk1C,wBAAwB7lC,OAC7B,MACF,KAAK,KACHrP,KAAK4uB,aAAa/nB,gBAAgBJ,oBAAqB,EAI7D,OAAO,CACT,CAuBOqyC,UAAU9C,GACf,IAAK,IAAI32C,EAAI,EAAGA,EAAI22C,EAAO90C,OAAQ7B,IACjC,OAAQ22C,EAAOA,OAAO32C,IACpB,KAAK,EACHW,KAAK4uB,aAAawvB,MAAMD,YAAa,EACrC,MACF,KAAK,GACHn+C,KAAKoQ,gBAAgB/G,QAAQ81C,YAAa,EAIhD,OAAO,CACT,CAgHOpG,iBAAiB/C,GACtB,IAAK,IAAI32C,EAAI,EAAGA,EAAI22C,EAAO90C,OAAQ7B,IACjC,OAAQ22C,EAAOA,OAAO32C,IACpB,KAAK,EACHW,KAAK4uB,aAAa/nB,gBAAgBsa,uBAAwB,EAC1D,MACF,KAAK,EAMCnhB,KAAKoQ,gBAAgBM,WAAW6oC,cAAchH,cAChDvyC,KAAKyJ,eAAegT,OAAO,GAAIzc,KAAKyJ,eAAe/I,MACnDV,KAAKg1C,gBAAgB3lC,QAEvB,MACF,KAAK,EACHrP,KAAK4uB,aAAa/nB,gBAAgBogB,QAAS,EAC3CjnB,KAAKy/C,WAAW,EAAG,GACnB,MACF,KAAK,EACHz/C,KAAK4uB,aAAa/nB,gBAAgBq3C,YAAa,EAC/C,MACF,KAAK,GACHl+C,KAAKoQ,gBAAgB/G,QAAQ8sB,aAAc,EAC3C,MACF,KAAK,GACHn2B,KAAK4uB,aAAa/nB,gBAAgBu4C,mBAAoB,EACtD,MACF,KAAK,GACHp/C,KAAKib,YAAYC,MAAM,oCACvBlb,KAAK4uB,aAAa/nB,gBAAgBm6C,mBAAoB,EACtDhhD,KAAKk1C,wBAAwB7lC,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACHrP,KAAK8zC,kBAAkB/yB,eAAiB,OACxC,MACF,KAAK,KACH/gB,KAAK4uB,aAAa/nB,gBAAgB2R,WAAY,EAC9C,MACF,KAAK,KACHxY,KAAKib,YAAYC,MAAM,yCACvB,MACF,KAAK,KAML,KAAK,KACHlb,KAAK8zC,kBAAkBmN,eAAiB,UACxC,MALF,KAAK,KACHjhD,KAAKib,YAAYC,MAAM,yCACvB,MAIF,KAAK,GACHlb,KAAK4uB,aAAaiJ,gBAAiB,EACnC,MACF,KAAK,KACH73B,KAAKw5C,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEHx5C,KAAKyJ,eAAeyO,QAAQipC,uBACH,OAArBnL,EAAOA,OAAO32C,IAChBW,KAAKw5C,gBAEPx5C,KAAK4uB,aAAajN,qBAAsB,EACxC3hB,KAAK+0C,sBAAsB1lC,KAAK,EAAGrP,KAAKyJ,eAAe/I,KAAO,GAC9DV,KAAKk1C,wBAAwB7lC,OAC7B,MACF,KAAK,KACHrP,KAAK4uB,aAAa/nB,gBAAgBJ,oBAAqB,EAI7D,OAAO,CACT,CAmCOmzC,YAAY5D,EAAiBz+B,GAWlC,MAAM6pC,EAAKphD,KAAK4uB,aAAa/nB,iBACrBka,eAAgBsgC,EAAeJ,eAAgBK,GAAkBthD,KAAK8zC,kBACxEyN,EAAKvhD,KAAK4uB,cACV,QAAE1W,EAAO,KAAE3K,GAASvN,KAAKyJ,gBACzB,OAAE0O,EAAM,IAAE6H,GAAQ9H,EAClBo6B,EAAOtyC,KAAKoQ,gBAAgBM,WAM5B8wC,EAAOz6C,GAAsBA,EAAQ,EAAQ,EAE7Cg2C,EAAI/G,EAAOA,OAAO,GAExB,OARWyL,EASa1E,EATFluC,EAQlB0I,EACQ,IAANwlC,EAAqB,EACf,IAANA,EAAqByE,EAAID,EAAGnD,MAAMD,YAC5B,KAANpB,EAAsB,EAChB,KAANA,EAAsByE,EAAIlP,EAAK6M,YACvB,EAGJ,IAANpC,EAAqByE,EAAIJ,EAAGjgC,uBACtB,IAAN47B,EAAqBzK,EAAKiH,cAAchH,YAAwB,KAAThlC,EAAc,EAAmB,MAATA,EAAe,EAAQ,EAAoB,EACpH,IAANwvC,EAAqByE,EAAIJ,EAAGn6B,QACtB,IAAN81B,EAAqByE,EAAIJ,EAAGlD,YACtB,IAANnB,EAAqB,EACf,IAANA,EAAqByE,EAAsB,QAAlBH,GACnB,KAANtE,EAAsByE,EAAIlP,EAAKnc,aACzB,KAAN4mB,EAAsByE,GAAKD,EAAG1pB,gBACxB,KAANklB,EAAsByE,EAAIJ,EAAGhC,mBACvB,KAANrC,EAAsByE,EAAIJ,EAAGJ,mBACvB,MAANjE,EAAwByE,EAAsB,UAAlBH,GACtB,OAANtE,EAAwByE,EAAsB,SAAlBH,GACtB,OAANtE,EAAwByE,EAAsB,QAAlBH,GACtB,OAANtE,EAAwByE,EAAIJ,EAAG5oC,WACzB,OAANukC,EAAwB,EAClB,OAANA,EAAwByE,EAAsB,QAAlBF,GACtB,OAANvE,EAAwB,EAClB,OAANA,EAAwByE,EAAsB,eAAlBF,GACtB,OAANvE,EAAwB,EAClB,KAANA,GAAkB,OAANA,GAAoB,OAANA,EAAwByE,EAAIrpC,IAAW6H,GAC3D,OAAN+8B,EAAwByE,EAAIJ,EAAG36C,oBACvB,EApCV86C,EAAGz6C,iBAAiB,GAAG,EAAA0Q,GAAGC,OAAOF,EAAO,GAAK,MAAMkqC,KAAK5yC,QACjD,EAFC,IAAC4yC,EAAW5yC,CAsCxB,CAKQ6yC,iBAAiBtqC,EAAeuqC,EAAcC,EAAYC,EAAYC,GAS5E,OARa,IAATH,GACFvqC,GAAS,SACTA,IAAS,SACTA,GAAS,EAAAqhB,cAAcspB,aAAa,CAACH,EAAIC,EAAIC,KAC3B,IAATH,IACTvqC,IAAS,SACTA,GAAS,SAA2B,IAALwqC,GAE1BxqC,CACT,CAMQ4qC,cAAchM,EAAiB7uC,EAAa86C,GAKlD,MAAMC,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG9B,IAAIC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAUnM,EAAOA,OAAO7uC,EAAMi7C,GACzCpM,EAAOqM,aAAal7C,EAAMi7C,GAAU,CACtC,MAAME,EAAYtM,EAAOuM,aAAap7C,EAAMi7C,GAC5C,IAAI/iD,EAAI,EACR,GACkB,IAAZ6iD,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAU/iD,EAAI,EAAI8iD,GAAUG,EAAUjjD,WAClCA,EAAIijD,EAAUphD,QAAU7B,EAAI+iD,EAAU,EAAID,EAASD,EAAKhhD,QACnE,K,CAGF,GAAiB,IAAZghD,EAAK,IAAYE,EAAUD,GAAU,GACxB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EACzC,MAGED,EAAK,KACPC,EAAS,E,SAEFC,EAAUj7C,EAAM6uC,EAAO90C,QAAUkhD,EAAUD,EAASD,EAAKhhD,QAGpE,IAAK,IAAI7B,EAAI,EAAGA,EAAI6iD,EAAKhhD,SAAU7B,GAChB,IAAb6iD,EAAK7iD,KACP6iD,EAAK7iD,GAAK,GAKd,OAAQ6iD,EAAK,IACX,KAAK,GACHD,EAAKx5C,GAAKzI,KAAK0hD,iBAAiBO,EAAKx5C,GAAIy5C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKz5C,GAAKxI,KAAK0hD,iBAAiBO,EAAKz5C,GAAI05C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAK7wC,SAAW6wC,EAAK7wC,SAASw5B,QAC9BqX,EAAK7wC,SAASoxC,eAAiBxiD,KAAK0hD,iBAAiBO,EAAK7wC,SAASoxC,eAAgBN,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOE,CACT,CAWQK,kBAAkBr8C,EAAe67C,GAGvCA,EAAK7wC,SAAW6wC,EAAK7wC,SAASw5B,WAGxBxkC,GAASA,EAAQ,KACrBA,EAAQ,GAEV67C,EAAK7wC,SAASinB,eAAiBjyB,EAC/B67C,EAAKx5C,IAAM,UAGG,IAAVrC,IACF67C,EAAKx5C,KAAM,WAIbw5C,EAAKS,gBACP,CAEQC,aAAaV,GACnBA,EAAKx5C,GAAK,EAAAmc,kBAAkBnc,GAC5Bw5C,EAAKz5C,GAAK,EAAAoc,kBAAkBpc,GAC5By5C,EAAK7wC,SAAW6wC,EAAK7wC,SAASw5B,QAG9BqX,EAAK7wC,SAASinB,eAAiB,EAC/B4pB,EAAK7wC,SAASoxC,iBAAkB,SAChCP,EAAKS,gBACP,CAoFO1J,eAAehD,GAEpB,GAAsB,IAAlBA,EAAO90C,QAAqC,IAArB80C,EAAOA,OAAO,GAEvC,OADAh2C,KAAK2iD,aAAa3iD,KAAK40C,eAChB,EAGT,MAAMgO,EAAI5M,EAAO90C,OACjB,IAAI67C,EACJ,MAAMkF,EAAOjiD,KAAK40C,aAElB,IAAK,IAAIv1C,EAAI,EAAGA,EAAIujD,EAAGvjD,IACrB09C,EAAI/G,EAAOA,OAAO32C,GACd09C,GAAK,IAAMA,GAAK,IAElBkF,EAAKx5C,KAAM,SACXw5C,EAAKx5C,IAAM,SAAqBs0C,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkF,EAAKz5C,KAAM,SACXy5C,EAAKz5C,IAAM,SAAqBu0C,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkF,EAAKx5C,KAAM,SACXw5C,EAAKx5C,IAAM,SAAqBs0C,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BkF,EAAKz5C,KAAM,SACXy5C,EAAKz5C,IAAM,SAAqBu0C,EAAI,KACrB,IAANA,EAET/8C,KAAK2iD,aAAaV,GACH,IAANlF,EAETkF,EAAKx5C,IAAM,UACI,IAANs0C,EAETkF,EAAKz5C,IAAM,SACI,IAANu0C,GAETkF,EAAKx5C,IAAM,UACXzI,KAAKyiD,kBAAkBzM,EAAOqM,aAAahjD,GAAK22C,EAAOuM,aAAaljD,GAAI,GAAK,EAAuB4iD,IACrF,IAANlF,EAETkF,EAAKx5C,IAAM,UACI,IAANs0C,EAGTkF,EAAKx5C,IAAM,SACI,IAANs0C,EAETkF,EAAKx5C,IAAM,WACI,IAANs0C,EAETkF,EAAKx5C,IAAM,WACI,IAANs0C,EAETkF,EAAKz5C,IAAM,UACI,KAANu0C,EAET/8C,KAAKyiD,kBAAkB,EAAuBR,GAC/B,KAANlF,GAETkF,EAAKx5C,KAAM,UACXw5C,EAAKz5C,KAAM,WACI,KAANu0C,EAETkF,EAAKz5C,KAAM,SACI,KAANu0C,GAETkF,EAAKx5C,KAAM,UACXzI,KAAKyiD,kBAAkB,EAAqBR,IAC7B,KAANlF,EAETkF,EAAKx5C,KAAM,UACI,KAANs0C,EAETkF,EAAKx5C,KAAM,SACI,KAANs0C,EAETkF,EAAKx5C,KAAM,WACI,KAANs0C,EAETkF,EAAKx5C,IAAM,WACI,KAANs0C,GAETkF,EAAKx5C,KAAM,SACXw5C,EAAKx5C,IAA6B,SAAvB,EAAAmc,kBAAkBnc,IACd,KAANs0C,GAETkF,EAAKz5C,KAAM,SACXy5C,EAAKz5C,IAA6B,SAAvB,EAAAoc,kBAAkBpc,IACd,KAANu0C,GAAkB,KAANA,GAAkB,KAANA,EAEjC19C,GAAKW,KAAKgiD,cAAchM,EAAQ32C,EAAG4iD,GACpB,KAANlF,GACTkF,EAAK7wC,SAAW6wC,EAAK7wC,SAASw5B,QAC9BqX,EAAK7wC,SAASoxC,gBAAkB,EAChCP,EAAKS,kBACU,MAAN3F,GAETkF,EAAKx5C,KAAM,SACXw5C,EAAKx5C,IAA6B,SAAvB,EAAAmc,kBAAkBnc,GAC7Bw5C,EAAKz5C,KAAM,SACXy5C,EAAKz5C,IAA6B,SAAvB,EAAAoc,kBAAkBpc,IAE7BxI,KAAKib,YAAYC,MAAM,6BAA8B6hC,GAGzD,OAAO,CACT,CA2BO9D,aAAajD,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEHh2C,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGC,UACzC,MACF,KAAK,EAEH,MAAM7L,EAAI5L,KAAKonB,cAAcxb,EAAI,EAC3BD,EAAI3L,KAAKonB,cAAczb,EAAI,EACjC3L,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGC,OAAO7L,KAAKD,MAGzD,OAAO,CACT,CAGOutC,oBAAoBlD,GAGzB,GACO,IADCA,EAAOA,OAAO,GACpB,CAEE,MAAMpqC,EAAI5L,KAAKonB,cAAcxb,EAAI,EAC3BD,EAAI3L,KAAKonB,cAAczb,EAAI,EACjC3L,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGC,QAAQ7L,KAAKD,KACjD,CAkBT,OAAO,CACT,CAqBOwtC,UAAUnD,GAkBf,OAjBAh2C,KAAK4uB,aAAaiJ,gBAAiB,EACnC73B,KAAKk1C,wBAAwB7lC,OAC7BrP,KAAKonB,cAAce,UAAY,EAC/BnoB,KAAKonB,cAAcwoB,aAAe5vC,KAAKyJ,eAAe/I,KAAO,EAC7DV,KAAK40C,aAAe,EAAAhwB,kBAAkBgmB,QACtC5qC,KAAK4uB,aAAavY,QAClBrW,KAAKmvC,gBAAgB94B,QAGrBrW,KAAKonB,cAAcy7B,OAAS,EAC5B7iD,KAAKonB,cAAc07B,OAAS9iD,KAAKonB,cAAclO,MAC/ClZ,KAAKonB,cAAc27B,iBAAiBt6C,GAAKzI,KAAK40C,aAAansC,GAC3DzI,KAAKonB,cAAc27B,iBAAiBv6C,GAAKxI,KAAK40C,aAAapsC,GAC3DxI,KAAKonB,cAAc47B,aAAehjD,KAAKmvC,gBAAgB6O,QAGvDh+C,KAAK4uB,aAAa/nB,gBAAgBogB,QAAS,GACpC,CACT,CAqBOmyB,eAAepD,GACpB,MAAM6J,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,OAAQ6J,GACN,KAAK,EACL,KAAK,EACH7/C,KAAKoQ,gBAAgB/G,QAAQgtB,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACHr2B,KAAKoQ,gBAAgB/G,QAAQgtB,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACHr2B,KAAKoQ,gBAAgB/G,QAAQgtB,YAAc,MAG/C,MAAM4sB,EAAapD,EAAQ,GAAM,EAEjC,OADA7/C,KAAKoQ,gBAAgB/G,QAAQ8sB,YAAc8sB,GACpC,CACT,CASO5J,gBAAgBrD,GACrB,MAAMzuC,EAAMyuC,EAAOA,OAAO,IAAM,EAChC,IAAIkN,EAWJ,OATIlN,EAAO90C,OAAS,IAAMgiD,EAASlN,EAAOA,OAAO,IAAMh2C,KAAKyJ,eAAe/I,MAAmB,IAAXwiD,KACjFA,EAASljD,KAAKyJ,eAAe/I,MAG3BwiD,EAAS37C,IACXvH,KAAKonB,cAAce,UAAY5gB,EAAM,EACrCvH,KAAKonB,cAAcwoB,aAAesT,EAAS,EAC3CljD,KAAKy/C,WAAW,EAAG,KAEd,CACT,CAgCOlG,cAAcvD,GACnB,IAAK5D,EAAoB4D,EAAOA,OAAO,GAAIh2C,KAAKoQ,gBAAgBM,WAAW6oC,eACzE,OAAO,EAET,MAAM4J,EAAUnN,EAAO90C,OAAS,EAAK80C,EAAOA,OAAO,GAAK,EACxD,OAAQA,EAAOA,OAAO,IACpB,KAAK,GACY,IAAXmN,GACFnjD,KAAKm1C,+BAA+B9lC,KAAKyV,EAAyBC,qBAEpE,MACF,KAAK,GACH/kB,KAAKm1C,+BAA+B9lC,KAAKyV,EAAyBM,sBAClE,MACF,KAAK,GACCplB,KAAKyJ,gBACPzJ,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGC,SAASzX,KAAKyJ,eAAe/I,QAAQV,KAAKyJ,eAAe8D,SAEpG,MACF,KAAK,GACY,IAAX41C,GAA2B,IAAXA,IAClBnjD,KAAK00C,kBAAkBlwC,KAAKxE,KAAKw0C,cAC7Bx0C,KAAK00C,kBAAkBxzC,OAtqFjB,IAuqFRlB,KAAK00C,kBAAkBtwC,SAGZ,IAAX++C,GAA2B,IAAXA,IAClBnjD,KAAK20C,eAAenwC,KAAKxE,KAAKy0C,WAC1Bz0C,KAAK20C,eAAezzC,OA5qFd,IA6qFRlB,KAAK20C,eAAevwC,SAGxB,MACF,KAAK,GACY,IAAX++C,GAA2B,IAAXA,GACdnjD,KAAK00C,kBAAkBxzC,QACzBlB,KAAKo7C,SAASp7C,KAAK00C,kBAAkBxwC,OAG1B,IAAXi/C,GAA2B,IAAXA,GACdnjD,KAAK20C,eAAezzC,QACtBlB,KAAKq7C,YAAYr7C,KAAK20C,eAAezwC,OAK7C,OAAO,CACT,CAWOo1C,WAAWtD,GAMhB,OALAh2C,KAAKonB,cAAcy7B,OAAS7iD,KAAKonB,cAAczb,EAC/C3L,KAAKonB,cAAc07B,OAAS9iD,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAC1E5L,KAAKonB,cAAc27B,iBAAiBt6C,GAAKzI,KAAK40C,aAAansC,GAC3DzI,KAAKonB,cAAc27B,iBAAiBv6C,GAAKxI,KAAK40C,aAAapsC,GAC3DxI,KAAKonB,cAAc47B,aAAehjD,KAAKmvC,gBAAgB6O,SAChD,CACT,CAWOxE,cAAcxD,GAUnB,OATAh2C,KAAKonB,cAAczb,EAAI3L,KAAKonB,cAAcy7B,QAAU,EACpD7iD,KAAKonB,cAAcxb,EAAIoH,KAAKG,IAAInT,KAAKonB,cAAc07B,OAAS9iD,KAAKonB,cAAclO,MAAO,GACtFlZ,KAAK40C,aAAansC,GAAKzI,KAAKonB,cAAc27B,iBAAiBt6C,GAC3DzI,KAAK40C,aAAapsC,GAAKxI,KAAKonB,cAAc27B,iBAAiBv6C,GAC3DxI,KAAKmvC,gBAAgB6O,QAAWh+C,KAAaojD,cACzCpjD,KAAKonB,cAAc47B,eACrBhjD,KAAKmvC,gBAAgB6O,QAAUh+C,KAAKonB,cAAc47B,cAEpDhjD,KAAKq/C,mBACE,CACT,CAaOjE,SAASh6B,GAGd,OAFAphB,KAAKw0C,aAAepzB,EACpBphB,KAAK8U,eAAezF,KAAK+R,IAClB,CACT,CAMOi6B,YAAYj6B,GAEjB,OADAphB,KAAKy0C,UAAYrzB,GACV,CACT,CAUOk6B,wBAAwBl6B,GAC7B,MAAMnX,EAAqB,GACrBo5C,EAAQjiC,EAAKs8B,MAAM,KACzB,KAAO2F,EAAMniD,OAAS,GAAG,CACvB,MAAMoiD,EAAMD,EAAMj/C,QACZm/C,EAAOF,EAAMj/C,QACnB,GAAI,QAAQo/C,KAAKF,GAAM,CACrB,MAAM71C,EAAQ2iB,SAASkzB,GACvB,GAAI,GAAK71C,GAASA,EAAQ,IACxB,GAAa,MAAT81C,EACFt5C,EAAMzF,KAAK,CAAE2E,KAAM,EAAyBsE,cACvC,CACL,MAAM2J,GAAQ,IAAAmwB,YAAWgc,GACrBnsC,GACFnN,EAAMzF,KAAK,CAAE2E,KAAM,EAAsBsE,QAAO2J,S,GAS1D,OAHInN,EAAM/I,QACRlB,KAAKs1C,SAASjmC,KAAKpF,IAEd,CACT,CAkBOsxC,aAAan6B,GAClB,MAAMqiC,EAAOriC,EAAKs8B,MAAM,KACxB,QAAI+F,EAAKviD,OAAS,KAGduiD,EAAK,GACAzjD,KAAK0jD,iBAAiBD,EAAK,GAAIA,EAAK,KAEzCA,EAAK,IAGFzjD,KAAK2jD,mBACd,CAEQD,iBAAiB1N,EAAgBzkC,GAEnCvR,KAAKs9C,qBACPt9C,KAAK2jD,mBAEP,MAAMC,EAAe5N,EAAO0H,MAAM,KAClC,IAAI5gB,EACJ,MAAM+mB,EAAeD,EAAaE,WAAUhjD,GAAKA,EAAEijD,WAAW,SAO9D,OANsB,IAAlBF,IACF/mB,EAAK8mB,EAAaC,GAAc1e,MAAM,SAAM76B,GAE9CtK,KAAK40C,aAAaxjC,SAAWpR,KAAK40C,aAAaxjC,SAASw5B,QACxD5qC,KAAK40C,aAAaxjC,SAASC,MAAQrR,KAAKqQ,gBAAgB2zC,aAAa,CAAElnB,KAAIvrB,QAC3EvR,KAAK40C,aAAa8N,kBACX,CACT,CAEQiB,mBAIN,OAHA3jD,KAAK40C,aAAaxjC,SAAWpR,KAAK40C,aAAaxjC,SAASw5B,QACxD5qC,KAAK40C,aAAaxjC,SAASC,MAAQ,EACnCrR,KAAK40C,aAAa8N,kBACX,CACT,CAUQuB,yBAAyB7iC,EAAc2hB,GAC7C,MAAMsgB,EAAQjiC,EAAKs8B,MAAM,KACzB,IAAK,IAAIr+C,EAAI,EAAGA,EAAIgkD,EAAMniD,UACpB6hC,GAAU/iC,KAAK41C,eAAe10C,UADA7B,IAAK0jC,EAEvC,GAAiB,MAAbsgB,EAAMhkD,GACRW,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,EAAyBsE,MAAOzN,KAAK41C,eAAe7S,UAC3E,CACL,MAAM3rB,GAAQ,IAAAmwB,YAAW8b,EAAMhkD,IAC3B+X,GACFpX,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,EAAsBsE,MAAOzN,KAAK41C,eAAe7S,GAAS3rB,U,CAI5F,OAAO,CACT,CAwBOokC,mBAAmBp6B,GACxB,OAAOphB,KAAKikD,yBAAyB7iC,EAAM,EAC7C,CAOOq6B,mBAAmBr6B,GACxB,OAAOphB,KAAKikD,yBAAyB7iC,EAAM,EAC7C,CAOOs6B,uBAAuBt6B,GAC5B,OAAOphB,KAAKikD,yBAAyB7iC,EAAM,EAC7C,CAUOu6B,oBAAoBv6B,GACzB,IAAKA,EAEH,OADAphB,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,MACrB,EAET,MAAMc,EAAqB,GACrBo5C,EAAQjiC,EAAKs8B,MAAM,KACzB,IAAK,IAAIr+C,EAAI,EAAGA,EAAIgkD,EAAMniD,SAAU7B,EAClC,GAAI,QAAQmkD,KAAKH,EAAMhkD,IAAK,CAC1B,MAAMoO,EAAQ2iB,SAASizB,EAAMhkD,IACzB,GAAKoO,GAASA,EAAQ,KACxBxD,EAAMzF,KAAK,CAAE2E,KAAM,EAA0BsE,S,CAOnD,OAHIxD,EAAM/I,QACRlB,KAAKs1C,SAASjmC,KAAKpF,IAEd,CACT,CAOO2xC,eAAex6B,GAEpB,OADAphB,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,EAA0BsE,MAAO,QACtD,CACT,CAOOouC,eAAez6B,GAEpB,OADAphB,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,EAA0BsE,MAAO,QACtD,CACT,CAOOquC,mBAAmB16B,GAExB,OADAphB,KAAKs1C,SAASjmC,KAAK,CAAC,CAAElG,KAAM,EAA0BsE,MAAO,QACtD,CACT,CAWOutC,WAGL,OAFAh7C,KAAKonB,cAAczb,EAAI,EACvB3L,KAAKyN,SACE,CACT,CAOOuuC,wBAIL,OAHAh8C,KAAKib,YAAYC,MAAM,6CACvBlb,KAAK4uB,aAAa/nB,gBAAgBm6C,mBAAoB,EACtDhhD,KAAKk1C,wBAAwB7lC,QACtB,CACT,CAOO4sC,oBAIL,OAHAj8C,KAAKib,YAAYC,MAAM,oCACvBlb,KAAK4uB,aAAa/nB,gBAAgBm6C,mBAAoB,EACtDhhD,KAAKk1C,wBAAwB7lC,QACtB,CACT,CAQO+sC,uBAGL,OAFAp8C,KAAKmvC,gBAAgBgN,UAAU,GAC/Bn8C,KAAKmvC,gBAAgB2R,YAAY,EAAG,EAAAC,kBAC7B,CACT,CAkBOxE,cAAc2H,GACnB,OAA8B,IAA1BA,EAAehjD,QACjBlB,KAAKo8C,wBACE,IAEiB,MAAtB8H,EAAe,IAGnBlkD,KAAKmvC,gBAAgB2R,YAAY5O,EAAOgS,EAAe,IAAK,EAAA5H,SAAS4H,EAAe,KAAO,EAAAnD,kBAFlF,EAIX,CAWOtzC,QAUL,OATAzN,KAAKq/C,kBACLr/C,KAAKonB,cAAcxb,IACf5L,KAAKonB,cAAcxb,IAAM5L,KAAKonB,cAAcwoB,aAAe,GAC7D5vC,KAAKonB,cAAcxb,IACnB5L,KAAKyJ,eAAeinC,OAAO1wC,KAAK6+C,mBACvB7+C,KAAKonB,cAAcxb,GAAK5L,KAAKyJ,eAAe/I,OACrDV,KAAKonB,cAAcxb,EAAI5L,KAAKyJ,eAAe/I,KAAO,GAEpDV,KAAKq/C,mBACE,CACT,CAYOnE,SAEL,OADAl7C,KAAKonB,cAAc04B,KAAK9/C,KAAKonB,cAAczb,IAAK,GACzC,CACT,CAWOowC,eAEL,GADA/7C,KAAKq/C,kBACDr/C,KAAKonB,cAAcxb,IAAM5L,KAAKonB,cAAce,UAAW,CAIzD,MAAMg8B,EAAqBnkD,KAAKonB,cAAcwoB,aAAe5vC,KAAKonB,cAAce,UAChFnoB,KAAKonB,cAActjB,MAAM4mC,cAAc1qC,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAAGu4C,EAAoB,GAC5GnkD,KAAKonB,cAActjB,MAAM4E,IAAI1I,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAAG5L,KAAKonB,cAAczC,aAAa3kB,KAAK6+C,mBACnH7+C,KAAK61C,iBAAiBlG,eAAe3vC,KAAKonB,cAAce,UAAWnoB,KAAKonB,cAAcwoB,a,MAEtF5vC,KAAKonB,cAAcxb,IACnB5L,KAAKq/C,kBAEP,OAAO,CACT,CAOOnD,YAGL,OAFAl8C,KAAKg0C,QAAQ39B,QACbrW,KAAKg1C,gBAAgB3lC,QACd,CACT,CAEOgH,QACLrW,KAAK40C,aAAe,EAAAhwB,kBAAkBgmB,QACtC5qC,KAAK60C,uBAAyB,EAAAjwB,kBAAkBgmB,OAClD,CAKQiU,iBAGN,OAFA7+C,KAAK60C,uBAAuBrsC,KAAM,SAClCxI,KAAK60C,uBAAuBrsC,IAA6B,SAAvBxI,KAAK40C,aAAapsC,GAC7CxI,KAAK60C,sBACd,CAYOsH,UAAUiI,GAEf,OADApkD,KAAKmvC,gBAAgBgN,UAAUiI,IACxB,CACT,CAUO5H,yBAEL,MAAMt2C,EAAO,IAAI,EAAAyK,SACjBzK,EAAKo2B,QAAU,GAAK,GAAsB,IAAI5Y,WAAW,GACzDxd,EAAKuC,GAAKzI,KAAK40C,aAAansC,GAC5BvC,EAAKsC,GAAKxI,KAAK40C,aAAapsC,GAG5BxI,KAAKy/C,WAAW,EAAG,GACnB,IAAK,IAAI4E,EAAU,EAAGA,EAAUrkD,KAAKyJ,eAAe/I,OAAQ2jD,EAAS,CACnE,MAAMxkC,EAAM7f,KAAKonB,cAAclO,MAAQlZ,KAAKonB,cAAcxb,EAAIy4C,EACxD9zC,EAAOvQ,KAAKonB,cAActjB,MAAM8E,IAAIiX,GACtCtP,IACFA,EAAK8vC,KAAKn6C,GACVqK,EAAK+gB,WAAY,E,CAKrB,OAFAtxB,KAAK61C,iBAAiByO,eACtBtkD,KAAKy/C,WAAW,EAAG,IACZ,CACT,CA6BO9C,oBAAoBv7B,EAAc40B,GACvC,MAMMtP,EAAI1mC,KAAKyJ,eAAe5F,OACxByuC,EAAOtyC,KAAKoQ,gBAAgBM,WAGlC,MAVU,CAAC66B,IACTvrC,KAAK4uB,aAAa9nB,iBAAiB,GAAG,EAAA0Q,GAAGC,MAAM8zB,IAAI,EAAA/zB,GAAGC,UAC/C,GAQiB8sC,CAAb,OAATnjC,EAAwB,OAAOphB,KAAK40C,aAAa4P,cAAgB,EAAI,MAC5D,OAATpjC,EAAwB,aACf,MAATA,EAAuB,OAAOslB,EAAEve,UAAY,KAAKue,EAAEkJ,aAAe,KAEzD,MAATxuB,EAAuB,SACd,OAATA,EAAwB,OAPc,CAAE,MAAS,EAAG,UAAa,EAAG,IAAO,GAOrCkxB,EAAKjc,cAAgBic,EAAKnc,YAAc,EAAI,OAC7E,OACX,CAEOwZ,eAAe7/B,EAAYE,GAChChQ,KAAK61C,iBAAiBlG,eAAe7/B,EAAIE,EAC3C,EA3qGF,iBAwrGA,IAAM8lC,EAAN,MAIEr2C,YACmCgK,GAAA,KAAAA,eAAAA,EAEjCzJ,KAAK29C,YACP,CAEOA,aACL39C,KAAKiC,MAAQjC,KAAKyJ,eAAe5F,OAAO+H,EACxC5L,KAAKkC,IAAMlC,KAAKyJ,eAAe5F,OAAO+H,CACxC,CAEO2yC,UAAU3yC,GACXA,EAAI5L,KAAKiC,MACXjC,KAAKiC,MAAQ2J,EACJA,EAAI5L,KAAKkC,MAClBlC,KAAKkC,IAAM0J,EAEf,CAEO+jC,eAAe7/B,EAAYE,GAC5BF,EAAKE,IACP6jC,EAAQ/jC,EACRA,EAAKE,EACLA,EAAK6jC,GAEH/jC,EAAK9P,KAAKiC,QACZjC,KAAKiC,MAAQ6N,GAEXE,EAAKhQ,KAAKkC,MACZlC,KAAKkC,IAAM8N,EAEf,CAEOs0C,eACLtkD,KAAK2vC,eAAe,EAAG3vC,KAAKyJ,eAAe/I,KAAO,EACpD,GAvCIo1C,EAAe,GAKhB,MAAA7lC,iBALC6lC,E,cC9uGN,SAAgB1nC,EAAakjC,GAC3B,IAAK,MAAM3X,KAAK2X,EACd3X,EAAEpwB,UAEJ+nC,EAAYpwC,OAAS,CACvB,C,+HAxDA,mBAIEzB,cAHU,KAAAglD,aAA8B,GAC9B,KAAAl8B,aAAuB,CAGjC,CAKOhf,UACLvJ,KAAKuoB,aAAc,EACnB,IAAK,MAAMoR,KAAK35B,KAAKykD,aACnB9qB,EAAEpwB,UAEJvJ,KAAKykD,aAAavjD,OAAS,CAC7B,CAOOW,SAAgC83B,GAErC,OADA35B,KAAKykD,aAAajgD,KAAKm1B,GAChBA,CACT,CAOO+qB,WAAkC/qB,GACvC,MAAMlsB,EAAQzN,KAAKykD,aAAa75C,QAAQ+uB,IACzB,IAAXlsB,GACFzN,KAAKykD,aAAa55C,OAAO4C,EAAO,EAEpC,GAMF,wBAA6B82C,GAC3B,MAAO,CAAEh7C,QAASg7C,EACpB,EAKA,iBAUA,qCAA0CI,GACxC,MAAO,CAAEp7C,QAAS,IAAM6E,EAAau2C,GACvC,C,gGCrEA,MAAat8C,EAAb,cACU,KAAAu8C,MAA8F,CAAC,CAgBzG,CAdSl8C,IAAIo9B,EAAeqd,EAAiBp8C,GACpC/G,KAAK4kD,MAAM9e,KACd9lC,KAAK4kD,MAAM9e,GAAS,CAAC,GAEvB9lC,KAAK4kD,MAAM9e,GAA2Bqd,GAAUp8C,CAClD,CAEO6B,IAAIk9B,EAAeqd,GACxB,OAAOnjD,KAAK4kD,MAAM9e,GAA4B9lC,KAAK4kD,MAAM9e,GAA2Bqd,QAAU74C,CAChG,CAEOvB,QACL/I,KAAK4kD,MAAQ,CAAC,CAChB,EAhBF,cAmBA,iCACU,KAAAA,MAAwE,IAAIv8C,CAgBtF,CAdSK,IAAIo9B,EAAeqd,EAAiB0B,EAAeC,EAAiB/9C,GACpE/G,KAAK4kD,MAAMh8C,IAAIk9B,EAAOqd,IACzBnjD,KAAK4kD,MAAMl8C,IAAIo9B,EAAOqd,EAAQ,IAAI96C,GAEpCrI,KAAK4kD,MAAMh8C,IAAIk9B,EAAOqd,GAASz6C,IAAIm8C,EAAOC,EAAQ/9C,EACpD,CAEO6B,IAAIk9B,EAAeqd,EAAiB0B,EAAeC,G,MACxD,OAAoC,QAA7B,EAAA9kD,KAAK4kD,MAAMh8C,IAAIk9B,EAAOqd,UAAO,eAAEv6C,IAAIi8C,EAAOC,EACnD,CAEO/7C,QACL/I,KAAK4kD,MAAM77C,OACb,E,2LCzBW,EAAAwjC,OAA+B,oBAAdwY,UAC9B,MAAMC,EAAa,EAAM,OAAI,OAASD,UAAUC,UAC1CC,EAAY,EAAM,OAAI,OAASF,UAAUE,SAElC,EAAA/qC,UAAY8qC,EAAUE,SAAS,WAC/B,EAAAlqB,aAAegqB,EAAUE,SAAS,QAClC,EAAAC,SAAW,iCAAiCC,KAAKJ,GAC9D,8BACE,IAAK,EAAAG,SACH,OAAO,EAET,MAAME,EAAeL,EAAUrY,MAAM,kBACrC,OAAqB,OAAjB0Y,GAAyBA,EAAankD,OAAS,EAC1C,EAEFkvB,SAASi1B,EAAa,GAC/B,EAKa,EAAAlgD,MAAQ,CAAC,YAAa,WAAY,SAAU,UAAU+/C,SAASD,GAC/D,EAAAK,OAAsB,SAAbL,EACT,EAAAM,SAAwB,WAAbN,EACX,EAAAlhC,UAAY,CAAC,UAAW,QAAS,QAAS,SAASmhC,SAASD,GAC5D,EAAA3qC,QAAU2qC,EAASr6C,QAAQ,UAAY,C,oFClCpD,IAAIvL,EAAI,EAOR,mBAGEI,YACmB+lD,GAAA,KAAAA,QAAAA,EAHF,KAAA7b,OAAc,EAK/B,CAEO5gC,QACL/I,KAAK2pC,OAAOzoC,OAAS,CACvB,CAEOukD,OAAO1+C,GACe,IAAvB/G,KAAK2pC,OAAOzoC,QAIhB7B,EAAIW,KAAK0lD,QAAQ1lD,KAAKwlD,QAAQz+C,GAAQ,EAAG/G,KAAK2pC,OAAOzoC,OAAS,GAC9DlB,KAAK2pC,OAAO9+B,OAAOxL,EAAG,EAAG0H,IAJvB/G,KAAK2pC,OAAOnlC,KAAKuC,EAKrB,CAEOmkB,OAAOnkB,GACZ,GAA2B,IAAvB/G,KAAK2pC,OAAOzoC,OACd,OAAO,EAET,MAAM2B,EAAM7C,KAAKwlD,QAAQz+C,GACzB,QAAYuD,IAARzH,EACF,OAAO,EAGT,GADAxD,EAAIW,KAAK0lD,QAAQ7iD,EAAK,EAAG7C,KAAK2pC,OAAOzoC,OAAS,IACnC,IAAP7B,EACF,OAAO,EAET,GAAIW,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,EACnC,OAAO,EAET,GACE,GAAI7C,KAAK2pC,OAAOtqC,KAAO0H,EAErB,OADA/G,KAAK2pC,OAAO9+B,OAAOxL,EAAG,IACf,UAEAA,EAAIW,KAAK2pC,OAAOzoC,QAAUlB,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,GACtE,OAAO,CACT,CAEO,gBAAgBA,GACrB,GAA2B,IAAvB7C,KAAK2pC,OAAOzoC,SAGhB7B,EAAIW,KAAK0lD,QAAQ7iD,EAAK,EAAG7C,KAAK2pC,OAAOzoC,OAAS,KAC1C7B,EAAI,GAAKA,GAAKW,KAAK2pC,OAAOzoC,SAG1BlB,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,GAGrC,SACQ7C,KAAK2pC,OAAOtqC,WACTA,EAAIW,KAAK2pC,OAAOzoC,QAAUlB,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,EACxE,CAEO8iD,aAAa9iD,EAAayN,GAC/B,GAA2B,IAAvBtQ,KAAK2pC,OAAOzoC,SAGhB7B,EAAIW,KAAK0lD,QAAQ7iD,EAAK,EAAG7C,KAAK2pC,OAAOzoC,OAAS,KAC1C7B,EAAI,GAAKA,GAAKW,KAAK2pC,OAAOzoC,SAG1BlB,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,GAGrC,GACEyN,EAAStQ,KAAK2pC,OAAOtqC,YACZA,EAAIW,KAAK2pC,OAAOzoC,QAAUlB,KAAKwlD,QAAQxlD,KAAK2pC,OAAOtqC,MAAQwD,EACxE,CAEO+iD,SACL,OAAO5lD,KAAK2pC,OAAOic,QACrB,CAEQF,QAAQ7iD,EAAaoQ,EAAaE,GACxC,GAAIA,EAAMF,EACR,OAAOA,EAET,IAAI4yC,EAAM7yC,KAAKuW,OAAOtW,EAAME,GAAO,GACnC,MAAM2yC,EAAS9lD,KAAKwlD,QAAQxlD,KAAK2pC,OAAOkc,IACxC,GAAIC,EAASjjD,EACX,OAAO7C,KAAK0lD,QAAQ7iD,EAAKoQ,EAAK4yC,EAAM,GAEtC,GAAIC,EAASjjD,EACX,OAAO7C,KAAK0lD,QAAQ7iD,EAAKgjD,EAAM,EAAG1yC,GAIpC,KAAO0yC,EAAM,GAAK7lD,KAAKwlD,QAAQxlD,KAAK2pC,OAAOkc,EAAM,MAAQhjD,GACvDgjD,IAEF,OAAOA,CACT,E,iIC3GF,gBAwBA,MAAeE,EAAf,cACU,KAAAC,OAAyB,GAEzB,KAAAC,GAAK,CAkDf,CA7CSC,QAAQC,GACbnmD,KAAKgmD,OAAOxhD,KAAK2hD,GACjBnmD,KAAKomD,QACP,CAEO7lB,QACL,KAAOvgC,KAAKimD,GAAKjmD,KAAKgmD,OAAO9kD,QAC3BlB,KAAKgmD,OAAOhmD,KAAKimD,QAEnBjmD,KAAK+I,OACP,CAEOA,QACD/I,KAAKqmD,gBACPrmD,KAAKsmD,gBAAgBtmD,KAAKqmD,eAC1BrmD,KAAKqmD,mBAAgB/7C,GAEvBtK,KAAKimD,GAAK,EACVjmD,KAAKgmD,OAAO9kD,OAAS,CACvB,CAEQklD,SACDpmD,KAAKqmD,gBACRrmD,KAAKqmD,cAAgBrmD,KAAKumD,iBAAiBvmD,KAAKwmD,SAASjlD,KAAKvB,OAElE,CAEQwmD,SAASC,GACfzmD,KAAKqmD,mBAAgB/7C,EACrB,IAAIo8C,EAAe,EACfC,EAAc,EAClB,KAAO3mD,KAAKimD,GAAKjmD,KAAKgmD,OAAO9kD,QAO3B,GANAwlD,EAAeE,YAAY9gC,MAC3B9lB,KAAKgmD,OAAOhmD,KAAKimD,QACjBS,EAAeE,YAAY9gC,MAAQ4gC,EACnCC,EAAc3zC,KAAKG,IAAIuzC,EAAcC,GAGnB,IAAdA,EAAoBF,EAASI,gBAE/B,YADA7mD,KAAKomD,SAITpmD,KAAK+I,OACP,EAQF,MAAa+9C,UAA0Bf,EAC3BQ,iBAAiBj2C,GACzB,OAAOjL,YAAW,IAAMiL,EAAStQ,KAAK+mD,gBAAgB,MACxD,CAEUT,gBAAgBrQ,GACxBtwB,aAAaswB,EACf,CAEQ8Q,gBAAgBC,GACtB,MAAM9kD,EAAM0kD,YAAY9gC,MAAQkhC,EAChC,MAAO,CACLH,cAAe,IAAM7zC,KAAKG,IAAI,EAAGjR,EAAM0kD,YAAY9gC,OAEvD,EAdF,sBAoCa,EAAAmhC,eAAkB,EAAA1a,QAAU,wBAAyBppC,OAnBlE,cAAoC4iD,EACxBQ,iBAAiBj2C,GACzB,OAAO42C,oBAAoB52C,EAC7B,CAEUg2C,gBAAgBrQ,GACxBkR,mBAAmBlR,EACrB,GAYkG6Q,EAMpG,0BAGErnD,cACEO,KAAKonD,OAAS,IAAI,EAAAH,aACpB,CAEOv+C,IAAIy9C,GACTnmD,KAAKonD,OAAOr+C,QACZ/I,KAAKonD,OAAOlB,QAAQC,EACtB,CAEO5lB,QACLvgC,KAAKonD,OAAO7mB,OACd,E,yGC5IF,eAGA,yCAA8CxP,GAW5C,MAAMxgB,EAAOwgB,EAAcltB,OAAOC,MAAM8E,IAAImoB,EAAcltB,OAAOqV,MAAQ6X,EAAcltB,OAAO+H,EAAI,GAC5Fy7C,EAAW92C,aAAI,EAAJA,EAAM3H,IAAImoB,EAAcxjB,KAAO,GAE1CytC,EAAWjqB,EAAcltB,OAAOC,MAAM8E,IAAImoB,EAAcltB,OAAOqV,MAAQ6X,EAAcltB,OAAO+H,GAC9FovC,GAAYqM,IACdrM,EAAS1pB,UAAa+1B,EAAS,EAAAC,wBAA0B,EAAA/vB,gBAAkB8vB,EAAS,EAAAC,wBAA0B,EAAAC,qBAElH,C,uGClBA,MAAa9uB,EAAb,cAsBS,KAAAhwB,GAAK,EACL,KAAAD,GAAK,EACL,KAAA4I,SAA2B,IAAIo2C,CA+FxC,CAtHSppB,kBAAkBr3B,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,EAEJ,CAEOq3B,oBAAoBr3B,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,EACvG,CAEO6jC,QACL,MAAM6c,EAAS,IAAIhvB,EAInB,OAHAgvB,EAAOh/C,GAAKzI,KAAKyI,GACjBg/C,EAAOj/C,GAAKxI,KAAKwI,GACjBi/C,EAAOr2C,SAAWpR,KAAKoR,SAASw5B,QACzB6c,CACT,CAQOruB,YAA4B,OAAiB,SAAVp5B,KAAKyI,EAAsB,CAC9DqvB,SAA4B,OAAiB,UAAV93B,KAAKyI,EAAmB,CAC3D2vB,cACL,OAAIp4B,KAAKmR,oBAAuD,IAAjCnR,KAAKoR,SAASinB,eACpC,EAEQ,UAAVr4B,KAAKyI,EACd,CACOi/C,UAA4B,OAAiB,UAAV1nD,KAAKyI,EAAoB,CAC5DwvB,cAA4B,OAAiB,WAAVj4B,KAAKyI,EAAwB,CAChEsvB,WAA4B,OAAiB,SAAV/3B,KAAKwI,EAAqB,CAC7DwvB,QAA4B,OAAiB,UAAVh4B,KAAKwI,EAAkB,CAC1DqwB,kBAA4B,OAAiB,WAAV74B,KAAKyI,EAA4B,CACpE+7C,cAA4B,OAAiB,UAAVxkD,KAAKwI,EAAwB,CAGhEwwB,iBAA2B,OAAiB,SAAVh5B,KAAKyI,EAAyB,CAChE0wB,iBAA2B,OAAiB,SAAVn5B,KAAKwI,EAAyB,CAChEm/C,UAA2B,OAA0C,WAAxB,SAAV3nD,KAAKyI,GAAgD,CACxFm/C,UAA2B,OAA0C,WAAxB,SAAV5nD,KAAKwI,GAAgD,CACxFq/C,cAA2B,OAA0C,WAAxB,SAAV7nD,KAAKyI,KAAqF,WAAxB,SAAVzI,KAAKyI,GAAiD,CACjJq/C,cAA2B,OAA0C,WAAxB,SAAV9nD,KAAKwI,KAAqF,WAAxB,SAAVxI,KAAKwI,GAAiD,CACjJu/C,cAA2B,OAA0C,IAAxB,SAAV/nD,KAAKyI,GAAgC,CACxEu/C,cAA2B,OAA0C,IAAxB,SAAVhoD,KAAKwI,GAAgC,CACxEy/C,qBAAgC,OAAmB,IAAZjoD,KAAKyI,IAAwB,IAAZzI,KAAKwI,EAAU,CAGvEswB,aACL,OAAkB,SAAV94B,KAAKyI,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVzI,KAAKyI,GACtC,KAAK,SAAqB,OAAiB,SAAVzI,KAAKyI,GACtC,QAA0B,OAAQ,EAEtC,CACOwwB,aACL,OAAkB,SAAVj5B,KAAKwI,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVxI,KAAKwI,GACtC,KAAK,SAAqB,OAAiB,SAAVxI,KAAKwI,GACtC,QAA0B,OAAQ,EAEtC,CAGO2I,mBACL,OAAiB,UAAVnR,KAAKwI,EACd,CACOk6C,iBACD1iD,KAAKoR,SAAS82C,UAChBloD,KAAKwI,KAAM,UAEXxI,KAAKwI,IAAM,SAEf,CACOkwB,oBACL,GAAe,UAAV14B,KAAKwI,KAA+BxI,KAAKoR,SAASoxC,eACrD,OAAuC,SAA/BxiD,KAAKoR,SAASoxC,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/BxiD,KAAKoR,SAASoxC,eAC/C,KAAK,SAAqB,OAAsC,SAA/BxiD,KAAKoR,SAASoxC,eAC/C,QAA0B,OAAOxiD,KAAK84B,aAG1C,OAAO94B,KAAK84B,YACd,CACOqvB,wBACL,OAAkB,UAAVnoD,KAAKwI,KAA+BxI,KAAKoR,SAASoxC,eACvB,SAA/BxiD,KAAKoR,SAASoxC,eACdxiD,KAAKg5B,gBACX,CACOT,sBACL,OAAkB,UAAVv4B,KAAKwI,KAA+BxI,KAAKoR,SAASoxC,eACE,WAAxB,SAA/BxiD,KAAKoR,SAASoxC,gBACfxiD,KAAK2nD,SACX,CACOS,0BACL,OAAkB,UAAVpoD,KAAKwI,KAA+BxI,KAAKoR,SAASoxC,eACE,WAAxB,SAA/BxiD,KAAKoR,SAASoxC,iBAC8C,WAAxB,SAA/BxiD,KAAKoR,SAASoxC,gBACpBxiD,KAAK6nD,aACX,CACOvvB,0BACL,OAAkB,UAAVt4B,KAAKwI,KAA+BxI,KAAKoR,SAASoxC,eACE,IAAxB,SAA/BxiD,KAAKoR,SAASoxC,gBACfxiD,KAAK+nD,aACX,CACOM,oBACL,OAAiB,UAAVroD,KAAKyI,GACG,UAAVzI,KAAKwI,GAA4BxI,KAAKoR,SAASinB,eAAiB,EACjE,CACN,EAtHF,kBA8HA,MAAamvB,EAyCX/nD,YACE6oD,EAAc,EACdj3C,EAAgB,GA1CV,KAAAk3C,KAAe,EAgCf,KAAAC,OAAiB,EAYvBxoD,KAAKuoD,KAAOD,EACZtoD,KAAKwoD,OAASn3C,CAChB,CA7CWi3C,UACT,OAAItoD,KAAKwoD,QAEQ,UAAZxoD,KAAKuoD,KACLvoD,KAAKq4B,gBAAkB,GAGrBr4B,KAAKuoD,IACd,CACWD,QAAIvhD,GAAiB/G,KAAKuoD,KAAOxhD,CAAO,CAExCsxB,qBAET,OAAIr4B,KAAKwoD,OACA,GAEW,UAAZxoD,KAAKuoD,OAAoC,EACnD,CACWlwB,mBAAetxB,GACxB/G,KAAKuoD,OAAQ,UACbvoD,KAAKuoD,MAASxhD,GAAS,GAAM,SAC/B,CAEWy7C,qBACT,OAAmB,SAAZxiD,KAAKuoD,IACd,CACW/F,mBAAez7C,GACxB/G,KAAKuoD,OAAQ,SACbvoD,KAAKuoD,MAAgB,SAARxhD,CACf,CAGWsK,YACT,OAAOrR,KAAKwoD,MACd,CACWn3C,UAAMtK,GACf/G,KAAKwoD,OAASzhD,CAChB,CAUO6jC,QACL,OAAO,IAAI4c,EAAcxnD,KAAKuoD,KAAMvoD,KAAKwoD,OAC3C,CAMON,UACL,OAA+B,IAAxBloD,KAAKq4B,gBAA0D,IAAhBr4B,KAAKwoD,MAC7D,EA3DF,iB,2HCjIA,gBAGA,UACA,SACA,SACA,UACA,UAEA,UACA,UAEa,EAAAC,gBAAkB,WAS/B,eAoBEhpD,YACUipD,EACAt4C,EACA3G,GAFA,KAAAi/C,eAAAA,EACA,KAAAt4C,gBAAAA,EACA,KAAA3G,eAAAA,EArBH,KAAA7D,MAAgB,EAChB,KAAAsT,MAAgB,EAChB,KAAAtN,EAAY,EACZ,KAAAD,EAAY,EAGZ,KAAAm0C,KAAkD,CAAC,EACnD,KAAAgD,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB,EAAAn+B,kBAAkBgmB,QACrC,KAAAoY,aAAqC,EAAAjC,gBACrC,KAAA3+B,QAAoB,GACnB,KAAAumC,UAAuB,EAAAh4C,SAASi4C,aAAa,CAAC,EAAG,EAAAC,eAAgB,EAAA7J,gBAAiB,EAAAznB,iBAClF,KAAAuxB,gBAA6B,EAAAn4C,SAASi4C,aAAa,CAAC,EAAG,EAAA1wB,qBAAsB,EAAA6wB,sBAAuB,EAAAxB,uBAGpG,KAAAyB,aAAuB,EAO7BhpD,KAAKipD,MAAQjpD,KAAKyJ,eAAe8D,KACjCvN,KAAKkpD,MAAQlpD,KAAKyJ,eAAe/I,KACjCV,KAAK8D,MAAQ,IAAI,EAAAslC,aAA0BppC,KAAKmpD,wBAAwBnpD,KAAKkpD,QAC7ElpD,KAAKmoB,UAAY,EACjBnoB,KAAK4vC,aAAe5vC,KAAKkpD,MAAQ,EACjClpD,KAAKopD,eACP,CAEOrK,YAAYkD,GAUjB,OATIA,GACFjiD,KAAK2oD,UAAUlgD,GAAKw5C,EAAKx5C,GACzBzI,KAAK2oD,UAAUngD,GAAKy5C,EAAKz5C,GACzBxI,KAAK2oD,UAAUv3C,SAAW6wC,EAAK7wC,WAE/BpR,KAAK2oD,UAAUlgD,GAAK,EACpBzI,KAAK2oD,UAAUngD,GAAK,EACpBxI,KAAK2oD,UAAUv3C,SAAW,IAAI,EAAAo2C,eAEzBxnD,KAAK2oD,SACd,CAEOU,kBAAkBpH,GAUvB,OATIA,GACFjiD,KAAK8oD,gBAAgBrgD,GAAKw5C,EAAKx5C,GAC/BzI,KAAK8oD,gBAAgBtgD,GAAKy5C,EAAKz5C,GAC/BxI,KAAK8oD,gBAAgB13C,SAAW6wC,EAAK7wC,WAErCpR,KAAK8oD,gBAAgBrgD,GAAK,EAC1BzI,KAAK8oD,gBAAgBtgD,GAAK,EAC1BxI,KAAK8oD,gBAAgB13C,SAAW,IAAI,EAAAo2C,eAE/BxnD,KAAK8oD,eACd,CAEOnkC,aAAas9B,EAAsB3wB,GACxC,OAAO,IAAI,EAAAg4B,WAAWtpD,KAAKyJ,eAAe8D,KAAMvN,KAAK++C,YAAYkD,GAAO3wB,EAC1E,CAEWrQ,oBACT,OAAOjhB,KAAK0oD,gBAAkB1oD,KAAK8D,MAAMimC,UAAY/pC,KAAKkpD,KAC5D,CAEWpwC,yBACT,MACMywC,EADYvpD,KAAKkZ,MAAQlZ,KAAK4L,EACN5L,KAAK4F,MACnC,OAAQ2jD,GAAa,GAAKA,EAAYvpD,KAAKkpD,KAC7C,CAOQC,wBAAwBzoD,GAC9B,IAAKV,KAAK0oD,eACR,OAAOhoD,EAGT,MAAM8oD,EAAsB9oD,EAAOV,KAAKoQ,gBAAgBM,WAAW+4C,WAEnE,OAAOD,EAAsB,EAAAf,gBAAkB,EAAAA,gBAAkBe,CACnE,CAKOE,iBAAiBC,GACtB,GAA0B,IAAtB3pD,KAAK8D,MAAM5C,OAAc,MACVoJ,IAAbq/C,IACFA,EAAW,EAAA/kC,mBAEb,IAAIvlB,EAAIW,KAAKkpD,MACb,KAAO7pD,KACLW,KAAK8D,MAAMU,KAAKxE,KAAK2kB,aAAaglC,G,CAGxC,CAKO5gD,QACL/I,KAAK4F,MAAQ,EACb5F,KAAKkZ,MAAQ,EACblZ,KAAK4L,EAAI,EACT5L,KAAK2L,EAAI,EACT3L,KAAK8D,MAAQ,IAAI,EAAAslC,aAA0BppC,KAAKmpD,wBAAwBnpD,KAAKkpD,QAC7ElpD,KAAKmoB,UAAY,EACjBnoB,KAAK4vC,aAAe5vC,KAAKkpD,MAAQ,EACjClpD,KAAKopD,eACP,CAOO3sC,OAAOmtC,EAAiBC,GAE7B,MAAMC,EAAW9pD,KAAK++C,YAAY,EAAAn6B,mBAI5BolB,EAAehqC,KAAKmpD,wBAAwBU,GAOlD,GANI7f,EAAehqC,KAAK8D,MAAMimC,YAC5B/pC,KAAK8D,MAAMimC,UAAYC,GAKrBhqC,KAAK8D,MAAM5C,OAAS,EAAG,CAEzB,GAAIlB,KAAKipD,MAAQW,EACf,IAAK,IAAIvqD,EAAI,EAAGA,EAAIW,KAAK8D,MAAM5C,OAAQ7B,IACrCW,KAAK8D,MAAM8E,IAAIvJ,GAAIod,OAAOmtC,EAASE,GAKvC,IAAIC,EAAS,EACb,GAAI/pD,KAAKkpD,MAAQW,EACf,IAAK,IAAIj+C,EAAI5L,KAAKkpD,MAAOt9C,EAAIi+C,EAASj+C,IAChC5L,KAAK8D,MAAM5C,OAAS2oD,EAAU7pD,KAAKkZ,QACjClZ,KAAKoQ,gBAAgBM,WAAW0gC,YAGlCpxC,KAAK8D,MAAMU,KAAK,IAAI,EAAA8kD,WAAWM,EAASE,IAEpC9pD,KAAKkZ,MAAQ,GAAKlZ,KAAK8D,MAAM5C,QAAUlB,KAAKkZ,MAAQlZ,KAAK4L,EAAIm+C,EAAS,GAGxE/pD,KAAKkZ,QACL6wC,IACI/pD,KAAK4F,MAAQ,GAEf5F,KAAK4F,SAKP5F,KAAK8D,MAAMU,KAAK,IAAI,EAAA8kD,WAAWM,EAASE,UAMhD,IAAK,IAAIl+C,EAAI5L,KAAKkpD,MAAOt9C,EAAIi+C,EAASj+C,IAChC5L,KAAK8D,MAAM5C,OAAS2oD,EAAU7pD,KAAKkZ,QACjClZ,KAAK8D,MAAM5C,OAASlB,KAAKkZ,MAAQlZ,KAAK4L,EAAI,EAE5C5L,KAAK8D,MAAMI,OAGXlE,KAAKkZ,QACLlZ,KAAK4F,UAQb,GAAIokC,EAAehqC,KAAK8D,MAAMimC,UAAW,CAEvC,MAAMigB,EAAehqD,KAAK8D,MAAM5C,OAAS8oC,EACrCggB,EAAe,IACjBhqD,KAAK8D,MAAM2mC,UAAUuf,GACrBhqD,KAAKkZ,MAAQlG,KAAKG,IAAInT,KAAKkZ,MAAQ8wC,EAAc,GACjDhqD,KAAK4F,MAAQoN,KAAKG,IAAInT,KAAK4F,MAAQokD,EAAc,GACjDhqD,KAAK8iD,OAAS9vC,KAAKG,IAAInT,KAAK8iD,OAASkH,EAAc,IAErDhqD,KAAK8D,MAAMimC,UAAYC,C,CAIzBhqC,KAAK2L,EAAIqH,KAAKC,IAAIjT,KAAK2L,EAAGi+C,EAAU,GACpC5pD,KAAK4L,EAAIoH,KAAKC,IAAIjT,KAAK4L,EAAGi+C,EAAU,GAChCE,IACF/pD,KAAK4L,GAAKm+C,GAEZ/pD,KAAK6iD,OAAS7vC,KAAKC,IAAIjT,KAAK6iD,OAAQ+G,EAAU,GAE9C5pD,KAAKmoB,UAAY,C,CAKnB,GAFAnoB,KAAK4vC,aAAeia,EAAU,EAE1B7pD,KAAKiqD,mBACPjqD,KAAKkqD,QAAQN,EAASC,GAGlB7pD,KAAKipD,MAAQW,GACf,IAAK,IAAIvqD,EAAI,EAAGA,EAAIW,KAAK8D,MAAM5C,OAAQ7B,IACrCW,KAAK8D,MAAM8E,IAAIvJ,GAAIod,OAAOmtC,EAASE,GAKzC9pD,KAAKipD,MAAQW,EACb5pD,KAAKkpD,MAAQW,CACf,CAEYI,uBACV,OAAOjqD,KAAK0oD,iBAAmB1oD,KAAKoQ,gBAAgBM,WAAW0gC,WACjE,CAEQ8Y,QAAQN,EAAiBC,GAC3B7pD,KAAKipD,QAAUW,IAKfA,EAAU5pD,KAAKipD,MACjBjpD,KAAKmqD,cAAcP,EAASC,GAE5B7pD,KAAKoqD,eAAeR,EAASC,GAEjC,CAEQM,cAAcP,EAAiBC,GACrC,MAAMQ,GAAqB,IAAAC,8BAA6BtqD,KAAK8D,MAAO9D,KAAKipD,MAAOW,EAAS5pD,KAAKkZ,MAAQlZ,KAAK4L,EAAG5L,KAAK++C,YAAY,EAAAn6B,oBAC/H,GAAIylC,EAASnpD,OAAS,EAAG,CACvB,MAAMqpD,GAAkB,IAAAC,6BAA4BxqD,KAAK8D,MAAOumD,IAChE,IAAAI,4BAA2BzqD,KAAK8D,MAAOymD,EAAgBG,QACvD1qD,KAAK2qD,4BAA4Bf,EAASC,EAASU,EAAgBK,a,CAEvE,CAEQD,4BAA4Bf,EAAiBC,EAAiBe,GACpE,MAAMd,EAAW9pD,KAAK++C,YAAY,EAAAn6B,mBAElC,IAAIimC,EAAsBD,EAC1B,KAAOC,KAAwB,GACV,IAAf7qD,KAAKkZ,OACHlZ,KAAK4L,EAAI,GACX5L,KAAK4L,IAEH5L,KAAK8D,MAAM5C,OAAS2oD,GAEtB7pD,KAAK8D,MAAMU,KAAK,IAAI,EAAA8kD,WAAWM,EAASE,MAGtC9pD,KAAK4F,QAAU5F,KAAKkZ,OACtBlZ,KAAK4F,QAEP5F,KAAKkZ,SAGTlZ,KAAK8iD,OAAS9vC,KAAKG,IAAInT,KAAK8iD,OAAS8H,EAAc,EACrD,CAEQR,eAAeR,EAAiBC,GACtC,MAAMC,EAAW9pD,KAAK++C,YAAY,EAAAn6B,mBAG5BkmC,EAAW,GACjB,IAAIC,EAAgB,EAEpB,IAAK,IAAIn/C,EAAI5L,KAAK8D,MAAM5C,OAAS,EAAG0K,GAAK,EAAGA,IAAK,CAE/C,IAAIovC,EAAWh7C,KAAK8D,MAAM8E,IAAIgD,GAC9B,IAAKovC,IAAaA,EAAS1pB,WAAa0pB,EAASnqC,oBAAsB+4C,EACrE,SAIF,MAAMoB,EAA6B,CAAChQ,GACpC,KAAOA,EAAS1pB,WAAa1lB,EAAI,GAC/BovC,EAAWh7C,KAAK8D,MAAM8E,MAAMgD,GAC5Bo/C,EAAazmD,QAAQy2C,GAKvB,MAAMiQ,EAAYjrD,KAAKkZ,MAAQlZ,KAAK4L,EACpC,GAAIq/C,GAAar/C,GAAKq/C,EAAYr/C,EAAIo/C,EAAa9pD,OACjD,SAGF,MAAMgqD,EAAiBF,EAAaA,EAAa9pD,OAAS,GAAG2P,mBACvDs6C,GAAkB,IAAAC,gCAA+BJ,EAAchrD,KAAKipD,MAAOW,GAC3EyB,EAAaF,EAAgBjqD,OAAS8pD,EAAa9pD,OACzD,IAAIoqD,EAGFA,EAFiB,IAAftrD,KAAKkZ,OAAelZ,KAAK4L,IAAM5L,KAAK8D,MAAM5C,OAAS,EAEtC8R,KAAKG,IAAI,EAAGnT,KAAK4L,EAAI5L,KAAK8D,MAAMimC,UAAYshB,GAE5Cr4C,KAAKG,IAAI,EAAGnT,KAAK8D,MAAM5C,OAASlB,KAAK8D,MAAMimC,UAAYshB,GAIxE,MAAME,EAAyB,GAC/B,IAAK,IAAIlsD,EAAI,EAAGA,EAAIgsD,EAAYhsD,IAAK,CACnC,MAAMmsD,EAAUxrD,KAAK2kB,aAAa,EAAAC,mBAAmB,GACrD2mC,EAAS/mD,KAAKgnD,E,CAEZD,EAASrqD,OAAS,IACpB4pD,EAAStmD,KAAK,CAGZvC,MAAO2J,EAAIo/C,EAAa9pD,OAAS6pD,EACjCQ,aAEFR,GAAiBQ,EAASrqD,QAE5B8pD,EAAaxmD,QAAQ+mD,GAGrB,IAAIE,EAAgBN,EAAgBjqD,OAAS,EACzCwqD,EAAUP,EAAgBM,GACd,IAAZC,IACFD,IACAC,EAAUP,EAAgBM,IAE5B,IAAIE,EAAeX,EAAa9pD,OAASmqD,EAAa,EAClDO,EAASV,EACb,KAAOS,GAAgB,GAAG,CACxB,MAAME,EAAc74C,KAAKC,IAAI24C,EAAQF,GACrC,QAAoCphD,IAAhC0gD,EAAaS,GAGf,MASF,GAPAT,EAAaS,GAAeK,cAAcd,EAAaW,GAAeC,EAASC,EAAaH,EAAUG,EAAaA,GAAa,GAChIH,GAAWG,EACK,IAAZH,IACFD,IACAC,EAAUP,EAAgBM,IAE5BG,GAAUC,EACK,IAAXD,EAAc,CAChBD,IACA,MAAMI,EAAoB/4C,KAAKG,IAAIw4C,EAAc,GACjDC,GAAS,IAAAI,6BAA4BhB,EAAce,EAAmB/rD,KAAKipD,M,EAK/E,IAAK,IAAI5pD,EAAI,EAAGA,EAAI2rD,EAAa9pD,OAAQ7B,IACnC8rD,EAAgB9rD,GAAKuqD,GACvBoB,EAAa3rD,GAAG4sD,QAAQd,EAAgB9rD,GAAIyqD,GAKhD,IAAIe,EAAsBQ,EAAaC,EACvC,KAAOT,KAAwB,GACV,IAAf7qD,KAAKkZ,MACHlZ,KAAK4L,EAAIi+C,EAAU,GACrB7pD,KAAK4L,IACL5L,KAAK8D,MAAMI,QAEXlE,KAAKkZ,QACLlZ,KAAK4F,SAIH5F,KAAKkZ,MAAQlG,KAAKC,IAAIjT,KAAK8D,MAAMimC,UAAW/pC,KAAK8D,MAAM5C,OAAS6pD,GAAiBlB,IAC/E7pD,KAAKkZ,QAAUlZ,KAAK4F,OACtB5F,KAAK4F,QAEP5F,KAAKkZ,SAIXlZ,KAAK8iD,OAAS9vC,KAAKC,IAAIjT,KAAK8iD,OAASuI,EAAYrrD,KAAKkZ,MAAQ2wC,EAAU,E,CAM1E,GAAIiB,EAAS5pD,OAAS,EAAG,CAGvB,MAAMgrD,EAA+B,GAG/BC,EAA8B,GACpC,IAAK,IAAI9sD,EAAI,EAAGA,EAAIW,KAAK8D,MAAM5C,OAAQ7B,IACrC8sD,EAAc3nD,KAAKxE,KAAK8D,MAAM8E,IAAIvJ,IAEpC,MAAM+sD,EAAsBpsD,KAAK8D,MAAM5C,OAEvC,IAAImrD,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAezB,EAASwB,GAC5BtsD,KAAK8D,MAAM5C,OAAS8R,KAAKC,IAAIjT,KAAK8D,MAAMimC,UAAW/pC,KAAK8D,MAAM5C,OAAS6pD,GACvE,IAAIyB,EAAqB,EACzB,IAAK,IAAIntD,EAAI2T,KAAKC,IAAIjT,KAAK8D,MAAMimC,UAAY,EAAGqiB,EAAsBrB,EAAgB,GAAI1rD,GAAK,EAAGA,IAChG,GAAIktD,GAAgBA,EAAatqD,MAAQoqD,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAahB,SAASrqD,OAAS,EAAGurD,GAAS,EAAGA,IAC7DzsD,KAAK8D,MAAM4E,IAAIrJ,IAAKktD,EAAahB,SAASkB,IAE5CptD,IAGA6sD,EAAa1nD,KAAK,CAChBiJ,MAAO4+C,EAAoB,EAC3BlvC,OAAQovC,EAAahB,SAASrqD,SAGhCsrD,GAAsBD,EAAahB,SAASrqD,OAC5CqrD,EAAezB,IAAWwB,E,MAE1BtsD,KAAK8D,MAAM4E,IAAIrJ,EAAG8sD,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAAK,IAAIrtD,EAAI6sD,EAAahrD,OAAS,EAAG7B,GAAK,EAAGA,IAC5C6sD,EAAa7sD,GAAGoO,OAASi/C,EACzB1sD,KAAK8D,MAAM0lC,gBAAgBn6B,KAAK68C,EAAa7sD,IAC7CqtD,GAAsBR,EAAa7sD,GAAG8d,OAExC,MAAM6sC,EAAeh3C,KAAKG,IAAI,EAAGi5C,EAAsBrB,EAAgB/qD,KAAK8D,MAAMimC,WAC9EigB,EAAe,GACjBhqD,KAAK8D,MAAM4lC,cAAcr6B,KAAK26C,E,CAGpC,CAiBO2C,yBAAyBC,EAAmBC,EAAqBC,GAAqB,GAC3F,KAAOD,GAAa,CAClB,MAAMt8C,EAAOvQ,KAAK8D,MAAM8E,IAAIgkD,GAC5B,IAAKr8C,EACH,MAAO,EAAE,GAAI,GAEf,MAAMrP,EAAS,EAAcqP,EAAKM,mBAAqBN,EAAKrP,OAC5D,IAAK,IAAI7B,EAAI,EAAGA,EAAI6B,IAAU7B,EAM5B,GALIkR,EAAK3H,IAAIvJ,GAAG,EAAA0tD,yBAGdF,GAAet8C,EAAK3H,IAAIvJ,GAAG,EAAA2tD,sBAAsB9rD,QAAU,GAEzD2rD,EAAc,EAChB,MAAO,CAACD,EAAWvtD,GAGvButD,G,CAEF,MAAO,CAACA,EAAW,EACrB,CAYOjnD,4BAA4BinD,EAAmBE,EAAoBn7B,EAAmB,EAAGC,GAC9F,MAAMrhB,EAAOvQ,KAAK8D,MAAM8E,IAAIgkD,GAC5B,OAAKr8C,EAGEA,EAAKonB,kBAAkBm1B,EAAWn7B,EAAUC,GAF1C,EAGX,CAEOiU,uBAAuBj6B,GAC5B,IAAIk6B,EAAQl6B,EACRm6B,EAAOn6B,EAEX,KAAOk6B,EAAQ,GAAK9lC,KAAK8D,MAAM8E,IAAIk9B,GAAQxU,WACzCwU,IAGF,KAAOC,EAAO,EAAI/lC,KAAK8D,MAAM5C,QAAUlB,KAAK8D,MAAM8E,IAAIm9B,EAAO,GAAIzU,WAC/DyU,IAEF,MAAO,CAAED,QAAOC,OAClB,CAMOqjB,cAAc/pD,GAUnB,IATIA,QACGW,KAAK8/C,KAAKzgD,KACbA,EAAIW,KAAK+/C,SAAS1gD,KAGpBW,KAAK8/C,KAAO,CAAC,EACbzgD,EAAI,GAGCA,EAAIW,KAAKipD,MAAO5pD,GAAKW,KAAKoQ,gBAAgBM,WAAWu8C,aAC1DjtD,KAAK8/C,KAAKzgD,IAAK,CAEnB,CAMO0gD,SAASp0C,GAId,IAHIA,UACFA,EAAI3L,KAAK2L,IAEH3L,KAAK8/C,OAAOn0C,IAAMA,EAAI,IAC9B,OAAOA,GAAK3L,KAAKipD,MAAQjpD,KAAKipD,MAAQ,EAAIt9C,EAAI,EAAI,EAAIA,CACxD,CAMO4zC,SAAS5zC,GAId,IAHIA,UACFA,EAAI3L,KAAK2L,IAEH3L,KAAK8/C,OAAOn0C,IAAMA,EAAI3L,KAAKipD,QACnC,OAAOt9C,GAAK3L,KAAKipD,MAAQjpD,KAAKipD,MAAQ,EAAIt9C,EAAI,EAAI,EAAIA,CACxD,CAMO20C,aAAa10C,GAClB5L,KAAKgpD,aAAc,EACnB,IAAK,IAAI3pD,EAAI,EAAGA,EAAIW,KAAKoiB,QAAQlhB,OAAQ7B,IACnCW,KAAKoiB,QAAQ/iB,GAAGkR,OAAS3E,IAC3B5L,KAAKoiB,QAAQ/iB,GAAGkK,UAChBvJ,KAAKoiB,QAAQvX,OAAOxL,IAAK,IAG7BW,KAAKgpD,aAAc,CACrB,CAKOtkC,kBACL1kB,KAAKgpD,aAAc,EACnB,IAAK,IAAI3pD,EAAI,EAAGA,EAAIW,KAAKoiB,QAAQlhB,OAAQ7B,IACvCW,KAAKoiB,QAAQ/iB,GAAGkK,UAChBvJ,KAAKoiB,QAAQvX,OAAOxL,IAAK,GAE3BW,KAAKgpD,aAAc,CACrB,CAEO3mC,UAAUzW,GACf,MAAMif,EAAS,IAAI,EAAAqiC,OAAOthD,GA0B1B,OAzBA5L,KAAKoiB,QAAQ5d,KAAKqmB,GAClBA,EAAOhpB,SAAS7B,KAAK8D,MAAM89B,QAAOzkB,IAChC0N,EAAOta,MAAQ4M,EAEX0N,EAAOta,KAAO,GAChBsa,EAAOthB,S,KAGXshB,EAAOhpB,SAAS7B,KAAK8D,MAAM2lC,UAASx/B,IAC9B4gB,EAAOta,MAAQtG,EAAMwD,QACvBod,EAAOta,MAAQtG,EAAMkT,O,KAGzB0N,EAAOhpB,SAAS7B,KAAK8D,MAAMylC,UAASt/B,IAE9B4gB,EAAOta,MAAQtG,EAAMwD,OAASod,EAAOta,KAAOtG,EAAMwD,MAAQxD,EAAMkT,QAClE0N,EAAOthB,UAILshB,EAAOta,KAAOtG,EAAMwD,QACtBod,EAAOta,MAAQtG,EAAMkT,O,KAGzB0N,EAAOhpB,SAASgpB,EAAOsiC,WAAU,IAAMntD,KAAKotD,cAAcviC,MACnDA,CACT,CAEQuiC,cAAcviC,GACf7qB,KAAKgpD,aACRhpD,KAAKoiB,QAAQvX,OAAO7K,KAAKoiB,QAAQxX,QAAQigB,GAAS,EAEtD,CAEOwiC,SAASP,EAAoBrvB,EAAqBC,EAAmB4vB,EAAwBC,GAClG,OAAO,IAAIC,EAAqBxtD,KAAM8sD,EAAWrvB,EAAYC,EAAU4vB,EAAeC,EACxF,GAeF,MAAaC,EAGX/tD,YACUguD,EACAC,EACA7jB,EAAsB,EACtB8jB,EAAoBF,EAAQ3pD,MAAM5C,OAClC0sD,EAAyB,EACzBC,EAAuB,GALvB,KAAAJ,QAAAA,EACA,KAAAC,WAAAA,EACA,KAAA7jB,YAAAA,EACA,KAAA8jB,UAAAA,EACA,KAAAC,eAAAA,EACA,KAAAC,aAAAA,EAEJ7tD,KAAK6pC,YAAc,IACrB7pC,KAAK6pC,YAAc,GAEjB7pC,KAAK2tD,UAAY3tD,KAAKytD,QAAQ3pD,MAAM5C,SACtClB,KAAK2tD,UAAY3tD,KAAKytD,QAAQ3pD,MAAM5C,QAEtClB,KAAK8tD,SAAW9tD,KAAK6pC,WACvB,CAEOkkB,UACL,OAAO/tD,KAAK8tD,SAAW9tD,KAAK2tD,SAC9B,CAEOK,OACL,MAAM3gD,EAAQrN,KAAKytD,QAAQ5nB,uBAAuB7lC,KAAK8tD,UAEnDzgD,EAAMy4B,MAAQ9lC,KAAK6pC,YAAc7pC,KAAK4tD,iBACxCvgD,EAAMy4B,MAAQ9lC,KAAK6pC,YAAc7pC,KAAK4tD,gBAEpCvgD,EAAM04B,KAAO/lC,KAAK2tD,UAAY3tD,KAAK6tD,eACrCxgD,EAAM04B,KAAO/lC,KAAK2tD,UAAY3tD,KAAK6tD,cAGrCxgD,EAAMy4B,MAAQ9yB,KAAKG,IAAI9F,EAAMy4B,MAAO,GACpCz4B,EAAM04B,KAAO/yB,KAAKC,IAAI5F,EAAM04B,KAAM/lC,KAAKytD,QAAQ3pD,MAAM5C,QACrD,IAAIo7B,EAAU,GACd,IAAK,IAAIj9B,EAAIgO,EAAMy4B,MAAOzmC,GAAKgO,EAAM04B,OAAQ1mC,EAC3Ci9B,GAAWt8B,KAAKytD,QAAQ9nD,4BAA4BtG,EAAGW,KAAK0tD,YAG9D,OADA1tD,KAAK8tD,SAAWzgD,EAAM04B,KAAO,EACtB,CAAE14B,QAAOivB,UAClB,EA1CF,wB,0GCppBA,eACA,SACA,SACA,UA4Ba,EAAA1X,kBAAoBjW,OAAO43B,OAAO,IAAI,EAAA9N,eAGnD,IAAIw1B,EAAc,EAiBlB,MAAa3E,EAMX7pD,YAAY8N,EAAc2gD,EAAiC58B,GAAqB,GAArB,KAAAA,UAAAA,EAJjD,KAAA68B,UAAuC,CAAC,EACxC,KAAAC,eAAgE,CAAC,EAIzEpuD,KAAK4kD,MAAQ,IAAIzQ,YA3CH,EA2Ce5mC,GAC7B,MAAMrH,EAAOgoD,GAAgB,EAAAv9C,SAASi4C,aAAa,CAAC,EAAG,EAAAC,eAAgB,EAAA7J,gBAAiB,EAAAznB,iBACxF,IAAK,IAAIl4B,EAAI,EAAGA,EAAIkO,IAAQlO,EAC1BW,KAAKisD,QAAQ5sD,EAAG6G,GAElBlG,KAAKkB,OAASqM,CAChB,CAMO3E,IAAI6E,GACT,MAAM6uB,EAAUt8B,KAAK4kD,MAxDP,EAwDan3C,EAAoB,GACzC4gD,EAAe,QAAV/xB,EACX,MAAO,CACLt8B,KAAK4kD,MA3DO,EA2DDn3C,EAAoB,GACpB,QAAV6uB,EACGt8B,KAAKmuD,UAAU1gD,GACf,GAAO,IAAAkxC,qBAAoB0P,GAAM,GACrC/xB,GAAW,GACA,QAAVA,EACGt8B,KAAKmuD,UAAU1gD,GAAOiW,WAAW1jB,KAAKmuD,UAAU1gD,GAAOvM,OAAS,GAChEmtD,EAER,CAMO3lD,IAAI+E,EAAe1G,GACxB/G,KAAK4kD,MA3ES,EA2EHn3C,EAAoB,GAAW1G,EAAM,EAAAunD,sBAC5CvnD,EAAM,EAAAimD,sBAAsB9rD,OAAS,GACvClB,KAAKmuD,UAAU1gD,GAAS1G,EAAM,GAC9B/G,KAAK4kD,MA9EO,EA8EDn3C,EAAoB,GAAwB,QAARA,EAAoC1G,EAAM,EAAAgmD,wBAA0B,IAEnH/sD,KAAK4kD,MAhFO,EAgFDn3C,EAAoB,GAAgB1G,EAAM,EAAAimD,sBAAsBtpC,WAAW,GAAM3c,EAAM,EAAAgmD,wBAA0B,EAEhI,CAMOzzC,SAAS7L,GACd,OAAOzN,KAAK4kD,MAzFE,EAyFIn3C,EAAoB,IAAiB,EACzD,CAGOo2B,SAASp2B,GACd,OAAsD,SAA/CzN,KAAK4kD,MA9FE,EA8FIn3C,EAAoB,EACxC,CAGO4vB,MAAM5vB,GACX,OAAOzN,KAAK4kD,MAnGE,EAmGIn3C,EAAoB,EACxC,CAGO8vB,MAAM9vB,GACX,OAAOzN,KAAK4kD,MAxGE,EAwGIn3C,EAAoB,EACxC,CAOOwD,WAAWxD,GAChB,OAAsD,QAA/CzN,KAAK4kD,MAjHE,EAiHIn3C,EAAoB,EACxC,CAOO43B,aAAa53B,GAClB,MAAM6uB,EAAUt8B,KAAK4kD,MA1HP,EA0Han3C,EAAoB,GAC/C,OAAc,QAAV6uB,EACKt8B,KAAKmuD,UAAU1gD,GAAOiW,WAAW1jB,KAAKmuD,UAAU1gD,GAAOvM,OAAS,GAExD,QAAVo7B,CACT,CAGOE,WAAW/uB,GAChB,OAAsD,QAA/CzN,KAAK4kD,MAnIE,EAmIIn3C,EAAoB,EACxC,CAGO0wB,UAAU1wB,GACf,MAAM6uB,EAAUt8B,KAAK4kD,MAxIP,EAwIan3C,EAAoB,GAC/C,OAAc,QAAV6uB,EACKt8B,KAAKmuD,UAAU1gD,GAEV,QAAV6uB,GACK,IAAAqiB,qBAA8B,QAAVriB,GAGtB,EACT,CAGOkoB,YAAY/2C,GACjB,OAAiD,UAA1CzN,KAAK4kD,MArJE,EAqJIn3C,EAAoB,EACxC,CAMOyD,SAASzD,EAAevH,GAW7B,OAVA+nD,EA7Jc,EA6JAxgD,EACdvH,EAAKo2B,QAAUt8B,KAAK4kD,MAAMqJ,EAAc,GACxC/nD,EAAKuC,GAAKzI,KAAK4kD,MAAMqJ,EAAc,GACnC/nD,EAAKsC,GAAKxI,KAAK4kD,MAAMqJ,EAAc,GAChB,QAAf/nD,EAAKo2B,UACPp2B,EAAKq2B,aAAev8B,KAAKmuD,UAAU1gD,IAEvB,UAAVvH,EAAKsC,KACPtC,EAAKkL,SAAWpR,KAAKouD,eAAe3gD,IAE/BvH,CACT,CAKO+lD,QAAQx+C,EAAevH,GACT,QAAfA,EAAKo2B,UACPt8B,KAAKmuD,UAAU1gD,GAASvH,EAAKq2B,cAEjB,UAAVr2B,EAAKsC,KACPxI,KAAKouD,eAAe3gD,GAASvH,EAAKkL,UAEpCpR,KAAK4kD,MApLS,EAoLHn3C,EAAoB,GAAgBvH,EAAKo2B,QACpDt8B,KAAK4kD,MArLS,EAqLHn3C,EAAoB,GAAWvH,EAAKuC,GAC/CzI,KAAK4kD,MAtLS,EAsLHn3C,EAAoB,GAAWvH,EAAKsC,EACjD,CAOOg2C,qBAAqB/wC,EAAe8gD,EAAmB9mD,EAAegB,EAAYD,EAAYgmD,GAC1F,UAALhmD,IACFxI,KAAKouD,eAAe3gD,GAAS+gD,GAE/BxuD,KAAK4kD,MAlMS,EAkMHn3C,EAAoB,GAAgB8gD,EAAa9mD,GAAS,GACrEzH,KAAK4kD,MAnMS,EAmMHn3C,EAAoB,GAAWhF,EAC1CzI,KAAK4kD,MApMS,EAoMHn3C,EAAoB,GAAWjF,CAC5C,CAQOy2C,mBAAmBxxC,EAAe8gD,GACvC,IAAIjyB,EAAUt8B,KAAK4kD,MA9ML,EA8MWn3C,EAAoB,GAC/B,QAAV6uB,EAEFt8B,KAAKmuD,UAAU1gD,KAAU,IAAAkxC,qBAAoB4P,IAE/B,QAAVjyB,GAIFt8B,KAAKmuD,UAAU1gD,IAAS,IAAAkxC,qBAA8B,QAAVriB,IAAoC,IAAAqiB,qBAAoB4P,GACpGjyB,IAAW,QACXA,GAAW,SAIXA,EAAUiyB,EAAa,GAAK,GAE9BvuD,KAAK4kD,MA/NO,EA+NDn3C,EAAoB,GAAgB6uB,EAEnD,CAEOwiB,YAAY33C,EAAakrC,EAAW6b,EAAyBvd,GAQlE,IAPAxpC,GAAOnH,KAAKkB,SAG0B,IAA3BlB,KAAKsZ,SAASnS,EAAM,IAC7BnH,KAAKw+C,qBAAqBr3C,EAAM,EAAG,EAAG,GAAGwpC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAG1GnV,EAAIryC,KAAKkB,OAASiG,EAAK,CACzB,MAAMjB,EAAO,IAAI,EAAAyK,SACjB,IAAK,IAAItR,EAAIW,KAAKkB,OAASiG,EAAMkrC,EAAI,EAAGhzC,GAAK,IAAKA,EAChDW,KAAKisD,QAAQ9kD,EAAMkrC,EAAIhzC,EAAGW,KAAKkR,SAAS/J,EAAM9H,EAAG6G,IAEnD,IAAK,IAAI7G,EAAI,EAAGA,EAAIgzC,IAAKhzC,EACvBW,KAAKisD,QAAQ9kD,EAAM9H,EAAG6uD,E,MAGxB,IAAK,IAAI7uD,EAAI8H,EAAK9H,EAAIW,KAAKkB,SAAU7B,EACnCW,KAAKisD,QAAQ5sD,EAAG6uD,GAKmB,IAAnCluD,KAAKsZ,SAAStZ,KAAKkB,OAAS,IAC9BlB,KAAKw+C,qBAAqBx+C,KAAKkB,OAAS,EAAG,EAAG,GAAGyvC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,cAExH,CAEO9G,YAAYv5C,EAAakrC,EAAW6b,EAAyBvd,GAElE,GADAxpC,GAAOnH,KAAKkB,OACRmxC,EAAIryC,KAAKkB,OAASiG,EAAK,CACzB,MAAMjB,EAAO,IAAI,EAAAyK,SACjB,IAAK,IAAItR,EAAI,EAAGA,EAAIW,KAAKkB,OAASiG,EAAMkrC,IAAKhzC,EAC3CW,KAAKisD,QAAQ9kD,EAAM9H,EAAGW,KAAKkR,SAAS/J,EAAMkrC,EAAIhzC,EAAG6G,IAEnD,IAAK,IAAI7G,EAAIW,KAAKkB,OAASmxC,EAAGhzC,EAAIW,KAAKkB,SAAU7B,EAC/CW,KAAKisD,QAAQ5sD,EAAG6uD,E,MAGlB,IAAK,IAAI7uD,EAAI8H,EAAK9H,EAAIW,KAAKkB,SAAU7B,EACnCW,KAAKisD,QAAQ5sD,EAAG6uD,GAOhB/mD,GAAkC,IAA3BnH,KAAKsZ,SAASnS,EAAM,IAC7BnH,KAAKw+C,qBAAqBr3C,EAAM,EAAG,EAAG,GAAGwpC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAEnF,IAAvBxnD,KAAKsZ,SAASnS,IAAenH,KAAKiR,WAAW9J,IAC/CnH,KAAKw+C,qBAAqBr3C,EAAK,EAAG,GAAGwpC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,cAE5G,CAEOrH,aAAal+C,EAAeC,EAAagsD,EAAyBvd,EAA4BuP,GAA0B,GAE7H,GAAIA,EAOF,IANIj+C,GAAsC,IAA7BjC,KAAKsZ,SAASrX,EAAQ,KAAajC,KAAKwkD,YAAYviD,EAAQ,IACvEjC,KAAKw+C,qBAAqBv8C,EAAQ,EAAG,EAAG,GAAG0uC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAE5GtlD,EAAMlC,KAAKkB,QAAqC,IAA3BlB,KAAKsZ,SAASpX,EAAM,KAAalC,KAAKwkD,YAAYtiD,IACzElC,KAAKw+C,qBAAqBt8C,EAAK,EAAG,GAAGyuC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAEnGvlD,EAAQC,GAAQD,EAAQjC,KAAKkB,QAC7BlB,KAAKwkD,YAAYviD,IACpBjC,KAAKisD,QAAQhqD,EAAOisD,GAEtBjsD,SAcJ,IARIA,GAAsC,IAA7BjC,KAAKsZ,SAASrX,EAAQ,IACjCjC,KAAKw+C,qBAAqBv8C,EAAQ,EAAG,EAAG,GAAG0uC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAG5GtlD,EAAMlC,KAAKkB,QAAqC,IAA3BlB,KAAKsZ,SAASpX,EAAM,IAC3ClC,KAAKw+C,qBAAqBt8C,EAAK,EAAG,GAAGyuC,aAAS,EAATA,EAAWloC,KAAM,GAAGkoC,aAAS,EAATA,EAAWnoC,KAAM,GAAGmoC,aAAS,EAATA,EAAWv/B,WAAY,IAAI,EAAAo2C,eAGnGvlD,EAAQC,GAAQD,EAAQjC,KAAKkB,QAClClB,KAAKisD,QAAQhqD,IAASisD,EAE1B,CAEOzxC,OAAOlP,EAAc2gD,GAC1B,GAAI3gD,IAASvN,KAAKkB,OAAlB,CAGA,GAAIqM,EAAOvN,KAAKkB,OAAQ,CACtB,MAAMkgB,EAAO,IAAI+yB,YA/TL,EA+TiB5mC,GACzBvN,KAAKkB,SAhUG,EAiUNqM,EAAmBvN,KAAK4kD,MAAM1jD,OAChCkgB,EAAK1Y,IAAI1I,KAAK4kD,MAAM9G,SAAS,EAlUrB,EAkUwBvwC,IAEhC6T,EAAK1Y,IAAI1I,KAAK4kD,QAGlB5kD,KAAK4kD,MAAQxjC,EACb,IAAK,IAAI/hB,EAAIW,KAAKkB,OAAQ7B,EAAIkO,IAAQlO,EACpCW,KAAKisD,QAAQ5sD,EAAG6uD,E,MAGlB,GAAI3gD,EAAM,CACR,MAAM6T,EAAO,IAAI+yB,YA7UP,EA6UmB5mC,GAC7B6T,EAAK1Y,IAAI1I,KAAK4kD,MAAM9G,SAAS,EA9UnB,EA8UsBvwC,IAChCvN,KAAK4kD,MAAQxjC,EAEb,MAAMqtC,EAAO9/C,OAAO8/C,KAAKzuD,KAAKmuD,WAC9B,IAAK,IAAI9uD,EAAI,EAAGA,EAAIovD,EAAKvtD,OAAQ7B,IAAK,CACpC,MAAMwD,EAAMutB,SAASq+B,EAAKpvD,GAAI,IAC1BwD,GAAO0K,UACFvN,KAAKmuD,UAAUtrD,E,OAI1B7C,KAAK4kD,MAAQ,IAAIzQ,YAAY,GAC7Bn0C,KAAKmuD,UAAY,CAAC,EAGtBnuD,KAAKkB,OAASqM,C,CAChB,CAGO8yC,KAAK6N,EAAyBhO,GAA0B,GAE7D,GAAIA,EACF,IAAK,IAAI7gD,EAAI,EAAGA,EAAIW,KAAKkB,SAAU7B,EAC5BW,KAAKwkD,YAAYnlD,IACpBW,KAAKisD,QAAQ5sD,EAAG6uD,OAHtB,CAQAluD,KAAKmuD,UAAY,CAAC,EAClBnuD,KAAKouD,eAAiB,CAAC,EACvB,IAAK,IAAI/uD,EAAI,EAAGA,EAAIW,KAAKkB,SAAU7B,EACjCW,KAAKisD,QAAQ5sD,EAAG6uD,E,CAEpB,CAGOQ,SAASn+C,GACVvQ,KAAKkB,SAAWqP,EAAKrP,OACvBlB,KAAK4kD,MAAQ,IAAIzQ,YAAY5jC,EAAKq0C,OAGlC5kD,KAAK4kD,MAAMl8C,IAAI6H,EAAKq0C,OAEtB5kD,KAAKkB,OAASqP,EAAKrP,OACnBlB,KAAKmuD,UAAY,CAAC,EAClB,IAAK,MAAMjvC,KAAM3O,EAAK49C,UACpBnuD,KAAKmuD,UAAUjvC,GAAM3O,EAAK49C,UAAUjvC,GAEtClf,KAAKouD,eAAiB,CAAC,EACvB,IAAK,MAAMlvC,KAAM3O,EAAK69C,eACpBpuD,KAAKouD,eAAelvC,GAAM3O,EAAK69C,eAAelvC,GAEhDlf,KAAKsxB,UAAY/gB,EAAK+gB,SACxB,CAGOsZ,QACL,MAAM4gB,EAAU,IAAIlC,EAAW,GAC/BkC,EAAQ5G,MAAQ,IAAIzQ,YAAYn0C,KAAK4kD,OACrC4G,EAAQtqD,OAASlB,KAAKkB,OACtB,IAAK,MAAMge,KAAMlf,KAAKmuD,UACpB3C,EAAQ2C,UAAUjvC,GAAMlf,KAAKmuD,UAAUjvC,GAEzC,IAAK,MAAMA,KAAMlf,KAAKouD,eACpB5C,EAAQ4C,eAAelvC,GAAMlf,KAAKouD,eAAelvC,GAGnD,OADAssC,EAAQl6B,UAAYtxB,KAAKsxB,UAClBk6B,CACT,CAEO36C,mBACL,IAAK,IAAIxR,EAAIW,KAAKkB,OAAS,EAAG7B,GAAK,IAAKA,EACtC,GAAgD,QAA3CW,KAAK4kD,MAvZE,EAuZIvlD,EAAgB,GAC9B,OAAOA,GAAKW,KAAK4kD,MAxZP,EAwZavlD,EAAgB,IAAiB,IAG5D,OAAO,CACT,CAEOysD,cAAc6C,EAAiB/C,EAAgBF,EAAiBxqD,EAAgB0tD,GACrF,MAAMC,EAAUF,EAAI/J,MACpB,GAAIgK,EACF,IAAK,IAAI1oD,EAAOhF,EAAS,EAAGgF,GAAQ,EAAGA,IAAQ,CAC7C,IAAK,IAAI7G,EAAI,EAAGA,EAlaN,EAkaqBA,IAC7BW,KAAK4kD,MAnaG,GAmaI8G,EAAUxlD,GAAoB7G,GAAKwvD,EAnavC,GAmagDjD,EAAS1lD,GAAoB7G,GAElC,UAAjDwvD,EAraM,GAqaGjD,EAAS1lD,GAAoB,KACxClG,KAAKouD,eAAe1C,EAAUxlD,GAAQyoD,EAAIP,eAAexC,EAAS1lD,G,MAItE,IAAK,IAAIA,EAAO,EAAGA,EAAOhF,EAAQgF,IAAQ,CACxC,IAAK,IAAI7G,EAAI,EAAGA,EA3aN,EA2aqBA,IAC7BW,KAAK4kD,MA5aG,GA4aI8G,EAAUxlD,GAAoB7G,GAAKwvD,EA5avC,GA4agDjD,EAAS1lD,GAAoB7G,GAElC,UAAjDwvD,EA9aM,GA8aGjD,EAAS1lD,GAAoB,KACxClG,KAAKouD,eAAe1C,EAAUxlD,GAAQyoD,EAAIP,eAAexC,EAAS1lD,G,CAMxE,MAAM4oD,EAAkBngD,OAAO8/C,KAAKE,EAAIR,WACxC,IAAK,IAAI9uD,EAAI,EAAGA,EAAIyvD,EAAgB5tD,OAAQ7B,IAAK,CAC/C,MAAMwD,EAAMutB,SAAS0+B,EAAgBzvD,GAAI,IACrCwD,GAAO+oD,IACT5rD,KAAKmuD,UAAUtrD,EAAM+oD,EAASF,GAAWiD,EAAIR,UAAUtrD,G,CAG7D,CAEO80B,kBAAkBm1B,GAAqB,EAAOn7B,EAAmB,EAAGC,EAAiB5xB,KAAKkB,QAC3F4rD,IACFl7B,EAAS5e,KAAKC,IAAI2e,EAAQ5xB,KAAK6Q,qBAEjC,IAAIL,EAAS,GACb,KAAOmhB,EAAWC,GAAQ,CACxB,MAAM0K,EAAUt8B,KAAK4kD,MApcT,EAocejzB,EAAuB,GAC5C08B,EAAe,QAAV/xB,EACX9rB,GAAqB,QAAV8rB,EAAsCt8B,KAAKmuD,UAAUx8B,GAAY,GAAO,IAAAgtB,qBAAoB0P,GAAM,EAAAn2B,qBAC7GvG,GAAa2K,GAAW,IAAwB,C,CAElD,OAAO9rB,CACT,EAtaF,c,wFClDA,0BAA+BnD,EAAqB0hD,GAClD,GAAI1hD,EAAMpL,MAAM2J,EAAIyB,EAAMnL,IAAI0J,EAC5B,MAAM,IAAIjK,MAAM,qBAAqB0L,EAAMnL,IAAIyJ,MAAM0B,EAAMnL,IAAI0J,8BAA8ByB,EAAMpL,MAAM0J,MAAM0B,EAAMpL,MAAM2J,MAE7H,OAAOmjD,GAAc1hD,EAAMnL,IAAI0J,EAAIyB,EAAMpL,MAAM2J,IAAMyB,EAAMnL,IAAIyJ,EAAI0B,EAAMpL,MAAM0J,EAAI,EACrF,C,eCoMA,SAAgBqgD,EAA4BloD,EAAqBzE,EAAWkO,GAE1E,GAAIlO,IAAMyE,EAAM5C,OAAS,EACvB,OAAO4C,EAAMzE,GAAGwR,mBAKlB,MAAMm+C,GAAelrD,EAAMzE,GAAG4R,WAAW1D,EAAO,IAAuC,IAAhCzJ,EAAMzE,GAAGia,SAAS/L,EAAO,GAC1E0hD,EAA2D,IAA7BnrD,EAAMzE,EAAI,GAAGia,SAAS,GAC1D,OAAI01C,GAAcC,EACT1hD,EAAO,EAETA,CACT,C,iNAvMA,wCAA6CzJ,EAAkCorD,EAAiBtF,EAAiBuF,EAAyBrF,GAGxI,MAAMO,EAAqB,GAE3B,IAAK,IAAIz+C,EAAI,EAAGA,EAAI9H,EAAM5C,OAAS,EAAG0K,IAAK,CAEzC,IAAIvM,EAAIuM,EACJovC,EAAWl3C,EAAM8E,MAAMvJ,GAC3B,IAAK27C,EAAS1pB,UACZ,SAIF,MAAM05B,EAA6B,CAAClnD,EAAM8E,IAAIgD,IAC9C,KAAOvM,EAAIyE,EAAM5C,QAAU85C,EAAS1pB,WAClC05B,EAAaxmD,KAAKw2C,GAClBA,EAAWl3C,EAAM8E,MAAMvJ,GAKzB,GAAI8vD,GAAmBvjD,GAAKujD,EAAkB9vD,EAAG,CAC/CuM,GAAKo/C,EAAa9pD,OAAS,EAC3B,Q,CAIF,IAAIuqD,EAAgB,EAChBC,EAAUM,EAA4BhB,EAAcS,EAAeyD,GACnEvD,EAAe,EACfC,EAAS,EACb,KAAOD,EAAeX,EAAa9pD,QAAQ,CACzC,MAAMkuD,EAAuBpD,EAA4BhB,EAAcW,EAAcuD,GAC/EG,EAAoBD,EAAuBxD,EAC3C0D,EAAqB1F,EAAU8B,EAC/BG,EAAc74C,KAAKC,IAAIo8C,EAAmBC,GAEhDtE,EAAaS,GAAeK,cAAcd,EAAaW,GAAeC,EAAQF,EAASG,GAAa,GAEpGH,GAAWG,EACPH,IAAY9B,IACd6B,IACAC,EAAU,GAEZE,GAAUC,EACND,IAAWwD,IACbzD,IACAC,EAAS,GAIK,IAAZF,GAAmC,IAAlBD,GAC2C,IAA1DT,EAAaS,EAAgB,GAAGnyC,SAASswC,EAAU,KACrDoB,EAAaS,GAAeK,cAAcd,EAAaS,EAAgB,GAAI7B,EAAU,EAAG8B,IAAW,GAAG,GAEtGV,EAAaS,EAAgB,GAAGQ,QAAQrC,EAAU,EAAGE,G,CAM3DkB,EAAaS,GAAetL,aAAauL,EAAS9B,EAASE,GAG3D,IAAIyF,EAAgB,EACpB,IAAK,IAAIlwD,EAAI2rD,EAAa9pD,OAAS,EAAG7B,EAAI,IACpCA,EAAIosD,GAAwD,IAAvCT,EAAa3rD,GAAGwR,oBADExR,IAEzCkwD,IAMAA,EAAgB,IAClBlF,EAAS7lD,KAAKoH,EAAIo/C,EAAa9pD,OAASquD,GACxClF,EAAS7lD,KAAK+qD,IAGhB3jD,GAAKo/C,EAAa9pD,OAAS,C,CAE7B,OAAOmpD,CACT,EAOA,uCAA4CvmD,EAAkCumD,GAC5E,MAAMK,EAAmB,GAEzB,IAAI8E,EAAoB,EACpBC,EAAoBpF,EAASmF,GAC7BE,EAAoB,EACxB,IAAK,IAAIrwD,EAAI,EAAGA,EAAIyE,EAAM5C,OAAQ7B,IAChC,GAAIowD,IAAsBpwD,EAAG,CAC3B,MAAMkwD,EAAgBlF,IAAWmF,GAGjC1rD,EAAMwlC,gBAAgBj6B,KAAK,CACzB5B,MAAOpO,EAAIqwD,EACXvyC,OAAQoyC,IAGVlwD,GAAKkwD,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoBpF,IAAWmF,E,MAE/B9E,EAAOlmD,KAAKnF,GAGhB,MAAO,CACLqrD,SACAE,aAAc8E,EAElB,EAQA,sCAA2C5rD,EAAkC6rD,GAE3E,MAAMC,EAA+B,GACrC,IAAK,IAAIvwD,EAAI,EAAGA,EAAIswD,EAAUzuD,OAAQ7B,IACpCuwD,EAAeprD,KAAKV,EAAM8E,IAAI+mD,EAAUtwD,KAI1C,IAAK,IAAIA,EAAI,EAAGA,EAAIuwD,EAAe1uD,OAAQ7B,IACzCyE,EAAM4E,IAAIrJ,EAAGuwD,EAAevwD,IAE9ByE,EAAM5C,OAASyuD,EAAUzuD,MAC3B,EAgBA,0CAA+C8pD,EAA4BkE,EAAiBtF,GAC1F,MAAMiG,EAA2B,GAC3BC,EAAc9E,EAAan+C,KAAI,CAAC+1C,EAAGvjD,IAAM2sD,EAA4BhB,EAAc3rD,EAAG6vD,KAAUa,QAAO,CAAChT,EAAG9nB,IAAM8nB,EAAI9nB,IAI3H,IAAI22B,EAAS,EACToE,EAAU,EACVC,EAAiB,EACrB,KAAOA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiBrG,EAAS,CAE1CiG,EAAerrD,KAAKsrD,EAAcG,GAClC,K,CAEFrE,GAAUhC,EACV,MAAMsG,EAAmBlE,EAA4BhB,EAAcgF,EAASd,GACxEtD,EAASsE,IACXtE,GAAUsE,EACVF,KAEF,MAAMG,EAA8D,IAA/CnF,EAAagF,GAAS12C,SAASsyC,EAAS,GACzDuE,GACFvE,IAEF,MAAMh7C,EAAau/C,EAAevG,EAAU,EAAIA,EAChDiG,EAAerrD,KAAKoM,GACpBq/C,GAAkBr/C,C,CAGpB,OAAOi/C,CACT,EAEA,+B,qFCzMA,gBACA,UAEA,SAMA,MAAaO,UAAkB,EAAA5wD,WAW7BC,YACmB2Q,EACA3G,GAEjB7J,QAHiB,KAAAwQ,gBAAAA,EACA,KAAA3G,eAAAA,EARF,KAAA4mD,kBAAoBrwD,KAAK6B,SAAS,IAAI,EAAAkI,cACvC,KAAAsd,iBAAmBrnB,KAAKqwD,kBAAkBpmD,MAUxDjK,KAAKqW,QACLrW,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,cAAc,IAAM3e,KAAKyc,OAAOzc,KAAKyJ,eAAe8D,KAAMvN,KAAKyJ,eAAe/I,SACxIV,KAAK6B,SAAS7B,KAAKoQ,gBAAgBuO,uBAAuB,gBAAgB,IAAM3e,KAAKopD,kBACvF,CAEO/yC,QACLrW,KAAKswD,QAAU,IAAI,EAAAC,QAAO,EAAMvwD,KAAKoQ,gBAAiBpQ,KAAKyJ,gBAC3DzJ,KAAKswD,QAAQ5G,mBAIb1pD,KAAKwwD,KAAO,IAAI,EAAAD,QAAO,EAAOvwD,KAAKoQ,gBAAiBpQ,KAAKyJ,gBACzDzJ,KAAKonB,cAAgBpnB,KAAKswD,QAC1BtwD,KAAKqwD,kBAAkBhhD,KAAK,CAC1BiY,aAActnB,KAAKswD,QACnBG,eAAgBzwD,KAAKwwD,OAGvBxwD,KAAKopD,eACP,CAKWppC,UACT,OAAOhgB,KAAKwwD,IACd,CAKWr4C,aACT,OAAOnY,KAAKonB,aACd,CAKWoG,aACT,OAAOxtB,KAAKswD,OACd,CAKOnP,uBACDnhD,KAAKonB,gBAAkBpnB,KAAKswD,UAGhCtwD,KAAKswD,QAAQ3kD,EAAI3L,KAAKwwD,KAAK7kD,EAC3B3L,KAAKswD,QAAQ1kD,EAAI5L,KAAKwwD,KAAK5kD,EAI3B5L,KAAKwwD,KAAK9rC,kBACV1kB,KAAKwwD,KAAKznD,QACV/I,KAAKonB,cAAgBpnB,KAAKswD,QAC1BtwD,KAAKqwD,kBAAkBhhD,KAAK,CAC1BiY,aAActnB,KAAKswD,QACnBG,eAAgBzwD,KAAKwwD,OAEzB,CAKOtP,kBAAkByI,GACnB3pD,KAAKonB,gBAAkBpnB,KAAKwwD,OAKhCxwD,KAAKwwD,KAAK9G,iBAAiBC,GAC3B3pD,KAAKwwD,KAAK7kD,EAAI3L,KAAKswD,QAAQ3kD,EAC3B3L,KAAKwwD,KAAK5kD,EAAI5L,KAAKswD,QAAQ1kD,EAC3B5L,KAAKonB,cAAgBpnB,KAAKwwD,KAC1BxwD,KAAKqwD,kBAAkBhhD,KAAK,CAC1BiY,aAActnB,KAAKwwD,KACnBC,eAAgBzwD,KAAKswD,UAEzB,CAOO7zC,OAAOmtC,EAAiBC,GAC7B7pD,KAAKswD,QAAQ7zC,OAAOmtC,EAASC,GAC7B7pD,KAAKwwD,KAAK/zC,OAAOmtC,EAASC,GAC1B7pD,KAAKopD,cAAcQ,EACrB,CAMOR,cAAc/pD,GACnBW,KAAKswD,QAAQlH,cAAc/pD,GAC3BW,KAAKwwD,KAAKpH,cAAc/pD,EAC1B,EApHF,a,mFCVA,eACA,SACA,UAKA,MAAasR,UAAiB,EAAA8nB,cAA9B,c,oBAQS,KAAA6D,QAAU,EACV,KAAA7zB,GAAK,EACL,KAAAD,GAAK,EACL,KAAA4I,SAA2B,IAAI,EAAAo2C,cAC/B,KAAAjrB,aAAe,EAoExB,CA9ES6B,oBAAoBr3B,GACzB,MAAM2pD,EAAM,IAAI//C,EAEhB,OADA+/C,EAAIj0B,gBAAgB11B,GACb2pD,CACT,CAQOl0B,aACL,OAAsB,QAAfx8B,KAAKs8B,OACd,CAEOhjB,WACL,OAAOtZ,KAAKs8B,SAAW,EACzB,CAEOnE,WACL,OAAmB,QAAfn4B,KAAKs8B,QACAt8B,KAAKu8B,aAEK,QAAfv8B,KAAKs8B,SACA,IAAAqiB,qBAAmC,QAAf3+C,KAAKs8B,SAE3B,EACT,CAOOhF,UACL,OAAQt3B,KAAKw8B,aACTx8B,KAAKu8B,aAAa7Y,WAAW1jB,KAAKu8B,aAAar7B,OAAS,GACzC,QAAflB,KAAKs8B,OACX,CAEOG,gBAAgB11B,GACrB/G,KAAKyI,GAAK1B,EAAM,EAAAunD,sBAChBtuD,KAAKwI,GAAK,EACV,IAAImoD,GAAW,EAEf,GAAI5pD,EAAM,EAAAimD,sBAAsB9rD,OAAS,EACvCyvD,GAAW,OAER,GAA2C,IAAvC5pD,EAAM,EAAAimD,sBAAsB9rD,OAAc,CACjD,MAAMo1C,EAAOvvC,EAAM,EAAAimD,sBAAsBtpC,WAAW,GAGpD,GAAI,OAAU4yB,GAAQA,GAAQ,MAAQ,CACpC,MAAM6M,EAASp8C,EAAM,EAAAimD,sBAAsBtpC,WAAW,GAClD,OAAUy/B,GAAUA,GAAU,MAChCnjD,KAAKs8B,QAA6B,MAAjBga,EAAO,OAAkB6M,EAAS,MAAS,MAAYp8C,EAAM,EAAAgmD,wBAA0B,GAGxG4D,GAAW,C,MAIbA,GAAW,C,MAIb3wD,KAAKs8B,QAAUv1B,EAAM,EAAAimD,sBAAsBtpC,WAAW,GAAM3c,EAAM,EAAAgmD,wBAA0B,GAE1F4D,IACF3wD,KAAKu8B,aAAex1B,EAAM,EAAAimD,sBAC1BhtD,KAAKs8B,QAAU,QAA4Bv1B,EAAM,EAAAgmD,wBAA0B,GAE/E,CAEOrwB,gBACL,MAAO,CAAC18B,KAAKyI,GAAIzI,KAAKm4B,WAAYn4B,KAAKsZ,WAAYtZ,KAAKs3B,UAC1D,EA/EF,Y,0UCRa,EAAAs5B,cAAgB,EAChB,EAAAC,aAAe,IAAa,EAAAD,eAAiB,EAC7C,EAAAE,YAAc,EAEd,EAAAxC,qBAAuB,EACvB,EAAAtB,qBAAuB,EACvB,EAAAD,sBAAwB,EACxB,EAAAzF,qBAAuB,EAOvB,EAAAuB,eAAiB,GACjB,EAAA7J,gBAAkB,EAClB,EAAAznB,eAAiB,EAOjB,EAAAW,qBAAuB,IACvB,EAAA6wB,sBAAwB,EACxB,EAAAxB,qBAAuB,E,kFCzBpC,gBACA,SAGA,MAAa2F,EAYXztD,YACS8Q,GAAA,KAAAA,KAAAA,EAVF,KAAAwgD,YAAsB,EACrB,KAAAtM,aAA8B,GAE9B,KAAAuM,IAAc9D,EAAO+D,UAGZ,KAAAC,WAAalxD,KAAK6B,SAAS,IAAI,EAAAkI,cAChC,KAAAojD,UAAYntD,KAAKkxD,WAAWjnD,KAK5C,CARW6yB,SAAe,OAAO98B,KAAKgxD,GAAK,CAUpCznD,UACDvJ,KAAK+wD,aAGT/wD,KAAK+wD,YAAa,EAClB/wD,KAAKuQ,MAAQ,EAEbvQ,KAAKkxD,WAAW7hD,QAChB,IAAAjB,cAAapO,KAAKykD,cAClBzkD,KAAKykD,aAAavjD,OAAS,EAC7B,CAEOW,SAAgCsvD,GAErC,OADAnxD,KAAKykD,aAAajgD,KAAK2sD,GAChBA,CACT,EAhCF,WACiB,EAAAF,QAAU,C,oGCEd,EAAA3U,SAAoD,CAAC,EAKrD,EAAAyE,gBAAwC,EAAAzE,SAAY,EAYjE,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,KAOP,EAAAA,SAAA,OAAgBhyC,EAOhB,EAAAgyC,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA8U,EACA,EAAA9U,SAAA,GAAgB,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EACA,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EACA,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,KAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,I,eCrPP,IAAiB9kC,EA2EAqjC,E,+EA3EjB,SAAiBrjC,GAEF,EAAA65C,IAAM,KAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAA5tC,IAAM,IAEN,EAAA6tC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAA5X,IAAM,IAEN,EAAAO,GAAM,KAEN,EAAAE,GAAM,KAEN,EAAAP,GAAM,KAEN,EAAAE,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAv2B,GAAM,KAEN,EAAA62B,GAAM,IAEN,EAAAE,GAAM,IAEN,EAAAgX,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAA56C,IAAM,IAEN,EAAA66C,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAjjC,IAAM,GACpB,CArED,CAAiBjY,EAAA,EAAAA,KAAA,EAAAA,GAAE,MA2EFqjC,EAAA,EAAAA,KAAA,EAAAA,GAAE,KAEJ8X,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAhY,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAgY,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAA/X,IAAM,IAEN,EAAAgY,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,KAAO,IAEP,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAv8C,GAAK,IAEL,EAAAw8C,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,KAEJ,EAAA38C,aAAA,EAAAA,WAAU,KACZC,GAAK,GAAGJ,EAAGC,O,iGChJ1B,gBAGM88C,EAA2D,CAE/D,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KAGV,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,KAAM,KACZ,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAM,MAGd,iCACEttD,EACAutD,EACArvD,EACAge,GAEA,MAAM3S,EAA0B,CAC9BrH,KAAM,EAGNsX,QAAQ,EAER5d,SAAKyH,GAEDmqD,GAAaxtD,EAAGiZ,SAAW,EAAI,IAAMjZ,EAAGgZ,OAAS,EAAI,IAAMhZ,EAAG8Y,QAAU,EAAI,IAAM9Y,EAAGwc,QAAU,EAAI,GACzG,OAAQxc,EAAGgd,SACT,KAAK,EACY,sBAAXhd,EAAGpE,IAEH2N,EAAO3N,IADL2xD,EACW,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,wBAAXxQ,EAAGpE,IAER2N,EAAO3N,IADL2xD,EACW,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,yBAAXxQ,EAAGpE,IAER2N,EAAO3N,IADL2xD,EACW,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,wBAAXxQ,EAAGpE,MAER2N,EAAO3N,IADL2xD,EACW,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,MAG1B,MACF,KAAK,EAEH,GAAIxQ,EAAGgZ,OAAQ,CACbzP,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,EAAAD,GAAGiY,IACzB,K,CAEFjf,EAAO3N,IAAM,EAAA2U,GAAGiY,IAChB,MACF,KAAK,EAEH,GAAIxoB,EAAGiZ,SAAU,CACf1P,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,KACtB,K,CAEFjH,EAAO3N,IAAM,EAAA2U,GAAG+iC,GAChB/pC,EAAOiQ,QAAS,EAChB,MACF,KAAK,GAEHjQ,EAAO3N,IAAMoE,EAAGgZ,OAAS,EAAAzI,GAAGC,IAAM,EAAAD,GAAGoM,GAAK,EAAApM,GAAGoM,GAC7CpT,EAAOiQ,QAAS,EAChB,MACF,KAAK,GAEHjQ,EAAO3N,IAAM,EAAA2U,GAAGC,IACZxQ,EAAGgZ,SACLzP,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,EAAAD,GAAGC,KAE3BjH,EAAOiQ,QAAS,EAChB,MACF,KAAK,GAEH,GAAIxZ,EAAGwc,QACL,MAEEgxC,GACFjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAI5CjkD,EAAO3N,MAAQ,EAAA2U,GAAGC,IAAM,UAC1BjH,EAAO3N,IAAM,EAAA2U,GAAGC,KAAOtS,EAAQ,IAAM,WAGvCqL,EAAO3N,IADE2xD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAIxQ,EAAGwc,QACL,MAEEgxC,GACFjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAI5CjkD,EAAO3N,MAAQ,EAAA2U,GAAGC,IAAM,UAC1BjH,EAAO3N,IAAM,EAAA2U,GAAGC,KAAOtS,EAAQ,IAAM,WAGvCqL,EAAO3N,IADE2xD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAIxQ,EAAGwc,QACL,MAEEgxC,GACFjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAI3CtvD,GAASqL,EAAO3N,MAAQ,EAAA2U,GAAGC,IAAM,UACpCjH,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,UAGxBjH,EAAO3N,IADE2xD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAIxQ,EAAGwc,QACL,MAEEgxC,GACFjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAI3CtvD,GAASqL,EAAO3N,MAAQ,EAAA2U,GAAGC,IAAM,UACpCjH,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,UAGxBjH,EAAO3N,IADE2xD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEExQ,EAAGiZ,UAAajZ,EAAG8Y,UAGtBvP,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAExB,MACF,KAAK,GAGDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEnC,EAAAj9C,GAAGC,IAAM,MAExB,MACF,KAAK,GAGDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IACvCD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAGDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IACvCD,EACI,EAAAh9C,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAECxQ,EAAGiZ,SACL1P,EAAOrH,KAAO,EACLlC,EAAG8Y,QACZvP,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEhDjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,MAExB,MACF,KAAK,GAECxQ,EAAGiZ,SACL1P,EAAOrH,KAAO,EACLlC,EAAG8Y,QACZvP,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEhDjkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM,MAExB,MACF,KAAK,IAGDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEnC,EAAAj9C,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEnC,EAAAj9C,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEnC,EAAAj9C,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,OAASg9C,EAAY,GAAK,IAEnC,EAAAj9C,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDjH,EAAO3N,IADL4xD,EACW,EAAAj9C,GAAGC,IAAM,QAAUg9C,EAAY,GAAK,IAEpC,EAAAj9C,GAAGC,IAAM,OAExB,MACF,QAEE,IAAIxQ,EAAG8Y,SAAY9Y,EAAGiZ,UAAajZ,EAAGgZ,QAAWhZ,EAAGwc,QAiB7C,GAAMte,IAASge,IAAoBlc,EAAGgZ,QAAWhZ,EAAGwc,SA0BhDte,GAAU8B,EAAGgZ,QAAWhZ,EAAG8Y,SAAY9Y,EAAGiZ,WAAYjZ,EAAGwc,QAIzDxc,EAAGpE,MAAQoE,EAAG8Y,UAAY9Y,EAAGgZ,SAAWhZ,EAAGwc,SAAWxc,EAAGgd,SAAW,IAAwB,IAAlBhd,EAAGpE,IAAI3B,OAE1FsP,EAAO3N,IAAMoE,EAAGpE,IACPoE,EAAGpE,KAAOoE,EAAG8Y,UACP,MAAX9Y,EAAGpE,MACL2N,EAAO3N,IAAM,EAAA2U,GAAGi7C,IAEH,MAAXxrD,EAAGpE,MACL2N,EAAO3N,IAAM,EAAA2U,GAAG65C,MAXC,KAAfpqD,EAAGgd,UACLzT,EAAOrH,KAAO,OA5BkD,CAElE,MAAMurD,EAAaH,EAAqBttD,EAAGgd,SACrCphB,EAAM6xD,aAAU,EAAVA,EAAcztD,EAAGiZ,SAAe,EAAJ,GACxC,GAAIrd,EACF2N,EAAO3N,IAAM,EAAA2U,GAAGC,IAAM5U,OACjB,GAAIoE,EAAGgd,SAAW,IAAMhd,EAAGgd,SAAW,GAAI,CAC/C,MAAMA,EAAUhd,EAAG8Y,QAAU9Y,EAAGgd,QAAU,GAAKhd,EAAGgd,QAAU,GAC5D,IAAI0wC,EAAYtwC,OAAOC,aAAaL,GAChChd,EAAGiZ,WACLy0C,EAAYA,EAAUC,eAExBpkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAMk9C,C,MACjB,GAAe,SAAX1tD,EAAGpE,KAAkBoE,EAAGqvC,KAAKyN,WAAW,OAAQ,CAMzD,IAAI4Q,EAAY1tD,EAAGqvC,KAAKnR,MAAM,EAAG,GAC5Bl+B,EAAGiZ,WACNy0C,EAAYA,EAAUE,eAExBrkD,EAAO3N,IAAM,EAAA2U,GAAGC,IAAMk9C,EACtBnkD,EAAOiQ,QAAS,C,OAxCdxZ,EAAGgd,SAAW,IAAMhd,EAAGgd,SAAW,GACpCzT,EAAO3N,IAAMwhB,OAAOC,aAAard,EAAGgd,QAAU,IACtB,KAAfhd,EAAGgd,QACZzT,EAAO3N,IAAM,EAAA2U,GAAG65C,IACPpqD,EAAGgd,SAAW,IAAMhd,EAAGgd,SAAW,GAE3CzT,EAAO3N,IAAMwhB,OAAOC,aAAard,EAAGgd,QAAU,GAAK,IAC3B,KAAfhd,EAAGgd,QACZzT,EAAO3N,IAAM,EAAA2U,GAAGiY,IACQ,MAAfxoB,EAAGgd,QACZzT,EAAO3N,IAAM,EAAA2U,GAAGC,IACQ,MAAfxQ,EAAGgd,QACZzT,EAAO3N,IAAM,EAAA2U,GAAG86C,GACQ,MAAfrrD,EAAGgd,UACZzT,EAAO3N,IAAM,EAAA2U,GAAG+6C,IA8CxB,OAAO/hD,CACT,C,0IC9XA,+BAAoC+9C,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNlqC,OAAOC,aAAiC,OAAnBiqC,GAAa,KAAgBlqC,OAAOC,aAAciqC,EAAY,KAAS,QAE9FlqC,OAAOC,aAAaiqC,EAC7B,EAOA,yBAA8BntC,EAAmBnf,EAAgB,EAAGC,EAAckf,EAAKlgB,QACrF,IAAIsP,EAAS,GACb,IAAK,IAAInR,EAAI4C,EAAO5C,EAAI6C,IAAO7C,EAAG,CAChC,IAAI67B,EAAY9Z,EAAK/hB,GACjB67B,EAAY,OAMdA,GAAa,MACb1qB,GAAU6T,OAAOC,aAAiC,OAAnB4W,GAAa,KAAgB7W,OAAOC,aAAc4W,EAAY,KAAS,QAEtG1qB,GAAU6T,OAAOC,aAAa4W,E,CAGlC,OAAO1qB,CACT,EAMA,oCACU,KAAAskD,SAAmB,CAkE7B,CA7DS/rD,QACL/I,KAAK80D,SAAW,CAClB,CAUOjX,OAAOxuB,EAAe3rB,GAC3B,MAAMxC,EAASmuB,EAAMnuB,OAErB,IAAKA,EACH,OAAO,EAGT,IAAI4L,EAAO,EACPioD,EAAW,EAGf,GAAI/0D,KAAK80D,SAAU,CACjB,MAAM3R,EAAS9zB,EAAM3L,WAAWqxC,KAC5B,OAAU5R,GAAUA,GAAU,MAChCz/C,EAAOoJ,KAAqC,MAA1B9M,KAAK80D,SAAW,OAAkB3R,EAAS,MAAS,OAGtEz/C,EAAOoJ,KAAU9M,KAAK80D,SACtBpxD,EAAOoJ,KAAUq2C,GAEnBnjD,KAAK80D,SAAW,C,CAGlB,IAAK,IAAIz1D,EAAI01D,EAAU11D,EAAI6B,IAAU7B,EAAG,CACtC,MAAMi3C,EAAOjnB,EAAM3L,WAAWrkB,GAE9B,GAAI,OAAUi3C,GAAQA,GAAQ,MAA9B,CACE,KAAMj3C,GAAK6B,EAET,OADAlB,KAAK80D,SAAWxe,EACTxpC,EAET,MAAMq2C,EAAS9zB,EAAM3L,WAAWrkB,GAC5B,OAAU8jD,GAAUA,GAAU,MAChCz/C,EAAOoJ,KAA4B,MAAjBwpC,EAAO,OAAkB6M,EAAS,MAAS,OAG7Dz/C,EAAOoJ,KAAUwpC,EACjB5yC,EAAOoJ,KAAUq2C,E,MAIR,QAAT7M,IAIJ5yC,EAAOoJ,KAAUwpC,E,CAEnB,OAAOxpC,CACT,GAMF,kCACS,KAAAkoD,QAAsB,IAAIC,WAAW,EAgO9C,CA3NSlsD,QACL/I,KAAKg1D,QAAQ3U,KAAK,EACpB,CAUOxC,OAAOxuB,EAAmB3rB,GAC/B,MAAMxC,EAASmuB,EAAMnuB,OAErB,IAAKA,EACH,OAAO,EAGT,IACIg0D,EACAC,EACAC,EACAC,EAJAvoD,EAAO,EAKPouB,EAAY,EACZ65B,EAAW,EAGf,GAAI/0D,KAAKg1D,QAAQ,GAAI,CACnB,IAAIM,GAAiB,EACjBjH,EAAKruD,KAAKg1D,QAAQ,GACtB3G,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAC3E,IACIkH,EADApuD,EAAM,EAEV,MAAQouD,EAA4B,GAAtBv1D,KAAKg1D,UAAU7tD,KAAgBA,EAAM,GACjDknD,IAAO,EACPA,GAAMkH,EAGR,MAAMpsD,EAAsC,MAAV,IAAlBnJ,KAAKg1D,QAAQ,IAAwB,EAAmC,MAAV,IAAlBh1D,KAAKg1D,QAAQ,IAAwB,EAAI,EAC/FQ,EAAUrsD,EAAOhC,EACvB,KAAO4tD,EAAWS,GAAS,CACzB,GAAIT,GAAY7zD,EACd,OAAO,EAGT,GADAq0D,EAAMlmC,EAAM0lC,KACS,MAAV,IAANQ,GAAsB,CAEzBR,IACAO,GAAiB,EACjB,K,CAGAt1D,KAAKg1D,QAAQ7tD,KAASouD,EACtBlH,IAAO,EACPA,GAAY,GAANkH,C,CAGLD,IAEU,IAATnsD,EACEklD,EAAK,IAEP0G,IAEArxD,EAAOoJ,KAAUuhD,EAED,IAATllD,EACLklD,EAAK,MAAWA,GAAM,OAAUA,GAAM,OAAkB,QAAPA,IAGnD3qD,EAAOoJ,KAAUuhD,GAGfA,EAAK,OAAYA,EAAK,UAGxB3qD,EAAOoJ,KAAUuhD,IAIvBruD,KAAKg1D,QAAQ3U,KAAK,E,CAIpB,MAAMoV,EAAWv0D,EAAS,EAC1B,IAAI7B,EAAI01D,EACR,KAAO11D,EAAI6B,GAAQ,CAejB,SAAO7B,EAAIo2D,IACiB,KAApBP,EAAQ7lC,EAAMhwB,KACU,KAAxB81D,EAAQ9lC,EAAMhwB,EAAI,KACM,KAAxB+1D,EAAQ/lC,EAAMhwB,EAAI,KACM,KAAxBg2D,EAAQhmC,EAAMhwB,EAAI,MAExBqE,EAAOoJ,KAAUooD,EACjBxxD,EAAOoJ,KAAUqoD,EACjBzxD,EAAOoJ,KAAUsoD,EACjB1xD,EAAOoJ,KAAUuoD,EACjBh2D,GAAK,EAOP,GAHA61D,EAAQ7lC,EAAMhwB,KAGV61D,EAAQ,IACVxxD,EAAOoJ,KAAUooD,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAI71D,GAAK6B,EAEP,OADAlB,KAAKg1D,QAAQ,GAAKE,EACXpoD,EAGT,GADAqoD,EAAQ9lC,EAAMhwB,KACS,MAAV,IAAR81D,GAAwB,CAE3B91D,IACA,Q,CAGF,GADA67B,GAAqB,GAARg6B,IAAiB,EAAa,GAARC,EAC/Bj6B,EAAY,IAAM,CAEpB77B,IACA,Q,CAEFqE,EAAOoJ,KAAUouB,C,MAGZ,GAAuB,MAAV,IAARg6B,GAAwB,CAClC,GAAI71D,GAAK6B,EAEP,OADAlB,KAAKg1D,QAAQ,GAAKE,EACXpoD,EAGT,GADAqoD,EAAQ9lC,EAAMhwB,KACS,MAAV,IAAR81D,GAAwB,CAE3B91D,IACA,Q,CAEF,GAAIA,GAAK6B,EAGP,OAFAlB,KAAKg1D,QAAQ,GAAKE,EAClBl1D,KAAKg1D,QAAQ,GAAKG,EACXroD,EAGT,GADAsoD,EAAQ/lC,EAAMhwB,KACS,MAAV,IAAR+1D,GAAwB,CAE3B/1D,IACA,Q,CAGF,GADA67B,GAAqB,GAARg6B,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,EACtDl6B,EAAY,MAAWA,GAAa,OAAUA,GAAa,OAAyB,QAAdA,EAExE,SAEFx3B,EAAOoJ,KAAUouB,C,MAGZ,GAAuB,MAAV,IAARg6B,GAAwB,CAClC,GAAI71D,GAAK6B,EAEP,OADAlB,KAAKg1D,QAAQ,GAAKE,EACXpoD,EAGT,GADAqoD,EAAQ9lC,EAAMhwB,KACS,MAAV,IAAR81D,GAAwB,CAE3B91D,IACA,Q,CAEF,GAAIA,GAAK6B,EAGP,OAFAlB,KAAKg1D,QAAQ,GAAKE,EAClBl1D,KAAKg1D,QAAQ,GAAKG,EACXroD,EAGT,GADAsoD,EAAQ/lC,EAAMhwB,KACS,MAAV,IAAR+1D,GAAwB,CAE3B/1D,IACA,Q,CAEF,GAAIA,GAAK6B,EAIP,OAHAlB,KAAKg1D,QAAQ,GAAKE,EAClBl1D,KAAKg1D,QAAQ,GAAKG,EAClBn1D,KAAKg1D,QAAQ,GAAKI,EACXtoD,EAGT,GADAuoD,EAAQhmC,EAAMhwB,KACS,MAAV,IAARg2D,GAAwB,CAE3Bh2D,IACA,Q,CAGF,GADA67B,GAAqB,EAARg6B,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,EAC7En6B,EAAY,OAAYA,EAAY,QAEtC,SAEFx3B,EAAOoJ,KAAUouB,C,EAKrB,OAAOpuB,CACT,E,kFChVF,MAAM4oD,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7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","sources":["webpack://@nubezartech/devconsole/webpack/universalModuleDefinition","webpack://@nubezartech/devconsole/./src/browser/AccessibilityManager.ts","webpack://@nubezartech/devconsole/./src/browser/Clipboard.ts","webpack://@nubezartech/devconsole/./src/browser/ColorContrastCache.ts","webpack://@nubezartech/devconsole/./src/browser/Dom.ts","webpack://@nubezartech/devconsole/./src/browser/Lifecycle.ts","webpack://@nubezartech/devconsole/./src/browser/Linkifier2.ts","webpack://@nubezartech/devconsole/./src/browser/LocalizableStrings.ts","webpack://@nubezartech/devconsole/./src/browser/OscLinkProvider.ts","webpack://@nubezartech/devconsole/./src/browser/RenderDebouncer.ts","webpack://@nubezartech/devconsole/./src/browser/ScreenDprMonitor.ts","webpack://@nubezartech/devconsole/./src/browser/Terminal.ts","webpack://@nubezartech/devconsole/./src/browser/TimeBasedDebouncer.ts","webpack://@nubezartech/devconsole/./src/browser/Viewport.ts","webpack://@nubezartech/devconsole/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://@nubezartech/devconsole/./src/browser/decorations/ColorZoneStore.ts","webpack://@nubezartech/devconsole/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://@nubezartech/devconsole/./src/browser/input/CompositionHelper.ts","webpack://@nubezartech/devconsole/./src/browser/input/Mouse.ts","webpack://@nubezartech/devconsole/./src/browser/input/MoveToCell.ts","webpack://@nubezartech/devconsole/./src/browser/renderer/dom/DomRenderer.ts","webpack://@nubezartech/devconsole/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://@nubezartech/devconsole/./src/browser/renderer/shared/Constants.ts","webpack://@nubezartech/devconsole/./src/browser/renderer/shared/RendererUtils.ts","webpack://@nubezartech/devconsole/./src/browser/selection/SelectionModel.ts","webpack://@nubezartech/devconsole/./src/browser/services/CharSizeService.ts","webpack://@nubezartech/devconsole/./src/browser/services/CharacterJoinerService.ts","webpack://@nubezartech/devconsole/./src/browser/services/CoreBrowserService.ts","webpack://@nubezartech/devconsole/./src/browser/services/MouseService.ts","webpack://@nubezartech/devconsole/./src/browser/services/RenderService.ts","webpack://@nubezartech/devconsole/./src/browser/services/SelectionService.ts","webpack://@nubezartech/devconsole/./src/browser/services/Services.ts","webpack://@nubezartech/devconsole/./src/browser/services/ThemeService.ts","webpack://@nubezartech/devconsole/./src/common/CircularList.ts","webpack://@nubezartech/devconsole/./src/common/Clone.ts","webpack://@nubezartech/devconsole/./src/common/Color.ts","webpack://@nubezartech/devconsole/./src/common/CoreTerminal.ts","webpack://@nubezartech/devconsole/./src/common/EventEmitter.ts","webpack://@nubezartech/devconsole/./src/common/InputHandler.ts","webpack://@nubezartech/devconsole/./src/common/Lifecycle.ts","webpack://@nubezartech/devconsole/./src/common/MultiKeyMap.ts","webpack://@nubezartech/devconsole/./src/common/Platform.ts","webpack://@nubezartech/devconsole/./src/common/SortedList.ts","webpack://@nubezartech/devconsole/./src/common/TaskQueue.ts","webpack://@nubezartech/devconsole/./src/common/WindowsMode.ts","webpack://@nubezartech/devconsole/./src/common/buffer/AttributeData.ts","webpack://@nubezartech/devconsole/./src/common/buffer/Buffer.ts","webpack://@nubezartech/devconsole/./src/common/buffer/BufferLine.ts","webpack://@nubezartech/devconsole/./src/common/buffer/BufferRange.ts","webpack://@nubezartech/devconsole/./src/common/buffer/BufferReflow.ts","webpack://@nubezartech/devconsole/./src/common/buffer/BufferSet.ts","webpack://@nubezartech/devconsole/./src/common/buffer/CellData.ts","webpack://@nubezartech/devconsole/./src/common/buffer/Constants.ts","webpack://@nubezartech/devconsole/./src/common/buffer/Marker.ts","webpack://@nubezartech/devconsole/./src/common/data/Charsets.ts","webpack://@nubezartech/devconsole/./src/common/data/EscapeSequences.ts","webpack://@nubezartech/devconsole/./src/common/input/Keyboard.ts","webpack://@nubezartech/devconsole/./src/common/input/TextDecoder.ts","webpack://@nubezartech/devconsole/./src/common/input/UnicodeV6.ts","webpack://@nubezartech/devconsole/./src/common/input/WriteBuffer.ts","webpack://@nubezartech/devconsole/./src/common/input/XParseColor.ts","webpack://@nubezartech/devconsole/./src/common/parser/Constants.ts","webpack://@nubezartech/devconsole/./src/common/parser/DcsParser.ts","webpack://@nubezartech/devconsole/./src/common/parser/EscapeSequenceParser.ts","webpack://@nubezartech/devconsole/./src/common/parser/OscParser.ts","webpack://@nubezartech/devconsole/./src/common/parser/Params.ts","webpack://@nubezartech/devconsole/./src/common/public/AddonManager.ts","webpack://@nubezartech/devconsole/./src/common/public/BufferApiView.ts","webpack://@nubezartech/devconsole/./src/common/public/BufferLineApiView.ts","webpack://@nubezartech/devconsole/./src/common/public/BufferNamespaceApi.ts","webpack://@nubezartech/devconsole/./src/common/public/ParserApi.ts","webpack://@nubezartech/devconsole/./src/common/public/UnicodeApi.ts","webpack://@nubezartech/devconsole/./src/common/services/BufferService.ts","webpack://@nubezartech/devconsole/./src/common/services/CharsetService.ts","webpack://@nubezartech/devconsole/./src/common/services/CoreMouseService.ts","webpack://@nubezartech/devconsole/./src/common/services/CoreService.ts","webpack://@nubezartech/devconsole/./src/common/services/DecorationService.ts","webpack://@nubezartech/devconsole/./src/common/services/InstantiationService.ts","webpack://@nubezartech/devconsole/./src/common/services/LogService.ts","webpack://@nubezartech/devconsole/./src/common/services/OptionsService.ts","webpack://@nubezartech/devconsole/./src/common/services/OscLinkService.ts","webpack://@nubezartech/devconsole/./src/common/services/ServiceRegistry.ts","webpack://@nubezartech/devconsole/./src/common/services/Services.ts","webpack://@nubezartech/devconsole/./src/common/services/UnicodeService.ts","webpack://@nubezartech/devconsole/webpack/bootstrap","webpack://@nubezartech/devconsole/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n          // OSC links always use underline and pointer decorations\n          result.push({\n            text,\n            range,\n            activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n            hover: (e, text) => linkHandler?.hover?.(e, text, range),\n            leave: (e, text) => linkHandler?.leave?.(e, text, range)\n          });\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   */\n  enqueue(task: () => void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      this._tasks[this._i++]();\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = performance.now();\n      this._tasks[this._i++]();\n      taskDuration = performance.now() - taskDuration;\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      if (longestTask * 1.5 > deadline.timeRemaining()) {\n        this._start();\n        return;\n      }\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = performance.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - performance.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","options","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","canvas","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","fill","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","includes","isSafari","test","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","performance","timeRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","protocol","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}